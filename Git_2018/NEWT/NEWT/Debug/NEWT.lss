
NEWT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000019c  00800200  00002566  000025fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002566  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000a49  0080039c  0080039c  00002796  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002796  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000027f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000220  00000000  00000000  00002834  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003022  00000000  00000000  00002a54  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000012b8  00000000  00000000  00005a76  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000016cf  00000000  00000000  00006d2e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000007e8  00000000  00000000  00008400  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000ce0  00000000  00000000  00008be8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001e9e  00000000  00000000  000098c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e0  00000000  00000000  0000b766  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	b7 c1       	rjmp	.+878    	; 0x370 <__ctors_end>
       2:	00 00       	nop
       4:	d5 c1       	rjmp	.+938    	; 0x3b0 <__bad_interrupt>
       6:	00 00       	nop
       8:	d3 c1       	rjmp	.+934    	; 0x3b0 <__bad_interrupt>
       a:	00 00       	nop
       c:	d1 c1       	rjmp	.+930    	; 0x3b0 <__bad_interrupt>
       e:	00 00       	nop
      10:	cf c1       	rjmp	.+926    	; 0x3b0 <__bad_interrupt>
      12:	00 00       	nop
      14:	cd c1       	rjmp	.+922    	; 0x3b0 <__bad_interrupt>
      16:	00 00       	nop
      18:	cb c1       	rjmp	.+918    	; 0x3b0 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	c9 c1       	rjmp	.+914    	; 0x3b0 <__bad_interrupt>
      1e:	00 00       	nop
      20:	c7 c1       	rjmp	.+910    	; 0x3b0 <__bad_interrupt>
      22:	00 00       	nop
      24:	c5 c1       	rjmp	.+906    	; 0x3b0 <__bad_interrupt>
      26:	00 00       	nop
      28:	c3 c1       	rjmp	.+902    	; 0x3b0 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	c1 c1       	rjmp	.+898    	; 0x3b0 <__bad_interrupt>
      2e:	00 00       	nop
      30:	bf c1       	rjmp	.+894    	; 0x3b0 <__bad_interrupt>
      32:	00 00       	nop
      34:	bd c1       	rjmp	.+890    	; 0x3b0 <__bad_interrupt>
      36:	00 00       	nop
      38:	bb c1       	rjmp	.+886    	; 0x3b0 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	b9 c1       	rjmp	.+882    	; 0x3b0 <__bad_interrupt>
      3e:	00 00       	nop
      40:	b7 c1       	rjmp	.+878    	; 0x3b0 <__bad_interrupt>
      42:	00 00       	nop
      44:	5e c2       	rjmp	.+1212   	; 0x502 <__vector_17>
      46:	00 00       	nop
      48:	b3 c1       	rjmp	.+870    	; 0x3b0 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	b1 c1       	rjmp	.+866    	; 0x3b0 <__bad_interrupt>
      4e:	00 00       	nop
      50:	af c1       	rjmp	.+862    	; 0x3b0 <__bad_interrupt>
      52:	00 00       	nop
      54:	ad c1       	rjmp	.+858    	; 0x3b0 <__bad_interrupt>
      56:	00 00       	nop
      58:	ab c1       	rjmp	.+854    	; 0x3b0 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	a9 c1       	rjmp	.+850    	; 0x3b0 <__bad_interrupt>
      5e:	00 00       	nop
      60:	a7 c1       	rjmp	.+846    	; 0x3b0 <__bad_interrupt>
      62:	00 00       	nop
      64:	a5 c1       	rjmp	.+842    	; 0x3b0 <__bad_interrupt>
      66:	00 00       	nop
      68:	a3 c1       	rjmp	.+838    	; 0x3b0 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	a1 c1       	rjmp	.+834    	; 0x3b0 <__bad_interrupt>
      6e:	00 00       	nop
      70:	9f c1       	rjmp	.+830    	; 0x3b0 <__bad_interrupt>
      72:	00 00       	nop
      74:	9d c1       	rjmp	.+826    	; 0x3b0 <__bad_interrupt>
      76:	00 00       	nop
      78:	9b c1       	rjmp	.+822    	; 0x3b0 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	99 c1       	rjmp	.+818    	; 0x3b0 <__bad_interrupt>
      7e:	00 00       	nop
      80:	97 c1       	rjmp	.+814    	; 0x3b0 <__bad_interrupt>
      82:	00 00       	nop
      84:	95 c1       	rjmp	.+810    	; 0x3b0 <__bad_interrupt>
      86:	00 00       	nop
      88:	93 c1       	rjmp	.+806    	; 0x3b0 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	91 c1       	rjmp	.+802    	; 0x3b0 <__bad_interrupt>
      8e:	00 00       	nop
      90:	8f c1       	rjmp	.+798    	; 0x3b0 <__bad_interrupt>
      92:	00 00       	nop
      94:	8d c1       	rjmp	.+794    	; 0x3b0 <__bad_interrupt>
      96:	00 00       	nop
      98:	8b c1       	rjmp	.+790    	; 0x3b0 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	0c 94 be 09 	jmp	0x137c	; 0x137c <__vector_39>
      a0:	87 c1       	rjmp	.+782    	; 0x3b0 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	85 c1       	rjmp	.+778    	; 0x3b0 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	83 c1       	rjmp	.+774    	; 0x3b0 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	81 c1       	rjmp	.+770    	; 0x3b0 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	7f c1       	rjmp	.+766    	; 0x3b0 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	7d c1       	rjmp	.+762    	; 0x3b0 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	7b c1       	rjmp	.+758    	; 0x3b0 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	79 c1       	rjmp	.+754    	; 0x3b0 <__bad_interrupt>
      be:	00 00       	nop
      c0:	77 c1       	rjmp	.+750    	; 0x3b0 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	75 c1       	rjmp	.+746    	; 0x3b0 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	73 c1       	rjmp	.+742    	; 0x3b0 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	71 c1       	rjmp	.+738    	; 0x3b0 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	6f c1       	rjmp	.+734    	; 0x3b0 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	6d c1       	rjmp	.+730    	; 0x3b0 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	6b c1       	rjmp	.+726    	; 0x3b0 <__bad_interrupt>
      da:	00 00       	nop
      dc:	69 c1       	rjmp	.+722    	; 0x3b0 <__bad_interrupt>
      de:	00 00       	nop
      e0:	67 c1       	rjmp	.+718    	; 0x3b0 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	c4 0a       	sbc	r12, r20
      e6:	c7 0a       	sbc	r12, r23
      e8:	c7 0a       	sbc	r12, r23
      ea:	c7 0a       	sbc	r12, r23
      ec:	c7 0a       	sbc	r12, r23
      ee:	c7 0a       	sbc	r12, r23
      f0:	c7 0a       	sbc	r12, r23
      f2:	c7 0a       	sbc	r12, r23
      f4:	df 09       	sbc	r29, r15
      f6:	c7 0a       	sbc	r12, r23
      f8:	c7 0a       	sbc	r12, r23
      fa:	c7 0a       	sbc	r12, r23
      fc:	c7 0a       	sbc	r12, r23
      fe:	c7 0a       	sbc	r12, r23
     100:	c7 0a       	sbc	r12, r23
     102:	c7 0a       	sbc	r12, r23
     104:	df 09       	sbc	r29, r15
     106:	c7 0a       	sbc	r12, r23
     108:	c7 0a       	sbc	r12, r23
     10a:	c7 0a       	sbc	r12, r23
     10c:	c7 0a       	sbc	r12, r23
     10e:	c7 0a       	sbc	r12, r23
     110:	c7 0a       	sbc	r12, r23
     112:	c7 0a       	sbc	r12, r23
     114:	e7 09       	sbc	r30, r7
     116:	c7 0a       	sbc	r12, r23
     118:	c7 0a       	sbc	r12, r23
     11a:	c7 0a       	sbc	r12, r23
     11c:	c7 0a       	sbc	r12, r23
     11e:	c7 0a       	sbc	r12, r23
     120:	c7 0a       	sbc	r12, r23
     122:	c7 0a       	sbc	r12, r23
     124:	0c 0a       	sbc	r0, r28
     126:	c7 0a       	sbc	r12, r23
     128:	c7 0a       	sbc	r12, r23
     12a:	c7 0a       	sbc	r12, r23
     12c:	c7 0a       	sbc	r12, r23
     12e:	c7 0a       	sbc	r12, r23
     130:	c7 0a       	sbc	r12, r23
     132:	c7 0a       	sbc	r12, r23
     134:	e7 09       	sbc	r30, r7
     136:	c7 0a       	sbc	r12, r23
     138:	c7 0a       	sbc	r12, r23
     13a:	c7 0a       	sbc	r12, r23
     13c:	c7 0a       	sbc	r12, r23
     13e:	c7 0a       	sbc	r12, r23
     140:	c7 0a       	sbc	r12, r23
     142:	c7 0a       	sbc	r12, r23
     144:	11 0a       	sbc	r1, r17
     146:	c7 0a       	sbc	r12, r23
     148:	c7 0a       	sbc	r12, r23
     14a:	c7 0a       	sbc	r12, r23
     14c:	c7 0a       	sbc	r12, r23
     14e:	c7 0a       	sbc	r12, r23
     150:	c7 0a       	sbc	r12, r23
     152:	c7 0a       	sbc	r12, r23
     154:	16 0a       	sbc	r1, r22
     156:	c7 0a       	sbc	r12, r23
     158:	c7 0a       	sbc	r12, r23
     15a:	c7 0a       	sbc	r12, r23
     15c:	c7 0a       	sbc	r12, r23
     15e:	c7 0a       	sbc	r12, r23
     160:	c7 0a       	sbc	r12, r23
     162:	c7 0a       	sbc	r12, r23
     164:	27 0a       	sbc	r2, r23
     166:	c7 0a       	sbc	r12, r23
     168:	c7 0a       	sbc	r12, r23
     16a:	c7 0a       	sbc	r12, r23
     16c:	c7 0a       	sbc	r12, r23
     16e:	c7 0a       	sbc	r12, r23
     170:	c7 0a       	sbc	r12, r23
     172:	c7 0a       	sbc	r12, r23
     174:	50 0a       	sbc	r5, r16
     176:	c7 0a       	sbc	r12, r23
     178:	c7 0a       	sbc	r12, r23
     17a:	c7 0a       	sbc	r12, r23
     17c:	c7 0a       	sbc	r12, r23
     17e:	c7 0a       	sbc	r12, r23
     180:	c7 0a       	sbc	r12, r23
     182:	c7 0a       	sbc	r12, r23
     184:	1b 0a       	sbc	r1, r27
     186:	c7 0a       	sbc	r12, r23
     188:	c7 0a       	sbc	r12, r23
     18a:	c7 0a       	sbc	r12, r23
     18c:	c7 0a       	sbc	r12, r23
     18e:	c7 0a       	sbc	r12, r23
     190:	c7 0a       	sbc	r12, r23
     192:	c7 0a       	sbc	r12, r23
     194:	35 0a       	sbc	r3, r21
     196:	c7 0a       	sbc	r12, r23
     198:	c7 0a       	sbc	r12, r23
     19a:	c7 0a       	sbc	r12, r23
     19c:	c7 0a       	sbc	r12, r23
     19e:	c7 0a       	sbc	r12, r23
     1a0:	c7 0a       	sbc	r12, r23
     1a2:	c7 0a       	sbc	r12, r23
     1a4:	52 0a       	sbc	r5, r18
     1a6:	c7 0a       	sbc	r12, r23
     1a8:	c7 0a       	sbc	r12, r23
     1aa:	c7 0a       	sbc	r12, r23
     1ac:	c7 0a       	sbc	r12, r23
     1ae:	c7 0a       	sbc	r12, r23
     1b0:	c7 0a       	sbc	r12, r23
     1b2:	c7 0a       	sbc	r12, r23
     1b4:	52 0a       	sbc	r5, r18
     1b6:	c7 0a       	sbc	r12, r23
     1b8:	c7 0a       	sbc	r12, r23
     1ba:	c7 0a       	sbc	r12, r23
     1bc:	c7 0a       	sbc	r12, r23
     1be:	c7 0a       	sbc	r12, r23
     1c0:	c7 0a       	sbc	r12, r23
     1c2:	c7 0a       	sbc	r12, r23
     1c4:	52 0a       	sbc	r5, r18
     1c6:	c7 0a       	sbc	r12, r23
     1c8:	c7 0a       	sbc	r12, r23
     1ca:	c7 0a       	sbc	r12, r23
     1cc:	c7 0a       	sbc	r12, r23
     1ce:	c7 0a       	sbc	r12, r23
     1d0:	c7 0a       	sbc	r12, r23
     1d2:	c7 0a       	sbc	r12, r23
     1d4:	52 0a       	sbc	r5, r18
     1d6:	c7 0a       	sbc	r12, r23
     1d8:	c7 0a       	sbc	r12, r23
     1da:	c7 0a       	sbc	r12, r23
     1dc:	c7 0a       	sbc	r12, r23
     1de:	c7 0a       	sbc	r12, r23
     1e0:	c7 0a       	sbc	r12, r23
     1e2:	c7 0a       	sbc	r12, r23
     1e4:	5b 0a       	sbc	r5, r27
     1e6:	c7 0a       	sbc	r12, r23
     1e8:	c7 0a       	sbc	r12, r23
     1ea:	c7 0a       	sbc	r12, r23
     1ec:	c7 0a       	sbc	r12, r23
     1ee:	c7 0a       	sbc	r12, r23
     1f0:	c7 0a       	sbc	r12, r23
     1f2:	c7 0a       	sbc	r12, r23
     1f4:	8b 0a       	sbc	r8, r27
     1f6:	c7 0a       	sbc	r12, r23
     1f8:	c7 0a       	sbc	r12, r23
     1fa:	c7 0a       	sbc	r12, r23
     1fc:	c7 0a       	sbc	r12, r23
     1fe:	c7 0a       	sbc	r12, r23
     200:	c7 0a       	sbc	r12, r23
     202:	c7 0a       	sbc	r12, r23
     204:	5b 0a       	sbc	r5, r27
     206:	c7 0a       	sbc	r12, r23
     208:	c7 0a       	sbc	r12, r23
     20a:	c7 0a       	sbc	r12, r23
     20c:	c7 0a       	sbc	r12, r23
     20e:	c7 0a       	sbc	r12, r23
     210:	c7 0a       	sbc	r12, r23
     212:	c7 0a       	sbc	r12, r23
     214:	8b 0a       	sbc	r8, r27
     216:	c7 0a       	sbc	r12, r23
     218:	c7 0a       	sbc	r12, r23
     21a:	c7 0a       	sbc	r12, r23
     21c:	c7 0a       	sbc	r12, r23
     21e:	c7 0a       	sbc	r12, r23
     220:	c7 0a       	sbc	r12, r23
     222:	c7 0a       	sbc	r12, r23
     224:	73 0a       	sbc	r7, r19
     226:	c7 0a       	sbc	r12, r23
     228:	c7 0a       	sbc	r12, r23
     22a:	c7 0a       	sbc	r12, r23
     22c:	c7 0a       	sbc	r12, r23
     22e:	c7 0a       	sbc	r12, r23
     230:	c7 0a       	sbc	r12, r23
     232:	c7 0a       	sbc	r12, r23
     234:	8f 0a       	sbc	r8, r31
     236:	c7 0a       	sbc	r12, r23
     238:	c7 0a       	sbc	r12, r23
     23a:	c7 0a       	sbc	r12, r23
     23c:	c7 0a       	sbc	r12, r23
     23e:	c7 0a       	sbc	r12, r23
     240:	c7 0a       	sbc	r12, r23
     242:	c7 0a       	sbc	r12, r23
     244:	8f 0a       	sbc	r8, r31
     246:	c7 0a       	sbc	r12, r23
     248:	c7 0a       	sbc	r12, r23
     24a:	c7 0a       	sbc	r12, r23
     24c:	c7 0a       	sbc	r12, r23
     24e:	c7 0a       	sbc	r12, r23
     250:	c7 0a       	sbc	r12, r23
     252:	c7 0a       	sbc	r12, r23
     254:	a4 0a       	sbc	r10, r20
     256:	c7 0a       	sbc	r12, r23
     258:	c7 0a       	sbc	r12, r23
     25a:	c7 0a       	sbc	r12, r23
     25c:	c7 0a       	sbc	r12, r23
     25e:	c7 0a       	sbc	r12, r23
     260:	c7 0a       	sbc	r12, r23
     262:	c7 0a       	sbc	r12, r23
     264:	be 0a       	sbc	r11, r30
     266:	c7 0a       	sbc	r12, r23
     268:	c7 0a       	sbc	r12, r23
     26a:	c7 0a       	sbc	r12, r23
     26c:	c7 0a       	sbc	r12, r23
     26e:	c7 0a       	sbc	r12, r23
     270:	c7 0a       	sbc	r12, r23
     272:	c7 0a       	sbc	r12, r23
     274:	be 0a       	sbc	r11, r30

00000276 <__trampolines_end>:
     276:	00 40       	sbci	r16, 0x00	; 0
     278:	7a 10       	cpse	r7, r10
     27a:	f3 5a       	subi	r31, 0xA3	; 163
     27c:	00 a0       	ldd	r0, Z+32	; 0x20
     27e:	72 4e       	sbci	r23, 0xE2	; 226
     280:	18 09       	sbc	r17, r8
     282:	00 10       	cpse	r0, r0
     284:	a5 d4       	rcall	.+2378   	; 0xbd0 <precessToZero+0x6c>
     286:	e8 00       	.word	0x00e8	; ????
     288:	00 e8       	ldi	r16, 0x80	; 128
     28a:	76 48       	sbci	r23, 0x86	; 134
     28c:	17 00       	.word	0x0017	; ????
     28e:	00 e4       	ldi	r16, 0x40	; 64
     290:	0b 54       	subi	r16, 0x4B	; 75
     292:	02 00       	.word	0x0002	; ????
     294:	00 ca       	rjmp	.-3072   	; 0xfffff696 <__eeprom_end+0xff7ef696>
     296:	9a 3b       	cpi	r25, 0xBA	; 186
     298:	00 00       	nop
     29a:	00 e1       	ldi	r16, 0x10	; 16
     29c:	f5 05       	cpc	r31, r5
     29e:	00 00       	nop
     2a0:	80 96       	adiw	r24, 0x20	; 32
     2a2:	98 00       	.word	0x0098	; ????
     2a4:	00 00       	nop
     2a6:	40 42       	sbci	r20, 0x20	; 32
     2a8:	0f 00       	.word	0x000f	; ????
     2aa:	00 00       	nop
     2ac:	a0 86       	std	Z+8, r10	; 0x08
     2ae:	01 00       	.word	0x0001	; ????
     2b0:	00 00       	nop
     2b2:	10 27       	eor	r17, r16
     2b4:	00 00       	nop
     2b6:	00 00       	nop
     2b8:	e8 03       	fmulsu	r22, r16
     2ba:	00 00       	nop
     2bc:	00 00       	nop
     2be:	64 00       	.word	0x0064	; ????
     2c0:	00 00       	nop
     2c2:	00 00       	nop
     2c4:	0a 00       	.word	0x000a	; ????
     2c6:	00 00       	nop
     2c8:	00 00       	nop
     2ca:	01 00       	.word	0x0001	; ????
     2cc:	00 00       	nop
     2ce:	00 00       	nop
     2d0:	2c 76       	andi	r18, 0x6C	; 108
     2d2:	d8 88       	ldd	r13, Y+16	; 0x10
     2d4:	dc 67       	ori	r29, 0x7C	; 124
     2d6:	4f 08       	sbc	r4, r15
     2d8:	23 df       	rcall	.-442    	; 0x120 <__SREG__+0xe1>
     2da:	c1 df       	rcall	.-126    	; 0x25e <__SREG__+0x21f>
     2dc:	ae 59       	subi	r26, 0x9E	; 158
     2de:	e1 b1       	in	r30, 0x01	; 1
     2e0:	b7 96       	adiw	r30, 0x27	; 39
     2e2:	e5 e3       	ldi	r30, 0x35	; 53
     2e4:	e4 53       	subi	r30, 0x34	; 52
     2e6:	c6 3a       	cpi	r28, 0xA6	; 166
     2e8:	e6 51       	subi	r30, 0x16	; 22
     2ea:	99 76       	andi	r25, 0x69	; 105
     2ec:	96 e8       	ldi	r25, 0x86	; 134
     2ee:	e6 c2       	rjmp	.+1484   	; 0x8bc <ControlLQR+0x5a>
     2f0:	84 26       	eor	r8, r20
     2f2:	eb 89       	ldd	r30, Y+19	; 0x13
     2f4:	8c 9b       	sbis	0x11, 4	; 17
     2f6:	62 ed       	ldi	r22, 0xD2	; 210
     2f8:	40 7c       	andi	r20, 0xC0	; 192
     2fa:	6f fc       	.word	0xfc6f	; ????
     2fc:	ef bc       	out	0x2f, r14	; 47
     2fe:	9c 9f       	mul	r25, r28
     300:	40 f2       	brcs	.-112    	; 0x292 <__trampolines_end+0x1c>
     302:	ba a5       	ldd	r27, Y+42	; 0x2a
     304:	6f a5       	ldd	r22, Y+47	; 0x2f
     306:	f4 90       	lpm	r15, Z
     308:	05 5a       	subi	r16, 0xA5	; 165
     30a:	2a f7       	brpl	.-54     	; 0x2d6 <__trampolines_end+0x60>
     30c:	5c 93       	st	X, r21
     30e:	6b 6c       	ori	r22, 0xCB	; 203
     310:	f9 67       	ori	r31, 0x79	; 121
     312:	6d c1       	rjmp	.+730    	; 0x5ee <IMU_init+0x14>
     314:	1b fc       	.word	0xfc1b	; ????
     316:	e0 e4       	ldi	r30, 0x40	; 64
     318:	0d 47       	sbci	r16, 0x7D	; 125
     31a:	fe f5       	brtc	.+126    	; 0x39a <__do_clear_bss>
     31c:	20 e6       	ldi	r18, 0x60	; 96
     31e:	b5 00       	.word	0x00b5	; ????
     320:	d0 ed       	ldi	r29, 0xD0	; 208
     322:	90 2e       	mov	r9, r16
     324:	03 00       	.word	0x0003	; ????
     326:	94 35       	cpi	r25, 0x54	; 84
     328:	77 05       	cpc	r23, r7
     32a:	00 80       	ld	r0, Z
     32c:	84 1e       	adc	r8, r20
     32e:	08 00       	.word	0x0008	; ????
     330:	00 20       	and	r0, r0
     332:	4e 0a       	sbc	r4, r30
     334:	00 00       	nop
     336:	00 c8       	rjmp	.-4096   	; 0xfffff338 <__eeprom_end+0xff7ef338>
     338:	0c 33       	cpi	r16, 0x3C	; 60
     33a:	33 33       	cpi	r19, 0x33	; 51
     33c:	33 0f       	add	r19, r19
     33e:	98 6e       	ori	r25, 0xE8	; 232
     340:	12 83       	std	Z+2, r17	; 0x02
     342:	11 41       	sbci	r17, 0x11	; 17
     344:	ef 8d       	ldd	r30, Y+31	; 0x1f
     346:	21 14       	cp	r2, r1
     348:	89 3b       	cpi	r24, 0xB9	; 185
     34a:	e6 55       	subi	r30, 0x56	; 86
     34c:	16 cf       	rjmp	.-468    	; 0x17a <__SREG__+0x13b>
     34e:	fe e6       	ldi	r31, 0x6E	; 110
     350:	db 18       	sub	r13, r11
     352:	d1 84       	ldd	r13, Z+9	; 0x09
     354:	4b 38       	cpi	r20, 0x8B	; 139
     356:	1b f7       	brvc	.-58     	; 0x31e <__trampolines_end+0xa8>
     358:	7c 1d       	adc	r23, r12
     35a:	90 1d       	adc	r25, r0
     35c:	a4 bb       	out	0x14, r26	; 20
     35e:	e4 24       	eor	r14, r4
     360:	20 32       	cpi	r18, 0x20	; 32
     362:	84 72       	andi	r24, 0x24	; 36
     364:	5e 22       	and	r5, r30
     366:	81 00       	.word	0x0081	; ????
     368:	c9 f1       	breq	.+114    	; 0x3dc <i2c_beginTransmission+0x12>
     36a:	24 ec       	ldi	r18, 0xC4	; 196
     36c:	a1 e5       	ldi	r26, 0x51	; 81
     36e:	3d 27       	eor	r19, r29

00000370 <__ctors_end>:
     370:	11 24       	eor	r1, r1
     372:	1f be       	out	0x3f, r1	; 63
     374:	cf ef       	ldi	r28, 0xFF	; 255
     376:	d1 e2       	ldi	r29, 0x21	; 33
     378:	de bf       	out	0x3e, r29	; 62
     37a:	cd bf       	out	0x3d, r28	; 61
     37c:	00 e0       	ldi	r16, 0x00	; 0
     37e:	0c bf       	out	0x3c, r16	; 60

00000380 <__do_copy_data>:
     380:	13 e0       	ldi	r17, 0x03	; 3
     382:	a0 e0       	ldi	r26, 0x00	; 0
     384:	b2 e0       	ldi	r27, 0x02	; 2
     386:	e6 e6       	ldi	r30, 0x66	; 102
     388:	f5 e2       	ldi	r31, 0x25	; 37
     38a:	00 e0       	ldi	r16, 0x00	; 0
     38c:	0b bf       	out	0x3b, r16	; 59
     38e:	02 c0       	rjmp	.+4      	; 0x394 <__do_copy_data+0x14>
     390:	07 90       	elpm	r0, Z+
     392:	0d 92       	st	X+, r0
     394:	ac 39       	cpi	r26, 0x9C	; 156
     396:	b1 07       	cpc	r27, r17
     398:	d9 f7       	brne	.-10     	; 0x390 <__do_copy_data+0x10>

0000039a <__do_clear_bss>:
     39a:	2d e0       	ldi	r18, 0x0D	; 13
     39c:	ac e9       	ldi	r26, 0x9C	; 156
     39e:	b3 e0       	ldi	r27, 0x03	; 3
     3a0:	01 c0       	rjmp	.+2      	; 0x3a4 <.do_clear_bss_start>

000003a2 <.do_clear_bss_loop>:
     3a2:	1d 92       	st	X+, r1

000003a4 <.do_clear_bss_start>:
     3a4:	a5 3e       	cpi	r26, 0xE5	; 229
     3a6:	b2 07       	cpc	r27, r18
     3a8:	e1 f7       	brne	.-8      	; 0x3a2 <.do_clear_bss_loop>
     3aa:	a9 d5       	rcall	.+2898   	; 0xefe <main>
     3ac:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <_exit>

000003b0 <__bad_interrupt>:
     3b0:	27 ce       	rjmp	.-946    	; 0x0 <__vectors>

000003b2 <i2c_begin>:
     3b2:	10 92 c1 03 	sts	0x03C1, r1	; 0x8003c1 <rxBufferIndex>
     3b6:	10 92 c0 03 	sts	0x03C0, r1	; 0x8003c0 <rxBufferLength>
     3ba:	10 92 9e 03 	sts	0x039E, r1	; 0x80039e <txBufferIndex>
     3be:	10 92 9d 03 	sts	0x039D, r1	; 0x80039d <txBufferLength>
     3c2:	3b c6       	rjmp	.+3190   	; 0x103a <twi_init>
     3c4:	08 95       	ret

000003c6 <i2c_setClock>:
     3c6:	53 c6       	rjmp	.+3238   	; 0x106e <twi_setFrequency>
     3c8:	08 95       	ret

000003ca <i2c_beginTransmission>:
     3ca:	91 e0       	ldi	r25, 0x01	; 1
     3cc:	90 93 9c 03 	sts	0x039C, r25	; 0x80039c <__data_end>
     3d0:	80 93 bf 03 	sts	0x03BF, r24	; 0x8003bf <txAddress>
     3d4:	10 92 9e 03 	sts	0x039E, r1	; 0x80039e <txBufferIndex>
     3d8:	10 92 9d 03 	sts	0x039D, r1	; 0x80039d <txBufferLength>
     3dc:	08 95       	ret

000003de <i2c_endTransmission>:
     3de:	0f 93       	push	r16
     3e0:	08 2f       	mov	r16, r24
     3e2:	21 e0       	ldi	r18, 0x01	; 1
     3e4:	40 91 9d 03 	lds	r20, 0x039D	; 0x80039d <txBufferLength>
     3e8:	6f e9       	ldi	r22, 0x9F	; 159
     3ea:	73 e0       	ldi	r23, 0x03	; 3
     3ec:	80 91 bf 03 	lds	r24, 0x03BF	; 0x8003bf <txAddress>
     3f0:	29 d7       	rcall	.+3666   	; 0x1244 <twi_writeTo>
     3f2:	10 92 9e 03 	sts	0x039E, r1	; 0x80039e <txBufferIndex>
     3f6:	10 92 9d 03 	sts	0x039D, r1	; 0x80039d <txBufferLength>
     3fa:	10 92 9c 03 	sts	0x039C, r1	; 0x80039c <__data_end>
     3fe:	0f 91       	pop	r16
     400:	08 95       	ret

00000402 <i2c_write_byte>:
     402:	cf 93       	push	r28
     404:	df 93       	push	r29
     406:	1f 92       	push	r1
     408:	cd b7       	in	r28, 0x3d	; 61
     40a:	de b7       	in	r29, 0x3e	; 62
     40c:	89 83       	std	Y+1, r24	; 0x01
     40e:	80 91 9c 03 	lds	r24, 0x039C	; 0x80039c <__data_end>
     412:	88 23       	and	r24, r24
     414:	99 f0       	breq	.+38     	; 0x43c <i2c_write_byte+0x3a>
     416:	80 91 9d 03 	lds	r24, 0x039D	; 0x80039d <txBufferLength>
     41a:	80 32       	cpi	r24, 0x20	; 32
     41c:	a8 f4       	brcc	.+42     	; 0x448 <i2c_write_byte+0x46>
     41e:	80 91 9e 03 	lds	r24, 0x039E	; 0x80039e <txBufferIndex>
     422:	e8 2f       	mov	r30, r24
     424:	f0 e0       	ldi	r31, 0x00	; 0
     426:	e1 56       	subi	r30, 0x61	; 97
     428:	fc 4f       	sbci	r31, 0xFC	; 252
     42a:	99 81       	ldd	r25, Y+1	; 0x01
     42c:	90 83       	st	Z, r25
     42e:	8f 5f       	subi	r24, 0xFF	; 255
     430:	80 93 9e 03 	sts	0x039E, r24	; 0x80039e <txBufferIndex>
     434:	80 93 9d 03 	sts	0x039D, r24	; 0x80039d <txBufferLength>
     438:	81 e0       	ldi	r24, 0x01	; 1
     43a:	07 c0       	rjmp	.+14     	; 0x44a <i2c_write_byte+0x48>
     43c:	61 e0       	ldi	r22, 0x01	; 1
     43e:	ce 01       	movw	r24, r28
     440:	01 96       	adiw	r24, 0x01	; 1
     442:	28 d6       	rcall	.+3152   	; 0x1094 <twi_transmit>
     444:	81 e0       	ldi	r24, 0x01	; 1
     446:	01 c0       	rjmp	.+2      	; 0x44a <i2c_write_byte+0x48>
     448:	80 e0       	ldi	r24, 0x00	; 0
     44a:	0f 90       	pop	r0
     44c:	df 91       	pop	r29
     44e:	cf 91       	pop	r28
     450:	08 95       	ret

00000452 <i2c_requestFrom>:
     452:	8f 92       	push	r8
     454:	9f 92       	push	r9
     456:	af 92       	push	r10
     458:	bf 92       	push	r11
     45a:	ef 92       	push	r14
     45c:	0f 93       	push	r16
     45e:	1f 93       	push	r17
     460:	cf 93       	push	r28
     462:	df 93       	push	r29
     464:	18 2f       	mov	r17, r24
     466:	d6 2f       	mov	r29, r22
     468:	49 01       	movw	r8, r18
     46a:	5a 01       	movw	r10, r20
     46c:	00 23       	and	r16, r16
     46e:	f1 f0       	breq	.+60     	; 0x4ac <i2c_requestFrom+0x5a>
     470:	ac df       	rcall	.-168    	; 0x3ca <i2c_beginTransmission>
     472:	04 30       	cpi	r16, 0x04	; 4
     474:	08 f0       	brcs	.+2      	; 0x478 <i2c_requestFrom+0x26>
     476:	03 e0       	ldi	r16, 0x03	; 3
     478:	cf ef       	ldi	r28, 0xFF	; 255
     47a:	c0 0f       	add	r28, r16
     47c:	00 23       	and	r16, r16
     47e:	a1 f0       	breq	.+40     	; 0x4a8 <i2c_requestFrom+0x56>
     480:	8c 2f       	mov	r24, r28
     482:	88 0f       	add	r24, r24
     484:	88 0f       	add	r24, r24
     486:	88 0f       	add	r24, r24
     488:	a5 01       	movw	r20, r10
     48a:	94 01       	movw	r18, r8
     48c:	04 c0       	rjmp	.+8      	; 0x496 <i2c_requestFrom+0x44>
     48e:	56 95       	lsr	r21
     490:	47 95       	ror	r20
     492:	37 95       	ror	r19
     494:	27 95       	ror	r18
     496:	8a 95       	dec	r24
     498:	d2 f7       	brpl	.-12     	; 0x48e <i2c_requestFrom+0x3c>
     49a:	da 01       	movw	r26, r20
     49c:	c9 01       	movw	r24, r18
     49e:	b1 df       	rcall	.-158    	; 0x402 <i2c_write_byte>
     4a0:	8c 2f       	mov	r24, r28
     4a2:	c1 50       	subi	r28, 0x01	; 1
     4a4:	81 11       	cpse	r24, r1
     4a6:	ec cf       	rjmp	.-40     	; 0x480 <i2c_requestFrom+0x2e>
     4a8:	80 e0       	ldi	r24, 0x00	; 0
     4aa:	99 df       	rcall	.-206    	; 0x3de <i2c_endTransmission>
     4ac:	4d 2f       	mov	r20, r29
     4ae:	d1 32       	cpi	r29, 0x21	; 33
     4b0:	08 f0       	brcs	.+2      	; 0x4b4 <i2c_requestFrom+0x62>
     4b2:	40 e2       	ldi	r20, 0x20	; 32
     4b4:	2e 2d       	mov	r18, r14
     4b6:	62 ec       	ldi	r22, 0xC2	; 194
     4b8:	73 e0       	ldi	r23, 0x03	; 3
     4ba:	81 2f       	mov	r24, r17
     4bc:	53 d6       	rcall	.+3238   	; 0x1164 <twi_readFrom>
     4be:	10 92 c1 03 	sts	0x03C1, r1	; 0x8003c1 <rxBufferIndex>
     4c2:	80 93 c0 03 	sts	0x03C0, r24	; 0x8003c0 <rxBufferLength>
     4c6:	df 91       	pop	r29
     4c8:	cf 91       	pop	r28
     4ca:	1f 91       	pop	r17
     4cc:	0f 91       	pop	r16
     4ce:	ef 90       	pop	r14
     4d0:	bf 90       	pop	r11
     4d2:	af 90       	pop	r10
     4d4:	9f 90       	pop	r9
     4d6:	8f 90       	pop	r8
     4d8:	08 95       	ret

000004da <i2c_read>:
     4da:	90 91 c1 03 	lds	r25, 0x03C1	; 0x8003c1 <rxBufferIndex>
     4de:	80 91 c0 03 	lds	r24, 0x03C0	; 0x8003c0 <rxBufferLength>
     4e2:	98 17       	cp	r25, r24
     4e4:	50 f4       	brcc	.+20     	; 0x4fa <i2c_read+0x20>
     4e6:	e9 2f       	mov	r30, r25
     4e8:	f0 e0       	ldi	r31, 0x00	; 0
     4ea:	ee 53       	subi	r30, 0x3E	; 62
     4ec:	fc 4f       	sbci	r31, 0xFC	; 252
     4ee:	20 81       	ld	r18, Z
     4f0:	30 e0       	ldi	r19, 0x00	; 0
     4f2:	9f 5f       	subi	r25, 0xFF	; 255
     4f4:	90 93 c1 03 	sts	0x03C1, r25	; 0x8003c1 <rxBufferIndex>
     4f8:	02 c0       	rjmp	.+4      	; 0x4fe <i2c_read+0x24>
     4fa:	2f ef       	ldi	r18, 0xFF	; 255
     4fc:	3f ef       	ldi	r19, 0xFF	; 255
     4fe:	c9 01       	movw	r24, r18
     500:	08 95       	ret

00000502 <__vector_17>:
	//USART_Transmit_Line(buffer);

	//OCR0B = 0;

	controlBuffer[buffCount] = control;
}
     502:	1f 92       	push	r1
     504:	0f 92       	push	r0
     506:	0f b6       	in	r0, 0x3f	; 63
     508:	0f 92       	push	r0
     50a:	11 24       	eor	r1, r1
     50c:	8f 93       	push	r24
     50e:	9f 93       	push	r25
     510:	af 93       	push	r26
     512:	bf 93       	push	r27
     514:	81 e0       	ldi	r24, 0x01	; 1
     516:	80 93 e6 03 	sts	0x03E6, r24	; 0x8003e6 <flag>
     51a:	80 91 e2 03 	lds	r24, 0x03E2	; 0x8003e2 <counter>
     51e:	90 91 e3 03 	lds	r25, 0x03E3	; 0x8003e3 <counter+0x1>
     522:	a0 91 e4 03 	lds	r26, 0x03E4	; 0x8003e4 <counter+0x2>
     526:	b0 91 e5 03 	lds	r27, 0x03E5	; 0x8003e5 <counter+0x3>
     52a:	01 96       	adiw	r24, 0x01	; 1
     52c:	a1 1d       	adc	r26, r1
     52e:	b1 1d       	adc	r27, r1
     530:	80 93 e2 03 	sts	0x03E2, r24	; 0x8003e2 <counter>
     534:	90 93 e3 03 	sts	0x03E3, r25	; 0x8003e3 <counter+0x1>
     538:	a0 93 e4 03 	sts	0x03E4, r26	; 0x8003e4 <counter+0x2>
     53c:	b0 93 e5 03 	sts	0x03E5, r27	; 0x8003e5 <counter+0x3>
     540:	bf 91       	pop	r27
     542:	af 91       	pop	r26
     544:	9f 91       	pop	r25
     546:	8f 91       	pop	r24
     548:	0f 90       	pop	r0
     54a:	0f be       	out	0x3f, r0	; 63
     54c:	0f 90       	pop	r0
     54e:	1f 90       	pop	r1
     550:	18 95       	reti

00000552 <InitPrecessionMotor>:
     552:	e1 e0       	ldi	r30, 0x01	; 1
     554:	f1 e0       	ldi	r31, 0x01	; 1
     556:	80 81       	ld	r24, Z
     558:	80 64       	ori	r24, 0x40	; 64
     55a:	80 83       	st	Z, r24
     55c:	e2 e0       	ldi	r30, 0x02	; 2
     55e:	f1 e0       	ldi	r31, 0x01	; 1
     560:	80 81       	ld	r24, Z
     562:	80 64       	ori	r24, 0x40	; 64
     564:	80 83       	st	Z, r24
     566:	6b 9a       	sbi	0x0d, 3	; 13
     568:	73 98       	cbi	0x0e, 3	; 14
     56a:	9d 9a       	sbi	0x13, 5	; 19
     56c:	27 9a       	sbi	0x04, 7	; 4
     56e:	14 bc       	out	0x24, r1	; 36
     570:	15 bc       	out	0x25, r1	; 37
     572:	84 b5       	in	r24, 0x24	; 36
     574:	80 6a       	ori	r24, 0xA0	; 160
     576:	84 bd       	out	0x24, r24	; 36
     578:	84 b5       	in	r24, 0x24	; 36
     57a:	83 60       	ori	r24, 0x03	; 3
     57c:	84 bd       	out	0x24, r24	; 36
     57e:	85 b5       	in	r24, 0x25	; 37
     580:	84 60       	ori	r24, 0x04	; 4
     582:	85 bd       	out	0x25, r24	; 37
     584:	18 bc       	out	0x28, r1	; 40
     586:	81 ea       	ldi	r24, 0xA1	; 161
     588:	87 bd       	out	0x27, r24	; 39
     58a:	08 95       	ret

0000058c <InitClocks>:
     58c:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
     590:	e1 e8       	ldi	r30, 0x81	; 129
     592:	f0 e0       	ldi	r31, 0x00	; 0
     594:	10 82       	st	Z, r1
     596:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
     59a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
     59e:	8c e9       	ldi	r24, 0x9C	; 156
     5a0:	90 e0       	ldi	r25, 0x00	; 0
     5a2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     5a6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     5aa:	80 81       	ld	r24, Z
     5ac:	88 60       	ori	r24, 0x08	; 8
     5ae:	80 83       	st	Z, r24
     5b0:	80 81       	ld	r24, Z
     5b2:	85 60       	ori	r24, 0x05	; 5
     5b4:	80 83       	st	Z, r24
     5b6:	ef e6       	ldi	r30, 0x6F	; 111
     5b8:	f0 e0       	ldi	r31, 0x00	; 0
     5ba:	80 81       	ld	r24, Z
     5bc:	82 60       	ori	r24, 0x02	; 2
     5be:	80 83       	st	Z, r24
     5c0:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
     5c4:	e1 e9       	ldi	r30, 0x91	; 145
     5c6:	f0 e0       	ldi	r31, 0x00	; 0
     5c8:	10 82       	st	Z, r1
     5ca:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
     5ce:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
     5d2:	80 81       	ld	r24, Z
     5d4:	83 60       	ori	r24, 0x03	; 3
     5d6:	80 83       	st	Z, r24
     5d8:	08 95       	ret

000005da <IMU_init>:
     5da:	87 e7       	ldi	r24, 0x77	; 119
     5dc:	f6 de       	rcall	.-532    	; 0x3ca <i2c_beginTransmission>
     5de:	82 e4       	ldi	r24, 0x42	; 66
     5e0:	10 df       	rcall	.-480    	; 0x402 <i2c_write_byte>
     5e2:	80 e6       	ldi	r24, 0x60	; 96
     5e4:	0e df       	rcall	.-484    	; 0x402 <i2c_write_byte>
     5e6:	81 e0       	ldi	r24, 0x01	; 1
     5e8:	fa de       	rcall	.-524    	; 0x3de <i2c_endTransmission>
     5ea:	85 30       	cpi	r24, 0x05	; 5
     5ec:	31 f4       	brne	.+12     	; 0x5fa <IMU_init+0x20>
     5ee:	80 e0       	ldi	r24, 0x00	; 0
     5f0:	92 e0       	ldi	r25, 0x02	; 2
     5f2:	0e 94 17 0b 	call	0x162e	; 0x162e <USART_Transmit_Line>
     5f6:	80 e0       	ldi	r24, 0x00	; 0
     5f8:	08 95       	ret
     5fa:	81 e0       	ldi	r24, 0x01	; 1
     5fc:	08 95       	ret

000005fe <IMURead_eulerAngle>:
     5fe:	4f 92       	push	r4
     600:	5f 92       	push	r5
     602:	6f 92       	push	r6
     604:	7f 92       	push	r7
     606:	8f 92       	push	r8
     608:	9f 92       	push	r9
     60a:	af 92       	push	r10
     60c:	bf 92       	push	r11
     60e:	cf 92       	push	r12
     610:	df 92       	push	r13
     612:	ef 92       	push	r14
     614:	ff 92       	push	r15
     616:	0f 93       	push	r16
     618:	1f 93       	push	r17
     61a:	cf 93       	push	r28
     61c:	df 93       	push	r29
     61e:	00 d0       	rcall	.+0      	; 0x620 <IMURead_eulerAngle+0x22>
     620:	1f 92       	push	r1
     622:	cd b7       	in	r28, 0x3d	; 61
     624:	de b7       	in	r29, 0x3e	; 62
     626:	5c 01       	movw	r10, r24
     628:	87 e7       	ldi	r24, 0x77	; 119
     62a:	cf de       	rcall	.-610    	; 0x3ca <i2c_beginTransmission>
     62c:	82 e4       	ldi	r24, 0x42	; 66
     62e:	e9 de       	rcall	.-558    	; 0x402 <i2c_write_byte>
     630:	81 e0       	ldi	r24, 0x01	; 1
     632:	e7 de       	rcall	.-562    	; 0x402 <i2c_write_byte>
     634:	83 e4       	ldi	r24, 0x43	; 67
     636:	e5 de       	rcall	.-566    	; 0x402 <i2c_write_byte>
     638:	81 e0       	ldi	r24, 0x01	; 1
     63a:	d1 de       	rcall	.-606    	; 0x3de <i2c_endTransmission>
     63c:	85 30       	cpi	r24, 0x05	; 5
     63e:	29 f4       	brne	.+10     	; 0x64a <IMURead_eulerAngle+0x4c>
     640:	84 e2       	ldi	r24, 0x24	; 36
     642:	92 e0       	ldi	r25, 0x02	; 2
     644:	f4 d7       	rcall	.+4072   	; 0x162e <USART_Transmit_Line>
     646:	80 e0       	ldi	r24, 0x00	; 0
     648:	66 c0       	rjmp	.+204    	; 0x716 <IMURead_eulerAngle+0x118>
     64a:	ee 24       	eor	r14, r14
     64c:	e3 94       	inc	r14
     64e:	00 e0       	ldi	r16, 0x00	; 0
     650:	20 e0       	ldi	r18, 0x00	; 0
     652:	30 e0       	ldi	r19, 0x00	; 0
     654:	a9 01       	movw	r20, r18
     656:	6c e0       	ldi	r22, 0x0C	; 12
     658:	87 e7       	ldi	r24, 0x77	; 119
     65a:	fb de       	rcall	.-522    	; 0x452 <i2c_requestFrom>
     65c:	0f 2e       	mov	r0, r31
     65e:	f3 ef       	ldi	r31, 0xF3	; 243
     660:	cf 2e       	mov	r12, r31
     662:	f3 e0       	ldi	r31, 0x03	; 3
     664:	df 2e       	mov	r13, r31
     666:	f0 2d       	mov	r31, r0
     668:	0f 2e       	mov	r0, r31
     66a:	ff ef       	ldi	r31, 0xFF	; 255
     66c:	8f 2e       	mov	r8, r31
     66e:	f3 e0       	ldi	r31, 0x03	; 3
     670:	9f 2e       	mov	r9, r31
     672:	f0 2d       	mov	r31, r0
     674:	ce 01       	movw	r24, r28
     676:	01 96       	adiw	r24, 0x01	; 1
     678:	7c 01       	movw	r14, r24
     67a:	19 82       	std	Y+1, r1	; 0x01
     67c:	1a 82       	std	Y+2, r1	; 0x02
     67e:	1b 82       	std	Y+3, r1	; 0x03
     680:	1c 82       	std	Y+4, r1	; 0x04
     682:	8e 01       	movw	r16, r28
     684:	0b 5f       	subi	r16, 0xFB	; 251
     686:	1f 4f       	sbci	r17, 0xFF	; 255
     688:	28 df       	rcall	.-432    	; 0x4da <i2c_read>
     68a:	f8 01       	movw	r30, r16
     68c:	82 93       	st	-Z, r24
     68e:	8f 01       	movw	r16, r30
     690:	ee 15       	cp	r30, r14
     692:	ff 05       	cpc	r31, r15
     694:	c9 f7       	brne	.-14     	; 0x688 <IMURead_eulerAngle+0x8a>
     696:	49 80       	ldd	r4, Y+1	; 0x01
     698:	5a 80       	ldd	r5, Y+2	; 0x02
     69a:	6b 80       	ldd	r6, Y+3	; 0x03
     69c:	7c 80       	ldd	r7, Y+4	; 0x04
     69e:	c3 01       	movw	r24, r6
     6a0:	b2 01       	movw	r22, r4
     6a2:	0e 94 f5 0b 	call	0x17ea	; 0x17ea <__fixsfsi>
     6a6:	9b 01       	movw	r18, r22
     6a8:	77 23       	and	r23, r23
     6aa:	24 f4       	brge	.+8      	; 0x6b4 <IMURead_eulerAngle+0xb6>
     6ac:	22 27       	eor	r18, r18
     6ae:	33 27       	eor	r19, r19
     6b0:	26 1b       	sub	r18, r22
     6b2:	37 0b       	sbc	r19, r23
     6b4:	b9 01       	movw	r22, r18
     6b6:	33 0f       	add	r19, r19
     6b8:	88 0b       	sbc	r24, r24
     6ba:	99 0b       	sbc	r25, r25
     6bc:	0e 94 28 0c 	call	0x1850	; 0x1850 <__floatsisf>
     6c0:	2b ed       	ldi	r18, 0xDB	; 219
     6c2:	3f e0       	ldi	r19, 0x0F	; 15
     6c4:	49 e4       	ldi	r20, 0x49	; 73
     6c6:	50 e4       	ldi	r21, 0x40	; 64
     6c8:	0e 94 89 0b 	call	0x1712	; 0x1712 <__cmpsf2>
     6cc:	18 16       	cp	r1, r24
     6ce:	4c f0       	brlt	.+18     	; 0x6e2 <IMURead_eulerAngle+0xe4>
     6d0:	77 fa       	bst	r7, 7
     6d2:	70 94       	com	r7
     6d4:	77 f8       	bld	r7, 7
     6d6:	70 94       	com	r7
     6d8:	f6 01       	movw	r30, r12
     6da:	40 82       	st	Z, r4
     6dc:	51 82       	std	Z+1, r5	; 0x01
     6de:	62 82       	std	Z+2, r6	; 0x02
     6e0:	73 82       	std	Z+3, r7	; 0x03
     6e2:	f4 e0       	ldi	r31, 0x04	; 4
     6e4:	cf 0e       	add	r12, r31
     6e6:	d1 1c       	adc	r13, r1
     6e8:	c8 14       	cp	r12, r8
     6ea:	d9 04       	cpc	r13, r9
     6ec:	31 f6       	brne	.-116    	; 0x67a <IMURead_eulerAngle+0x7c>
     6ee:	f5 01       	movw	r30, r10
     6f0:	ee 0f       	add	r30, r30
     6f2:	ff 1f       	adc	r31, r31
     6f4:	ee 0f       	add	r30, r30
     6f6:	ff 1f       	adc	r31, r31
     6f8:	eb 5a       	subi	r30, 0xAB	; 171
     6fa:	f3 4f       	sbci	r31, 0xF3	; 243
     6fc:	80 91 f7 03 	lds	r24, 0x03F7	; 0x8003f7 <euler_angles+0x4>
     700:	90 91 f8 03 	lds	r25, 0x03F8	; 0x8003f8 <euler_angles+0x5>
     704:	a0 91 f9 03 	lds	r26, 0x03F9	; 0x8003f9 <euler_angles+0x6>
     708:	b0 91 fa 03 	lds	r27, 0x03FA	; 0x8003fa <euler_angles+0x7>
     70c:	80 83       	st	Z, r24
     70e:	91 83       	std	Z+1, r25	; 0x01
     710:	a2 83       	std	Z+2, r26	; 0x02
     712:	b3 83       	std	Z+3, r27	; 0x03
     714:	81 e0       	ldi	r24, 0x01	; 1
     716:	0f 90       	pop	r0
     718:	0f 90       	pop	r0
     71a:	0f 90       	pop	r0
     71c:	0f 90       	pop	r0
     71e:	df 91       	pop	r29
     720:	cf 91       	pop	r28
     722:	1f 91       	pop	r17
     724:	0f 91       	pop	r16
     726:	ff 90       	pop	r15
     728:	ef 90       	pop	r14
     72a:	df 90       	pop	r13
     72c:	cf 90       	pop	r12
     72e:	bf 90       	pop	r11
     730:	af 90       	pop	r10
     732:	9f 90       	pop	r9
     734:	8f 90       	pop	r8
     736:	7f 90       	pop	r7
     738:	6f 90       	pop	r6
     73a:	5f 90       	pop	r5
     73c:	4f 90       	pop	r4
     73e:	08 95       	ret

00000740 <IMURead_eulerVelocities>:
     740:	4f 92       	push	r4
     742:	5f 92       	push	r5
     744:	6f 92       	push	r6
     746:	7f 92       	push	r7
     748:	8f 92       	push	r8
     74a:	9f 92       	push	r9
     74c:	af 92       	push	r10
     74e:	bf 92       	push	r11
     750:	cf 92       	push	r12
     752:	df 92       	push	r13
     754:	ef 92       	push	r14
     756:	ff 92       	push	r15
     758:	0f 93       	push	r16
     75a:	1f 93       	push	r17
     75c:	cf 93       	push	r28
     75e:	df 93       	push	r29
     760:	00 d0       	rcall	.+0      	; 0x762 <IMURead_eulerVelocities+0x22>
     762:	1f 92       	push	r1
     764:	cd b7       	in	r28, 0x3d	; 61
     766:	de b7       	in	r29, 0x3e	; 62
     768:	5c 01       	movw	r10, r24
     76a:	87 e7       	ldi	r24, 0x77	; 119
     76c:	2e de       	rcall	.-932    	; 0x3ca <i2c_beginTransmission>
     76e:	82 e4       	ldi	r24, 0x42	; 66
     770:	48 de       	rcall	.-880    	; 0x402 <i2c_write_byte>
     772:	86 e2       	ldi	r24, 0x26	; 38
     774:	46 de       	rcall	.-884    	; 0x402 <i2c_write_byte>
     776:	83 e4       	ldi	r24, 0x43	; 67
     778:	44 de       	rcall	.-888    	; 0x402 <i2c_write_byte>
     77a:	81 e0       	ldi	r24, 0x01	; 1
     77c:	30 de       	rcall	.-928    	; 0x3de <i2c_endTransmission>
     77e:	85 30       	cpi	r24, 0x05	; 5
     780:	29 f4       	brne	.+10     	; 0x78c <IMURead_eulerVelocities+0x4c>
     782:	82 e5       	ldi	r24, 0x52	; 82
     784:	92 e0       	ldi	r25, 0x02	; 2
     786:	53 d7       	rcall	.+3750   	; 0x162e <USART_Transmit_Line>
     788:	80 e0       	ldi	r24, 0x00	; 0
     78a:	56 c0       	rjmp	.+172    	; 0x838 <IMURead_eulerVelocities+0xf8>
     78c:	ee 24       	eor	r14, r14
     78e:	e3 94       	inc	r14
     790:	00 e0       	ldi	r16, 0x00	; 0
     792:	20 e0       	ldi	r18, 0x00	; 0
     794:	30 e0       	ldi	r19, 0x00	; 0
     796:	a9 01       	movw	r20, r18
     798:	6c e0       	ldi	r22, 0x0C	; 12
     79a:	87 e7       	ldi	r24, 0x77	; 119
     79c:	5a de       	rcall	.-844    	; 0x452 <i2c_requestFrom>
     79e:	0f 2e       	mov	r0, r31
     7a0:	f7 ee       	ldi	r31, 0xE7	; 231
     7a2:	cf 2e       	mov	r12, r31
     7a4:	f3 e0       	ldi	r31, 0x03	; 3
     7a6:	df 2e       	mov	r13, r31
     7a8:	f0 2d       	mov	r31, r0
     7aa:	0f 2e       	mov	r0, r31
     7ac:	f3 ef       	ldi	r31, 0xF3	; 243
     7ae:	8f 2e       	mov	r8, r31
     7b0:	f3 e0       	ldi	r31, 0x03	; 3
     7b2:	9f 2e       	mov	r9, r31
     7b4:	f0 2d       	mov	r31, r0
     7b6:	ce 01       	movw	r24, r28
     7b8:	01 96       	adiw	r24, 0x01	; 1
     7ba:	7c 01       	movw	r14, r24
     7bc:	19 82       	std	Y+1, r1	; 0x01
     7be:	1a 82       	std	Y+2, r1	; 0x02
     7c0:	1b 82       	std	Y+3, r1	; 0x03
     7c2:	1c 82       	std	Y+4, r1	; 0x04
     7c4:	8e 01       	movw	r16, r28
     7c6:	0b 5f       	subi	r16, 0xFB	; 251
     7c8:	1f 4f       	sbci	r17, 0xFF	; 255
     7ca:	87 de       	rcall	.-754    	; 0x4da <i2c_read>
     7cc:	f8 01       	movw	r30, r16
     7ce:	82 93       	st	-Z, r24
     7d0:	8f 01       	movw	r16, r30
     7d2:	ee 15       	cp	r30, r14
     7d4:	ff 05       	cpc	r31, r15
     7d6:	c9 f7       	brne	.-14     	; 0x7ca <IMURead_eulerVelocities+0x8a>
     7d8:	49 80       	ldd	r4, Y+1	; 0x01
     7da:	5a 80       	ldd	r5, Y+2	; 0x02
     7dc:	6b 80       	ldd	r6, Y+3	; 0x03
     7de:	7c 80       	ldd	r7, Y+4	; 0x04
     7e0:	20 e0       	ldi	r18, 0x00	; 0
     7e2:	30 e0       	ldi	r19, 0x00	; 0
     7e4:	40 ea       	ldi	r20, 0xA0	; 160
     7e6:	51 e4       	ldi	r21, 0x41	; 65
     7e8:	c3 01       	movw	r24, r6
     7ea:	b2 01       	movw	r22, r4
     7ec:	92 d7       	rcall	.+3876   	; 0x1712 <__cmpsf2>
     7ee:	18 16       	cp	r1, r24
     7f0:	4c f0       	brlt	.+18     	; 0x804 <IMURead_eulerVelocities+0xc4>
     7f2:	77 fa       	bst	r7, 7
     7f4:	70 94       	com	r7
     7f6:	77 f8       	bld	r7, 7
     7f8:	70 94       	com	r7
     7fa:	f6 01       	movw	r30, r12
     7fc:	40 82       	st	Z, r4
     7fe:	51 82       	std	Z+1, r5	; 0x01
     800:	62 82       	std	Z+2, r6	; 0x02
     802:	73 82       	std	Z+3, r7	; 0x03
     804:	f4 e0       	ldi	r31, 0x04	; 4
     806:	cf 0e       	add	r12, r31
     808:	d1 1c       	adc	r13, r1
     80a:	c8 14       	cp	r12, r8
     80c:	d9 04       	cpc	r13, r9
     80e:	b1 f6       	brne	.-84     	; 0x7bc <IMURead_eulerVelocities+0x7c>
     810:	f5 01       	movw	r30, r10
     812:	ee 0f       	add	r30, r30
     814:	ff 1f       	adc	r31, r31
     816:	ee 0f       	add	r30, r30
     818:	ff 1f       	adc	r31, r31
     81a:	eb 53       	subi	r30, 0x3B	; 59
     81c:	f5 4f       	sbci	r31, 0xF5	; 245
     81e:	80 91 eb 03 	lds	r24, 0x03EB	; 0x8003eb <euler_velocities+0x4>
     822:	90 91 ec 03 	lds	r25, 0x03EC	; 0x8003ec <euler_velocities+0x5>
     826:	a0 91 ed 03 	lds	r26, 0x03ED	; 0x8003ed <euler_velocities+0x6>
     82a:	b0 91 ee 03 	lds	r27, 0x03EE	; 0x8003ee <euler_velocities+0x7>
     82e:	80 83       	st	Z, r24
     830:	91 83       	std	Z+1, r25	; 0x01
     832:	a2 83       	std	Z+2, r26	; 0x02
     834:	b3 83       	std	Z+3, r27	; 0x03
     836:	81 e0       	ldi	r24, 0x01	; 1
     838:	0f 90       	pop	r0
     83a:	0f 90       	pop	r0
     83c:	0f 90       	pop	r0
     83e:	0f 90       	pop	r0
     840:	df 91       	pop	r29
     842:	cf 91       	pop	r28
     844:	1f 91       	pop	r17
     846:	0f 91       	pop	r16
     848:	ff 90       	pop	r15
     84a:	ef 90       	pop	r14
     84c:	df 90       	pop	r13
     84e:	cf 90       	pop	r12
     850:	bf 90       	pop	r11
     852:	af 90       	pop	r10
     854:	9f 90       	pop	r9
     856:	8f 90       	pop	r8
     858:	7f 90       	pop	r7
     85a:	6f 90       	pop	r6
     85c:	5f 90       	pop	r5
     85e:	4f 90       	pop	r4
     860:	08 95       	ret

00000862 <ControlLQR>:
     862:	cf 92       	push	r12
     864:	df 92       	push	r13
     866:	ef 92       	push	r14
     868:	ff 92       	push	r15
     86a:	cf 93       	push	r28
     86c:	df 93       	push	r29
     86e:	ec 01       	movw	r28, r24
     870:	2e ee       	ldi	r18, 0xEE	; 238
     872:	3c e5       	ldi	r19, 0x5C	; 92
     874:	4d e8       	ldi	r20, 0x8D	; 141
     876:	52 ec       	ldi	r21, 0xC2	; 194
     878:	60 91 0f 04 	lds	r22, 0x040F	; 0x80040f <encfloat>
     87c:	70 91 10 04 	lds	r23, 0x0410	; 0x800410 <encfloat+0x1>
     880:	80 91 11 04 	lds	r24, 0x0411	; 0x800411 <encfloat+0x2>
     884:	90 91 12 04 	lds	r25, 0x0412	; 0x800412 <encfloat+0x3>
     888:	0e 94 dc 0c 	call	0x19b8	; 0x19b8 <__mulsf3>
     88c:	6b 01       	movw	r12, r22
     88e:	7c 01       	movw	r14, r24
     890:	2c ed       	ldi	r18, 0xDC	; 220
     892:	36 e4       	ldi	r19, 0x46	; 70
     894:	4a e8       	ldi	r20, 0x8A	; 138
     896:	51 e4       	ldi	r21, 0x41	; 65
     898:	60 91 ff 03 	lds	r22, 0x03FF	; 0x8003ff <prec_velocity>
     89c:	70 91 00 04 	lds	r23, 0x0400	; 0x800400 <prec_velocity+0x1>
     8a0:	80 91 01 04 	lds	r24, 0x0401	; 0x800401 <prec_velocity+0x2>
     8a4:	90 91 02 04 	lds	r25, 0x0402	; 0x800402 <prec_velocity+0x3>
     8a8:	0e 94 dc 0c 	call	0x19b8	; 0x19b8 <__mulsf3>
     8ac:	9b 01       	movw	r18, r22
     8ae:	ac 01       	movw	r20, r24
     8b0:	c7 01       	movw	r24, r14
     8b2:	b6 01       	movw	r22, r12
     8b4:	ca d6       	rcall	.+3476   	; 0x164a <__addsf3>
     8b6:	6b 01       	movw	r12, r22
     8b8:	7c 01       	movw	r14, r24
     8ba:	2b e3       	ldi	r18, 0x3B	; 59
     8bc:	34 ea       	ldi	r19, 0xA4	; 164
     8be:	44 e1       	ldi	r20, 0x14	; 20
     8c0:	54 e4       	ldi	r21, 0x44	; 68
     8c2:	60 91 f7 03 	lds	r22, 0x03F7	; 0x8003f7 <euler_angles+0x4>
     8c6:	70 91 f8 03 	lds	r23, 0x03F8	; 0x8003f8 <euler_angles+0x5>
     8ca:	80 91 f9 03 	lds	r24, 0x03F9	; 0x8003f9 <euler_angles+0x6>
     8ce:	90 91 fa 03 	lds	r25, 0x03FA	; 0x8003fa <euler_angles+0x7>
     8d2:	0e 94 dc 0c 	call	0x19b8	; 0x19b8 <__mulsf3>
     8d6:	9b 01       	movw	r18, r22
     8d8:	ac 01       	movw	r20, r24
     8da:	c7 01       	movw	r24, r14
     8dc:	b6 01       	movw	r22, r12
     8de:	b5 d6       	rcall	.+3434   	; 0x164a <__addsf3>
     8e0:	6b 01       	movw	r12, r22
     8e2:	7c 01       	movw	r14, r24
     8e4:	25 e0       	ldi	r18, 0x05	; 5
     8e6:	33 ee       	ldi	r19, 0xE3	; 227
     8e8:	4c ee       	ldi	r20, 0xEC	; 236
     8ea:	52 e4       	ldi	r21, 0x42	; 66
     8ec:	60 91 eb 03 	lds	r22, 0x03EB	; 0x8003eb <euler_velocities+0x4>
     8f0:	70 91 ec 03 	lds	r23, 0x03EC	; 0x8003ec <euler_velocities+0x5>
     8f4:	80 91 ed 03 	lds	r24, 0x03ED	; 0x8003ed <euler_velocities+0x6>
     8f8:	90 91 ee 03 	lds	r25, 0x03EE	; 0x8003ee <euler_velocities+0x7>
     8fc:	0e 94 dc 0c 	call	0x19b8	; 0x19b8 <__mulsf3>
     900:	9b 01       	movw	r18, r22
     902:	ac 01       	movw	r20, r24
     904:	c7 01       	movw	r24, r14
     906:	b6 01       	movw	r22, r12
     908:	a0 d6       	rcall	.+3392   	; 0x164a <__addsf3>
     90a:	6b 01       	movw	r12, r22
     90c:	7c 01       	movw	r14, r24
     90e:	f7 fa       	bst	r15, 7
     910:	f0 94       	com	r15
     912:	f7 f8       	bld	r15, 7
     914:	f0 94       	com	r15
     916:	cc 0f       	add	r28, r28
     918:	dd 1f       	adc	r29, r29
     91a:	cc 0f       	add	r28, r28
     91c:	dd 1f       	adc	r29, r29
     91e:	cb 57       	subi	r28, 0x7B	; 123
     920:	db 4f       	sbci	r29, 0xFB	; 251
     922:	c8 82       	st	Y, r12
     924:	d9 82       	std	Y+1, r13	; 0x01
     926:	ea 82       	std	Y+2, r14	; 0x02
     928:	fb 82       	std	Y+3, r15	; 0x03
     92a:	20 e0       	ldi	r18, 0x00	; 0
     92c:	30 e0       	ldi	r19, 0x00	; 0
     92e:	a9 01       	movw	r20, r18
     930:	c7 01       	movw	r24, r14
     932:	b6 01       	movw	r22, r12
     934:	ee d6       	rcall	.+3548   	; 0x1712 <__cmpsf2>
     936:	88 23       	and	r24, r24
     938:	14 f4       	brge	.+4      	; 0x93e <ControlLQR+0xdc>
     93a:	73 9a       	sbi	0x0e, 3	; 14
     93c:	01 c0       	rjmp	.+2      	; 0x940 <ControlLQR+0xde>
     93e:	73 98       	cbi	0x0e, 3	; 14
     940:	c7 01       	movw	r24, r14
     942:	b6 01       	movw	r22, r12
     944:	52 d7       	rcall	.+3748   	; 0x17ea <__fixsfsi>
     946:	9b 01       	movw	r18, r22
     948:	77 23       	and	r23, r23
     94a:	24 f4       	brge	.+8      	; 0x954 <ControlLQR+0xf2>
     94c:	22 27       	eor	r18, r18
     94e:	33 27       	eor	r19, r19
     950:	26 1b       	sub	r18, r22
     952:	37 0b       	sbc	r19, r23
     954:	b9 01       	movw	r22, r18
     956:	33 0f       	add	r19, r19
     958:	88 0b       	sbc	r24, r24
     95a:	99 0b       	sbc	r25, r25
     95c:	79 d7       	rcall	.+3826   	; 0x1850 <__floatsisf>
     95e:	6b 01       	movw	r12, r22
     960:	7c 01       	movw	r14, r24
     962:	20 e0       	ldi	r18, 0x00	; 0
     964:	30 e0       	ldi	r19, 0x00	; 0
     966:	4a e8       	ldi	r20, 0x8A	; 138
     968:	52 e4       	ldi	r21, 0x42	; 66
     96a:	d3 d6       	rcall	.+3494   	; 0x1712 <__cmpsf2>
     96c:	88 23       	and	r24, r24
     96e:	44 f0       	brlt	.+16     	; 0x980 <ControlLQR+0x11e>
     970:	0f 2e       	mov	r0, r31
     972:	c1 2c       	mov	r12, r1
     974:	d1 2c       	mov	r13, r1
     976:	fa e8       	ldi	r31, 0x8A	; 138
     978:	ef 2e       	mov	r14, r31
     97a:	f2 e4       	ldi	r31, 0x42	; 66
     97c:	ff 2e       	mov	r15, r31
     97e:	f0 2d       	mov	r31, r0
     980:	20 e0       	ldi	r18, 0x00	; 0
     982:	30 e0       	ldi	r19, 0x00	; 0
     984:	4a e8       	ldi	r20, 0x8A	; 138
     986:	52 e4       	ldi	r21, 0x42	; 66
     988:	c7 01       	movw	r24, r14
     98a:	b6 01       	movw	r22, r12
     98c:	c6 d6       	rcall	.+3468   	; 0x171a <__divsf3>
     98e:	20 e0       	ldi	r18, 0x00	; 0
     990:	30 e0       	ldi	r19, 0x00	; 0
     992:	4f e7       	ldi	r20, 0x7F	; 127
     994:	53 e4       	ldi	r21, 0x43	; 67
     996:	0e 94 dc 0c 	call	0x19b8	; 0x19b8 <__mulsf3>
     99a:	2c d7       	rcall	.+3672   	; 0x17f4 <__fixunssfsi>
     99c:	68 bd       	out	0x28, r22	; 40
     99e:	df 91       	pop	r29
     9a0:	cf 91       	pop	r28
     9a2:	ff 90       	pop	r15
     9a4:	ef 90       	pop	r14
     9a6:	df 90       	pop	r13
     9a8:	cf 90       	pop	r12
     9aa:	08 95       	ret

000009ac <ReadSSI>:
/*********************************************************************
*						Read SSI via SPI
*********************************************************************/

uint32_t ReadSSI() //Mimic SSI communication
{
     9ac:	24 e0       	ldi	r18, 0x04	; 4
	uint8_t u8byteCount;      // Data length counter
	uint8_t u8data;           // Data temporary variable
	uint32_t u32result = 0;   // Data complete variable
     9ae:	80 e0       	ldi	r24, 0x00	; 0
     9b0:	90 e0       	ldi	r25, 0x00	; 0
     9b2:	dc 01       	movw	r26, r24

	for(u8byteCount = 0; u8byteCount < 4; u8byteCount++)            // Fetch data function
	{
		// send a dummy byte, read the result
		SPDR = 0xFF;                      // Send dummy message
     9b4:	4f ef       	ldi	r20, 0xFF	; 255
     9b6:	4e bd       	out	0x2e, r20	; 46
		u32result <<= 8;                  // Shift old result
     9b8:	ba 2f       	mov	r27, r26
     9ba:	a9 2f       	mov	r26, r25
     9bc:	98 2f       	mov	r25, r24
     9be:	88 27       	eor	r24, r24
		while( (SPSR & (1<<SPIF)) == 0 ); // Wait for new data
     9c0:	0d b4       	in	r0, 0x2d	; 45
     9c2:	07 fe       	sbrs	r0, 7
     9c4:	fd cf       	rjmp	.-6      	; 0x9c0 <ReadSSI+0x14>
		u8data = SPDR;                    // Store data
     9c6:	3e b5       	in	r19, 0x2e	; 46
		u32result |= u8data;              // Update complete data variable
     9c8:	83 2b       	or	r24, r19
     9ca:	21 50       	subi	r18, 0x01	; 1
{
	uint8_t u8byteCount;      // Data length counter
	uint8_t u8data;           // Data temporary variable
	uint32_t u32result = 0;   // Data complete variable

	for(u8byteCount = 0; u8byteCount < 4; u8byteCount++)            // Fetch data function
     9cc:	a1 f7       	brne	.-24     	; 0x9b6 <ReadSSI+0xa>
		while( (SPSR & (1<<SPIF)) == 0 ); // Wait for new data
		u8data = SPDR;                    // Store data
		u32result |= u8data;              // Update complete data variable
	}
	//u32result = u32result >> 7;					// The last seven bits are timeout
	return ((u32result >> 12) & IMU_MAX_ENCVAL);		// Return only absolute position
     9ce:	07 2e       	mov	r0, r23
     9d0:	7c e0       	ldi	r23, 0x0C	; 12
     9d2:	b6 95       	lsr	r27
     9d4:	a7 95       	ror	r26
     9d6:	97 95       	ror	r25
     9d8:	87 95       	ror	r24
     9da:	7a 95       	dec	r23
     9dc:	d1 f7       	brne	.-12     	; 0x9d2 <ReadSSI+0x26>
     9de:	70 2d       	mov	r23, r0
     9e0:	bc 01       	movw	r22, r24
     9e2:	cd 01       	movw	r24, r26
     9e4:	87 70       	andi	r24, 0x07	; 7
     9e6:	99 27       	eor	r25, r25
}
     9e8:	08 95       	ret

000009ea <InitSSI>:
*              Initalize SPI to mimic SSI
*********************************************************************/

void InitSSI() // Initialize the encoder communication
{
	DDRB = _BV(DDB1) | _BV(DDB3) | _BV(DDB0);   // Configure SCK, MOSI and  Slave Select
     9ea:	8b e0       	ldi	r24, 0x0B	; 11
     9ec:	84 b9       	out	0x04, r24	; 4
	SPCR |= _BV(SPR1);                // divided clock by 128
     9ee:	8c b5       	in	r24, 0x2c	; 44
     9f0:	82 60       	ori	r24, 0x02	; 2
     9f2:	8c bd       	out	0x2c, r24	; 44
	SPCR |= _BV(SPE) | _BV(MSTR) | _BV(CPOL);    // Configure SPI as master, with CLK idle high
     9f4:	8c b5       	in	r24, 0x2c	; 44
     9f6:	88 65       	ori	r24, 0x58	; 88
     9f8:	8c bd       	out	0x2c, r24	; 44
	encval_offset = ReadSSI();                  // Save initial value
     9fa:	d8 df       	rcall	.-80     	; 0x9ac <ReadSSI>
     9fc:	60 93 07 04 	sts	0x0407, r22	; 0x800407 <encval_offset>
     a00:	70 93 08 04 	sts	0x0408, r23	; 0x800408 <encval_offset+0x1>
     a04:	80 93 09 04 	sts	0x0409, r24	; 0x800409 <encval_offset+0x2>
     a08:	90 93 0a 04 	sts	0x040A, r25	; 0x80040a <encval_offset+0x3>
     a0c:	08 95       	ret

00000a0e <EncoderRead>:
/*********************************************************************
*                    Read encoder function
*********************************************************************/

char EncoderRead(int buffCount) // Requests values from the Encoder
{
     a0e:	4f 92       	push	r4
     a10:	5f 92       	push	r5
     a12:	6f 92       	push	r6
     a14:	7f 92       	push	r7
     a16:	af 92       	push	r10
     a18:	bf 92       	push	r11
     a1a:	cf 92       	push	r12
     a1c:	df 92       	push	r13
     a1e:	ef 92       	push	r14
     a20:	ff 92       	push	r15
     a22:	0f 93       	push	r16
     a24:	1f 93       	push	r17
     a26:	cf 93       	push	r28
     a28:	df 93       	push	r29
     a2a:	ec 01       	movw	r28, r24
	oldtimer = timer;						// Last data point timer
     a2c:	a0 90 03 04 	lds	r10, 0x0403	; 0x800403 <timer>
     a30:	b0 90 04 04 	lds	r11, 0x0404	; 0x800404 <timer+0x1>
     a34:	b0 92 06 04 	sts	0x0406, r11	; 0x800406 <oldtimer+0x1>
     a38:	a0 92 05 04 	sts	0x0405, r10	; 0x800405 <oldtimer>
	float oldEncfloat = encfloat;			// Save previous time
     a3c:	40 90 0f 04 	lds	r4, 0x040F	; 0x80040f <encfloat>
     a40:	50 90 10 04 	lds	r5, 0x0410	; 0x800410 <encfloat+0x1>
     a44:	60 90 11 04 	lds	r6, 0x0411	; 0x800411 <encfloat+0x2>
     a48:	70 90 12 04 	lds	r7, 0x0412	; 0x800412 <encfloat+0x3>
	timer = TCNT3;
     a4c:	00 91 94 00 	lds	r16, 0x0094	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
     a50:	10 91 95 00 	lds	r17, 0x0095	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
     a54:	10 93 04 04 	sts	0x0404, r17	; 0x800404 <timer+0x1>
     a58:	00 93 03 04 	sts	0x0403, r16	; 0x800403 <timer>
	}
	else {
		deltaClock = (timer - oldtimer) * ENCODER_TICK_PER_S;
	}

	encval = ReadSSI();												// Get encoder position
     a5c:	a7 df       	rcall	.-178    	; 0x9ac <ReadSSI>
     a5e:	60 93 0b 04 	sts	0x040B, r22	; 0x80040b <encval>
     a62:	70 93 0c 04 	sts	0x040C, r23	; 0x80040c <encval+0x1>
     a66:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <encval+0x2>
     a6a:	90 93 0e 04 	sts	0x040E, r25	; 0x80040e <encval+0x3>
	encfloat = ((float)encval * 8 * M_PI)/ (IMU_MAX_ENCVAL + 1);    // Counts to radians
#ifndef _CALIBRATION
	encfloat -= ENCODER_MID_POINT;									// Centers the encoder value so that straight up is 0
	encfloat = -encfloat;											// Inverts value in order to match model
     a6e:	ee d6       	rcall	.+3548   	; 0x184c <__floatunsisf>
     a70:	20 e0       	ldi	r18, 0x00	; 0
     a72:	30 e0       	ldi	r19, 0x00	; 0
     a74:	40 e0       	ldi	r20, 0x00	; 0
     a76:	51 e4       	ldi	r21, 0x41	; 65
     a78:	9f d7       	rcall	.+3902   	; 0x19b8 <__mulsf3>
     a7a:	2b ed       	ldi	r18, 0xDB	; 219
     a7c:	3f e0       	ldi	r19, 0x0F	; 15
     a7e:	49 e4       	ldi	r20, 0x49	; 73
     a80:	50 e4       	ldi	r21, 0x40	; 64
     a82:	9a d7       	rcall	.+3892   	; 0x19b8 <__mulsf3>
     a84:	20 e0       	ldi	r18, 0x00	; 0
     a86:	30 e0       	ldi	r19, 0x00	; 0
     a88:	40 e0       	ldi	r20, 0x00	; 0
     a8a:	56 e3       	ldi	r21, 0x36	; 54
     a8c:	95 d7       	rcall	.+3882   	; 0x19b8 <__mulsf3>
     a8e:	26 e2       	ldi	r18, 0x26	; 38
     a90:	34 ee       	ldi	r19, 0xE4	; 228
     a92:	4d ef       	ldi	r20, 0xFD	; 253
     a94:	50 e4       	ldi	r21, 0x40	; 64
     a96:	d8 d5       	rcall	.+2992   	; 0x1648 <__subsf3>
     a98:	6b 01       	movw	r12, r22
     a9a:	7c 01       	movw	r14, r24
     a9c:	f7 fa       	bst	r15, 7
     a9e:	f0 94       	com	r15
     aa0:	f7 f8       	bld	r15, 7
     aa2:	f0 94       	com	r15
     aa4:	c0 92 0f 04 	sts	0x040F, r12	; 0x80040f <encfloat>
     aa8:	d0 92 10 04 	sts	0x0410, r13	; 0x800410 <encfloat+0x1>
     aac:	e0 92 11 04 	sts	0x0411, r14	; 0x800411 <encfloat+0x2>
     ab0:	f0 92 12 04 	sts	0x0412, r15	; 0x800412 <encfloat+0x3>
     ab4:	a3 01       	movw	r20, r6
	char buffer[32];
	USART_Transmit_String("encfloat: ");
	dtostrf(encfloat, 4, 4, buffer);
	USART_Transmit_Line(buffer);
#endif
	prec_velocity = (encfloat - oldEncfloat) / deltaClock;			// Calculate the velocity
     ab6:	92 01       	movw	r18, r4
     ab8:	c7 01       	movw	r24, r14
     aba:	b6 01       	movw	r22, r12
     abc:	c5 d5       	rcall	.+2954   	; 0x1648 <__subsf3>
     abe:	2b 01       	movw	r4, r22
     ac0:	3c 01       	movw	r6, r24
     ac2:	b8 01       	movw	r22, r16
     ac4:	6a 19       	sub	r22, r10
     ac6:	7b 09       	sbc	r23, r11
     ac8:	80 e0       	ldi	r24, 0x00	; 0
     aca:	90 e0       	ldi	r25, 0x00	; 0
     acc:	bf d6       	rcall	.+3454   	; 0x184c <__floatunsisf>
     ace:	2d eb       	ldi	r18, 0xBD	; 189
     ad0:	37 e3       	ldi	r19, 0x37	; 55
     ad2:	46 e0       	ldi	r20, 0x06	; 6
     ad4:	55 e3       	ldi	r21, 0x35	; 53
     ad6:	70 d7       	rcall	.+3808   	; 0x19b8 <__mulsf3>
     ad8:	9b 01       	movw	r18, r22
     ada:	ac 01       	movw	r20, r24
     adc:	c3 01       	movw	r24, r6
     ade:	b2 01       	movw	r22, r4
     ae0:	1c d6       	rcall	.+3128   	; 0x171a <__divsf3>
     ae2:	60 93 ff 03 	sts	0x03FF, r22	; 0x8003ff <prec_velocity>
     ae6:	70 93 00 04 	sts	0x0400, r23	; 0x800400 <prec_velocity+0x1>
     aea:	80 93 01 04 	sts	0x0401, r24	; 0x800401 <prec_velocity+0x2>
     aee:	90 93 02 04 	sts	0x0402, r25	; 0x800402 <prec_velocity+0x3>
     af2:	9e 01       	movw	r18, r28
	angleBuffer[buffCount] = encfloat;								// Encoder angle data into buffer
     af4:	22 0f       	add	r18, r18
     af6:	33 1f       	adc	r19, r19
     af8:	22 0f       	add	r18, r18
     afa:	33 1f       	adc	r19, r19
     afc:	f9 01       	movw	r30, r18
     afe:	eb 5e       	subi	r30, 0xEB	; 235
     b00:	f9 4f       	sbci	r31, 0xF9	; 249
     b02:	c0 82       	st	Z, r12
     b04:	d1 82       	std	Z+1, r13	; 0x01
     b06:	e2 82       	std	Z+2, r14	; 0x02
     b08:	f3 82       	std	Z+3, r15	; 0x03
     b0a:	f9 01       	movw	r30, r18
	velocityBuffer[buffCount] = prec_velocity;
     b0c:	eb 55       	subi	r30, 0x5B	; 91
     b0e:	f8 4f       	sbci	r31, 0xF8	; 248
     b10:	60 83       	st	Z, r22
     b12:	71 83       	std	Z+1, r23	; 0x01
     b14:	82 83       	std	Z+2, r24	; 0x02
     b16:	93 83       	std	Z+3, r25	; 0x03

	return encfloat >= ENCODER_MIN_ANGLE && encfloat <= ENCODER_MAX_ANGLE;
     b18:	20 e0       	ldi	r18, 0x00	; 0
     b1a:	30 e0       	ldi	r19, 0x00	; 0
     b1c:	40 e4       	ldi	r20, 0x40	; 64
     b1e:	5f eb       	ldi	r21, 0xBF	; 191
     b20:	c7 01       	movw	r24, r14
     b22:	b6 01       	movw	r22, r12
     b24:	45 d7       	rcall	.+3722   	; 0x19b0 <__gesf2>
     b26:	88 23       	and	r24, r24
     b28:	6c f0       	brlt	.+26     	; 0xb44 <EncoderRead+0x136>
     b2a:	c1 e0       	ldi	r28, 0x01	; 1
     b2c:	20 e0       	ldi	r18, 0x00	; 0
     b2e:	30 e0       	ldi	r19, 0x00	; 0
     b30:	40 e4       	ldi	r20, 0x40	; 64
     b32:	5f e3       	ldi	r21, 0x3F	; 63
     b34:	c7 01       	movw	r24, r14
     b36:	b6 01       	movw	r22, r12
     b38:	ec d5       	rcall	.+3032   	; 0x1712 <__cmpsf2>
     b3a:	18 16       	cp	r1, r24
     b3c:	0c f4       	brge	.+2      	; 0xb40 <EncoderRead+0x132>
     b3e:	c0 e0       	ldi	r28, 0x00	; 0
     b40:	8c 2f       	mov	r24, r28
     b42:	01 c0       	rjmp	.+2      	; 0xb46 <EncoderRead+0x138>
     b44:	80 e0       	ldi	r24, 0x00	; 0
     b46:	df 91       	pop	r29
}
     b48:	cf 91       	pop	r28
     b4a:	1f 91       	pop	r17
     b4c:	0f 91       	pop	r16
     b4e:	ff 90       	pop	r15
     b50:	ef 90       	pop	r14
     b52:	df 90       	pop	r13
     b54:	cf 90       	pop	r12
     b56:	bf 90       	pop	r11
     b58:	af 90       	pop	r10
     b5a:	7f 90       	pop	r7
     b5c:	6f 90       	pop	r6
     b5e:	5f 90       	pop	r5
     b60:	4f 90       	pop	r4
     b62:	08 95       	ret

00000b64 <precessToZero>:
     b64:	4f 92       	push	r4
/*********************************************************************
*							precessToZero
*********************************************************************/

void precessToZero()
{
     b66:	5f 92       	push	r5
     b68:	6f 92       	push	r6
     b6a:	7f 92       	push	r7
     b6c:	8f 92       	push	r8
     b6e:	9f 92       	push	r9
     b70:	af 92       	push	r10
     b72:	bf 92       	push	r11
     b74:	cf 92       	push	r12
     b76:	df 92       	push	r13
     b78:	ef 92       	push	r14
     b7a:	ff 92       	push	r15
     b7c:	0f 93       	push	r16
     b7e:	1f 93       	push	r17
     b80:	cf 93       	push	r28
     b82:	df 93       	push	r29
     b84:	cd b7       	in	r28, 0x3d	; 61
     b86:	de b7       	in	r29, 0x3e	; 62
     b88:	a0 97       	sbiw	r28, 0x20	; 32
     b8a:	0f b6       	in	r0, 0x3f	; 63
     b8c:	f8 94       	cli
     b8e:	de bf       	out	0x3e, r29	; 62
     b90:	0f be       	out	0x3f, r0	; 63
     b92:	cd bf       	out	0x3d, r28	; 61
	//return;
	int buffCount = 0;
	double tickToSec = 1.0 / (F_CPU / 64.0);
	uint32_t totalTime = 0;
	uint16_t lastTime = TCNT3;
     b94:	c0 90 94 00 	lds	r12, 0x0094	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
     b98:	d0 90 95 00 	lds	r13, 0x0095	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
void precessToZero()
{
	//return;
	int buffCount = 0;
	double tickToSec = 1.0 / (F_CPU / 64.0);
	uint32_t totalTime = 0;
     b9c:	81 2c       	mov	r8, r1
     b9e:	91 2c       	mov	r9, r1
     ba0:	54 01       	movw	r10, r8
*********************************************************************/

void precessToZero()
{
	//return;
	int buffCount = 0;
     ba2:	00 e0       	ldi	r16, 0x00	; 0
     ba4:	10 e0       	ldi	r17, 0x00	; 0

		float control = fabs(encfloat);
		unsigned char torquePWM = min(TEST_MAX_SPEED * control, PREC_TO_ZERO_MAX_PWM);


		totalTime += (uint16_t)(TCNT3 - lastTime);
     ba6:	0f 2e       	mov	r0, r31
     ba8:	f4 e9       	ldi	r31, 0x94	; 148
     baa:	ef 2e       	mov	r14, r31
     bac:	f1 2c       	mov	r15, r1
     bae:	f0 2d       	mov	r31, r0
	{
		if (iter >= 500) {
			break;
		}

		while (flag == 0);
     bb0:	80 91 e6 03 	lds	r24, 0x03E6	; 0x8003e6 <flag>
     bb4:	88 23       	and	r24, r24
     bb6:	e1 f3       	breq	.-8      	; 0xbb0 <precessToZero+0x4c>
		
		if (!IMURead_eulerAngle(buffCount)) {
     bb8:	c8 01       	movw	r24, r16
     bba:	21 dd       	rcall	.-1470   	; 0x5fe <IMURead_eulerAngle>
     bbc:	88 23       	and	r24, r24
     bbe:	09 f4       	brne	.+2      	; 0xbc2 <precessToZero+0x5e>
     bc0:	4b c0       	rjmp	.+150    	; 0xc58 <precessToZero+0xf4>
			break;
		}
		if (!IMURead_eulerVelocities(buffCount)) {
     bc2:	c8 01       	movw	r24, r16
     bc4:	bd dd       	rcall	.-1158   	; 0x740 <IMURead_eulerVelocities>
     bc6:	88 23       	and	r24, r24
     bc8:	09 f4       	brne	.+2      	; 0xbcc <precessToZero+0x68>
     bca:	46 c0       	rjmp	.+140    	; 0xc58 <precessToZero+0xf4>
			break;
		}

		EncoderRead(buffCount);
     bcc:	c8 01       	movw	r24, r16
     bce:	1f df       	rcall	.-450    	; 0xa0e <EncoderRead>
     bd0:	20 e0       	ldi	r18, 0x00	; 0

		if (encfloat < 0.0f) PORTE &= ~_BV(PORTE3);
     bd2:	30 e0       	ldi	r19, 0x00	; 0
     bd4:	a9 01       	movw	r20, r18
     bd6:	60 91 0f 04 	lds	r22, 0x040F	; 0x80040f <encfloat>
     bda:	70 91 10 04 	lds	r23, 0x0410	; 0x800410 <encfloat+0x1>
     bde:	80 91 11 04 	lds	r24, 0x0411	; 0x800411 <encfloat+0x2>
     be2:	90 91 12 04 	lds	r25, 0x0412	; 0x800412 <encfloat+0x3>
     be6:	95 d5       	rcall	.+2858   	; 0x1712 <__cmpsf2>
     be8:	88 23       	and	r24, r24
     bea:	14 f4       	brge	.+4      	; 0xbf0 <precessToZero+0x8c>
     bec:	73 98       	cbi	0x0e, 3	; 14
     bee:	01 c0       	rjmp	.+2      	; 0xbf2 <precessToZero+0x8e>
     bf0:	73 9a       	sbi	0x0e, 3	; 14
		else PORTE |= _BV(PORTE3);
     bf2:	80 91 0f 04 	lds	r24, 0x040F	; 0x80040f <encfloat>

		float control = fabs(encfloat);
		unsigned char torquePWM = min(TEST_MAX_SPEED * control, PREC_TO_ZERO_MAX_PWM);
     bf6:	90 91 10 04 	lds	r25, 0x0410	; 0x800410 <encfloat+0x1>
     bfa:	a0 91 11 04 	lds	r26, 0x0411	; 0x800411 <encfloat+0x2>
     bfe:	b0 91 12 04 	lds	r27, 0x0412	; 0x800412 <encfloat+0x3>
     c02:	bc 01       	movw	r22, r24
     c04:	cd 01       	movw	r24, r26
     c06:	9f 77       	andi	r25, 0x7F	; 127
     c08:	20 e0       	ldi	r18, 0x00	; 0
     c0a:	30 e0       	ldi	r19, 0x00	; 0
     c0c:	4f e7       	ldi	r20, 0x7F	; 127
     c0e:	53 e4       	ldi	r21, 0x43	; 67
     c10:	d3 d6       	rcall	.+3494   	; 0x19b8 <__mulsf3>
     c12:	2b 01       	movw	r4, r22
     c14:	3c 01       	movw	r6, r24
     c16:	20 e0       	ldi	r18, 0x00	; 0
     c18:	30 e0       	ldi	r19, 0x00	; 0
     c1a:	4c e8       	ldi	r20, 0x8C	; 140
     c1c:	52 e4       	ldi	r21, 0x42	; 66
     c1e:	79 d5       	rcall	.+2802   	; 0x1712 <__cmpsf2>
     c20:	88 23       	and	r24, r24
     c22:	24 f4       	brge	.+8      	; 0xc2c <precessToZero+0xc8>
     c24:	c3 01       	movw	r24, r6
     c26:	b2 01       	movw	r22, r4
     c28:	e5 d5       	rcall	.+3018   	; 0x17f4 <__fixunssfsi>
     c2a:	01 c0       	rjmp	.+2      	; 0xc2e <precessToZero+0xca>
     c2c:	66 e4       	ldi	r22, 0x46	; 70
     c2e:	f7 01       	movw	r30, r14


		totalTime += (uint16_t)(TCNT3 - lastTime);
     c30:	80 81       	ld	r24, Z
     c32:	91 81       	ldd	r25, Z+1	; 0x01
     c34:	8c 19       	sub	r24, r12
     c36:	9d 09       	sbc	r25, r13
     c38:	88 0e       	add	r8, r24
     c3a:	99 1e       	adc	r9, r25
     c3c:	a1 1c       	adc	r10, r1
     c3e:	b1 1c       	adc	r11, r1
     c40:	c0 80       	ld	r12, Z
		lastTime = TCNT3;
     c42:	d1 80       	ldd	r13, Z+1	; 0x01
     c44:	68 bd       	out	0x28, r22	; 40
		OCR0B = torquePWM;
     c46:	10 92 e6 03 	sts	0x03E6, r1	; 0x8003e6 <flag>
		flag = 0;
     c4a:	0f 5f       	subi	r16, 0xFF	; 255
		iter++;
		buffCount++;
     c4c:	1f 4f       	sbci	r17, 0xFF	; 255
     c4e:	04 3f       	cpi	r16, 0xF4	; 244

	int iter = 0;
	// Start up sequence
	while (1)
	{
		if (iter >= 500) {
     c50:	f1 e0       	ldi	r31, 0x01	; 1
     c52:	1f 07       	cpc	r17, r31
     c54:	09 f0       	breq	.+2      	; 0xc58 <precessToZero+0xf4>
     c56:	ac cf       	rjmp	.-168    	; 0xbb0 <precessToZero+0x4c>
		iter++;
		buffCount++;
	}
	
	char buffer[32];
	USART_Transmit_String("Time spent in precessToZero: ");
     c58:	8e eb       	ldi	r24, 0xBE	; 190
     c5a:	92 e0       	ldi	r25, 0x02	; 2
     c5c:	dc d4       	rcall	.+2488   	; 0x1616 <USART_Transmit_String>
     c5e:	bf 92       	push	r11
	sprintf(buffer, "%lu", totalTime);
     c60:	af 92       	push	r10
     c62:	9f 92       	push	r9
     c64:	8f 92       	push	r8
     c66:	8c ed       	ldi	r24, 0xDC	; 220
     c68:	92 e0       	ldi	r25, 0x02	; 2
     c6a:	9f 93       	push	r25
     c6c:	8f 93       	push	r24
     c6e:	ce 01       	movw	r24, r28
     c70:	01 96       	adiw	r24, 0x01	; 1
     c72:	7c 01       	movw	r14, r24
     c74:	9f 93       	push	r25
     c76:	8f 93       	push	r24
	USART_Transmit_String(buffer);
     c78:	4b d7       	rcall	.+3734   	; 0x1b10 <sprintf>
     c7a:	c7 01       	movw	r24, r14
     c7c:	cc d4       	rcall	.+2456   	; 0x1616 <USART_Transmit_String>
	USART_Transmit_String(" ticks, ");
     c7e:	80 ee       	ldi	r24, 0xE0	; 224
     c80:	92 e0       	ldi	r25, 0x02	; 2
     c82:	c9 d4       	rcall	.+2450   	; 0x1616 <USART_Transmit_String>
	dtostrf(totalTime * tickToSec, 4, 2, buffer);
     c84:	c5 01       	movw	r24, r10
     c86:	b4 01       	movw	r22, r8
     c88:	e1 d5       	rcall	.+3010   	; 0x184c <__floatunsisf>
     c8a:	2d eb       	ldi	r18, 0xBD	; 189
     c8c:	37 e3       	ldi	r19, 0x37	; 55
     c8e:	46 e8       	ldi	r20, 0x86	; 134
     c90:	56 e3       	ldi	r21, 0x36	; 54
     c92:	92 d6       	rcall	.+3364   	; 0x19b8 <__mulsf3>
     c94:	87 01       	movw	r16, r14
     c96:	22 e0       	ldi	r18, 0x02	; 2
     c98:	44 e0       	ldi	r20, 0x04	; 4
     c9a:	1b d7       	rcall	.+3638   	; 0x1ad2 <dtostrf>
	USART_Transmit_String(buffer);
     c9c:	c7 01       	movw	r24, r14
     c9e:	bb d4       	rcall	.+2422   	; 0x1616 <USART_Transmit_String>
     ca0:	89 ee       	ldi	r24, 0xE9	; 233
	USART_Transmit_Line(" seconds.");
     ca2:	92 e0       	ldi	r25, 0x02	; 2
     ca4:	c4 d4       	rcall	.+2440   	; 0x162e <USART_Transmit_Line>
     ca6:	18 bc       	out	0x28, r1	; 40
     ca8:	0f b6       	in	r0, 0x3f	; 63
	OCR0B = 0;
     caa:	f8 94       	cli
}
     cac:	de bf       	out	0x3e, r29	; 62
     cae:	0f be       	out	0x3f, r0	; 63
     cb0:	cd bf       	out	0x3d, r28	; 61
     cb2:	a0 96       	adiw	r28, 0x20	; 32
     cb4:	0f b6       	in	r0, 0x3f	; 63
     cb6:	f8 94       	cli
     cb8:	de bf       	out	0x3e, r29	; 62
     cba:	0f be       	out	0x3f, r0	; 63
     cbc:	cd bf       	out	0x3d, r28	; 61
     cbe:	df 91       	pop	r29
     cc0:	cf 91       	pop	r28
     cc2:	1f 91       	pop	r17
     cc4:	0f 91       	pop	r16
     cc6:	ff 90       	pop	r15
     cc8:	ef 90       	pop	r14
     cca:	df 90       	pop	r13
     ccc:	cf 90       	pop	r12
     cce:	bf 90       	pop	r11
     cd0:	af 90       	pop	r10
     cd2:	9f 90       	pop	r9
     cd4:	8f 90       	pop	r8
     cd6:	7f 90       	pop	r7
     cd8:	6f 90       	pop	r6
     cda:	5f 90       	pop	r5
     cdc:	4f 90       	pop	r4
     cde:	08 95       	ret

00000ce0 <resetDataToRaspberry>:
     ce0:	10 92 e2 03 	sts	0x03E2, r1	; 0x8003e2 <counter>
*						resetDataToRaspberry
*********************************************************************/

void resetDataToRaspberry(){

	counter=0;															//Auxiliary counter for timer
     ce4:	10 92 e3 03 	sts	0x03E3, r1	; 0x8003e3 <counter+0x1>
     ce8:	10 92 e4 03 	sts	0x03E4, r1	; 0x8003e4 <counter+0x2>
     cec:	10 92 e5 03 	sts	0x03E5, r1	; 0x8003e5 <counter+0x3>
	memset(timerBuffer, 0, sizeof(*timerBuffer) * BUFFER_SIZE);			//Time of data into buffer
     cf0:	80 e9       	ldi	r24, 0x90	; 144
     cf2:	91 e0       	ldi	r25, 0x01	; 1
     cf4:	e5 e3       	ldi	r30, 0x35	; 53
     cf6:	f9 e0       	ldi	r31, 0x09	; 9
     cf8:	df 01       	movw	r26, r30
     cfa:	9c 01       	movw	r18, r24
     cfc:	1d 92       	st	X+, r1
     cfe:	21 50       	subi	r18, 0x01	; 1
     d00:	30 40       	sbci	r19, 0x00	; 0
     d02:	e1 f7       	brne	.-8      	; 0xcfc <resetDataToRaspberry+0x1c>
	memset(IMUX_angle, 0, sizeof(*IMUX_angle) * BUFFER_SIZE);			//IMU X angle data into buffer
     d04:	e5 e5       	ldi	r30, 0x55	; 85
     d06:	fc e0       	ldi	r31, 0x0C	; 12
     d08:	df 01       	movw	r26, r30
     d0a:	9c 01       	movw	r18, r24
     d0c:	1d 92       	st	X+, r1
     d0e:	21 50       	subi	r18, 0x01	; 1
     d10:	30 40       	sbci	r19, 0x00	; 0
     d12:	e1 f7       	brne	.-8      	; 0xd0c <resetDataToRaspberry+0x2c>
	memset(IMUX_velocity, 0, sizeof(*IMUX_velocity) * BUFFER_SIZE);		//IMU X velocity data into buffer
     d14:	e5 ec       	ldi	r30, 0xC5	; 197
     d16:	fa e0       	ldi	r31, 0x0A	; 10
     d18:	df 01       	movw	r26, r30
     d1a:	9c 01       	movw	r18, r24
     d1c:	1d 92       	st	X+, r1
     d1e:	21 50       	subi	r18, 0x01	; 1
     d20:	30 40       	sbci	r19, 0x00	; 0
     d22:	e1 f7       	brne	.-8      	; 0xd1c <resetDataToRaspberry+0x3c>
	memset(angleBuffer, 0, sizeof(*angleBuffer) * BUFFER_SIZE);		//Encoder angle data into buffer
     d24:	e5 e1       	ldi	r30, 0x15	; 21
     d26:	f6 e0       	ldi	r31, 0x06	; 6
     d28:	df 01       	movw	r26, r30
     d2a:	9c 01       	movw	r18, r24
     d2c:	1d 92       	st	X+, r1
     d2e:	21 50       	subi	r18, 0x01	; 1
     d30:	30 40       	sbci	r19, 0x00	; 0
     d32:	e1 f7       	brne	.-8      	; 0xd2c <resetDataToRaspberry+0x4c>
	memset(velocityBuffer, 0, sizeof(*velocityBuffer) * BUFFER_SIZE);	//Encoder velocity data into buffer
     d34:	e5 ea       	ldi	r30, 0xA5	; 165
     d36:	f7 e0       	ldi	r31, 0x07	; 7
     d38:	df 01       	movw	r26, r30
     d3a:	9c 01       	movw	r18, r24
     d3c:	1d 92       	st	X+, r1
     d3e:	21 50       	subi	r18, 0x01	; 1
     d40:	30 40       	sbci	r19, 0x00	; 0
     d42:	e1 f7       	brne	.-8      	; 0xd3c <resetDataToRaspberry+0x5c>
	memset(controlBuffer, 0, sizeof(*controlBuffer) * BUFFER_SIZE);			//Control input u, into buffer
     d44:	e5 e8       	ldi	r30, 0x85	; 133
     d46:	f4 e0       	ldi	r31, 0x04	; 4
     d48:	df 01       	movw	r26, r30
     d4a:	9c 01       	movw	r18, r24
     d4c:	1d 92       	st	X+, r1
     d4e:	21 50       	subi	r18, 0x01	; 1
     d50:	30 40       	sbci	r19, 0x00	; 0
     d52:	e1 f7       	brne	.-8      	; 0xd4c <resetDataToRaspberry+0x6c>
     d54:	08 95       	ret

00000d56 <logDataToRaspberry>:
/*********************************************************************
*						logDataToRaspberry
*********************************************************************/

void logDataToRaspberry(){
	USART_Transmit_Line("\ntimerBuffer:");
     d56:	83 ef       	ldi	r24, 0xF3	; 243
     d58:	92 e0       	ldi	r25, 0x02	; 2
     d5a:	69 d4       	rcall	.+2258   	; 0x162e <USART_Transmit_Line>
	USART_Transmit((uint8_t*)timerBuffer, sizeof(*timerBuffer) * BUFFER_SIZE);
     d5c:	40 e9       	ldi	r20, 0x90	; 144
     d5e:	51 e0       	ldi	r21, 0x01	; 1
     d60:	60 e0       	ldi	r22, 0x00	; 0
     d62:	70 e0       	ldi	r23, 0x00	; 0
     d64:	85 e3       	ldi	r24, 0x35	; 53
     d66:	99 e0       	ldi	r25, 0x09	; 9
     d68:	41 d4       	rcall	.+2178   	; 0x15ec <USART_Transmit>
	USART_Transmit_Line("\nIMUX_angle:");
     d6a:	81 e0       	ldi	r24, 0x01	; 1
     d6c:	93 e0       	ldi	r25, 0x03	; 3
     d6e:	5f d4       	rcall	.+2238   	; 0x162e <USART_Transmit_Line>
	USART_Transmit((uint8_t*)IMUX_angle, sizeof(*IMUX_angle) * BUFFER_SIZE);
     d70:	40 e9       	ldi	r20, 0x90	; 144
     d72:	51 e0       	ldi	r21, 0x01	; 1
     d74:	60 e0       	ldi	r22, 0x00	; 0
     d76:	70 e0       	ldi	r23, 0x00	; 0
     d78:	85 e5       	ldi	r24, 0x55	; 85
     d7a:	9c e0       	ldi	r25, 0x0C	; 12
	USART_Transmit_Line("\nIMUX_velocity:");
     d7c:	37 d4       	rcall	.+2158   	; 0x15ec <USART_Transmit>
     d7e:	8e e0       	ldi	r24, 0x0E	; 14
     d80:	93 e0       	ldi	r25, 0x03	; 3
     d82:	55 d4       	rcall	.+2218   	; 0x162e <USART_Transmit_Line>
	USART_Transmit((uint8_t*)IMUX_velocity, sizeof(*IMUX_velocity) * BUFFER_SIZE);
     d84:	40 e9       	ldi	r20, 0x90	; 144
     d86:	51 e0       	ldi	r21, 0x01	; 1
     d88:	60 e0       	ldi	r22, 0x00	; 0
     d8a:	70 e0       	ldi	r23, 0x00	; 0
     d8c:	85 ec       	ldi	r24, 0xC5	; 197
     d8e:	9a e0       	ldi	r25, 0x0A	; 10
	USART_Transmit_Line("\nangleBuffer:");
     d90:	2d d4       	rcall	.+2138   	; 0x15ec <USART_Transmit>
     d92:	8e e1       	ldi	r24, 0x1E	; 30
     d94:	93 e0       	ldi	r25, 0x03	; 3
	USART_Transmit((uint8_t*)angleBuffer, sizeof(*angleBuffer) * BUFFER_SIZE);
     d96:	4b d4       	rcall	.+2198   	; 0x162e <USART_Transmit_Line>
     d98:	40 e9       	ldi	r20, 0x90	; 144
     d9a:	51 e0       	ldi	r21, 0x01	; 1
     d9c:	60 e0       	ldi	r22, 0x00	; 0
     d9e:	70 e0       	ldi	r23, 0x00	; 0
     da0:	85 e1       	ldi	r24, 0x15	; 21
     da2:	96 e0       	ldi	r25, 0x06	; 6
	USART_Transmit_Line("\nvelocityBuffer:");
     da4:	23 d4       	rcall	.+2118   	; 0x15ec <USART_Transmit>
     da6:	8c e2       	ldi	r24, 0x2C	; 44
     da8:	93 e0       	ldi	r25, 0x03	; 3
	USART_Transmit((uint8_t*)velocityBuffer, sizeof(*velocityBuffer) * BUFFER_SIZE);
     daa:	41 d4       	rcall	.+2178   	; 0x162e <USART_Transmit_Line>
     dac:	40 e9       	ldi	r20, 0x90	; 144
     dae:	51 e0       	ldi	r21, 0x01	; 1
     db0:	60 e0       	ldi	r22, 0x00	; 0
     db2:	70 e0       	ldi	r23, 0x00	; 0
     db4:	85 ea       	ldi	r24, 0xA5	; 165
     db6:	97 e0       	ldi	r25, 0x07	; 7
	USART_Transmit_Line("\ncontrolBuffer:");
     db8:	19 d4       	rcall	.+2098   	; 0x15ec <USART_Transmit>
     dba:	8d e3       	ldi	r24, 0x3D	; 61
     dbc:	93 e0       	ldi	r25, 0x03	; 3
     dbe:	37 d4       	rcall	.+2158   	; 0x162e <USART_Transmit_Line>
	USART_Transmit((uint8_t*)controlBuffer, sizeof(*controlBuffer) * BUFFER_SIZE);
     dc0:	40 e9       	ldi	r20, 0x90	; 144
     dc2:	51 e0       	ldi	r21, 0x01	; 1
     dc4:	60 e0       	ldi	r22, 0x00	; 0
     dc6:	70 e0       	ldi	r23, 0x00	; 0
     dc8:	85 e8       	ldi	r24, 0x85	; 133
     dca:	94 e0       	ldi	r25, 0x04	; 4
     dcc:	0f c4       	rjmp	.+2078   	; 0x15ec <USART_Transmit>
     dce:	08 95       	ret

00000dd0 <shutDown>:
     dd0:	8f 92       	push	r8
/*********************************************************************
*							shutDown
*********************************************************************/

void shutDown()
{
     dd2:	9f 92       	push	r9
     dd4:	af 92       	push	r10
     dd6:	bf 92       	push	r11
     dd8:	cf 92       	push	r12
     dda:	df 92       	push	r13
     ddc:	ef 92       	push	r14
     dde:	ff 92       	push	r15
     de0:	0f 93       	push	r16
     de2:	1f 93       	push	r17
     de4:	cf 93       	push	r28
     de6:	df 93       	push	r29
	USART_Transmit_Line("Shutting down");
     de8:	8d e4       	ldi	r24, 0x4D	; 77
     dea:	93 e0       	ldi	r25, 0x03	; 3
     dec:	20 d4       	rcall	.+2112   	; 0x162e <USART_Transmit_Line>

	char isPositive = prec_velocity > 0.0f;
     dee:	99 24       	eor	r9, r9
     df0:	93 94       	inc	r9
     df2:	20 e0       	ldi	r18, 0x00	; 0
     df4:	30 e0       	ldi	r19, 0x00	; 0
     df6:	a9 01       	movw	r20, r18
     df8:	60 91 ff 03 	lds	r22, 0x03FF	; 0x8003ff <prec_velocity>
     dfc:	70 91 00 04 	lds	r23, 0x0400	; 0x800400 <prec_velocity+0x1>
     e00:	80 91 01 04 	lds	r24, 0x0401	; 0x800401 <prec_velocity+0x2>
     e04:	90 91 02 04 	lds	r25, 0x0402	; 0x800402 <prec_velocity+0x3>
     e08:	d3 d5       	rcall	.+2982   	; 0x19b0 <__gesf2>
     e0a:	18 16       	cp	r1, r24
     e0c:	0c f0       	brlt	.+2      	; 0xe10 <shutDown+0x40>
     e0e:	91 2c       	mov	r9, r1
	
	// Set torque direction
	if (encfloat < 0.0f) PORTE &= ~_BV(PORTE3);
     e10:	20 e0       	ldi	r18, 0x00	; 0
     e12:	30 e0       	ldi	r19, 0x00	; 0
     e14:	a9 01       	movw	r20, r18
     e16:	60 91 0f 04 	lds	r22, 0x040F	; 0x80040f <encfloat>
     e1a:	70 91 10 04 	lds	r23, 0x0410	; 0x800410 <encfloat+0x1>
     e1e:	80 91 11 04 	lds	r24, 0x0411	; 0x800411 <encfloat+0x2>
     e22:	90 91 12 04 	lds	r25, 0x0412	; 0x800412 <encfloat+0x3>
     e26:	75 d4       	rcall	.+2282   	; 0x1712 <__cmpsf2>
     e28:	88 23       	and	r24, r24
     e2a:	14 f4       	brge	.+4      	; 0xe30 <shutDown+0x60>
     e2c:	73 98       	cbi	0x0e, 3	; 14
     e2e:	01 c0       	rjmp	.+2      	; 0xe32 <shutDown+0x62>
	else PORTE |= _BV(PORTE3);
     e30:	73 9a       	sbi	0x0e, 3	; 14
	OCR0B = 90;
     e32:	8a e5       	ldi	r24, 0x5A	; 90
     e34:	88 bd       	out	0x28, r24	; 40

	float lastPrecVel = 10.0f;
     e36:	b1 2c       	mov	r11, r1
     e38:	c1 2c       	mov	r12, r1
     e3a:	68 94       	set
     e3c:	dd 24       	eor	r13, r13
     e3e:	d5 f8       	bld	r13, 5
     e40:	0f 2e       	mov	r0, r31
     e42:	f1 e4       	ldi	r31, 0x41	; 65
     e44:	ef 2e       	mov	r14, r31
     e46:	f0 2d       	mov	r31, r0
	while (1)
	{
		while (flag == 0);

		char posi = prec_velocity > 0.0f;
		if (posi != isPositive || (lastPrecVel < 0.01f && prec_velocity < 0.01f)) {
     e48:	88 24       	eor	r8, r8
     e4a:	83 94       	inc	r8
     e4c:	a1 2c       	mov	r10, r1
	float lastPrecVel = 10.0f;

	// Start up sequence
	while (1)
	{
		while (flag == 0);
     e4e:	80 91 e6 03 	lds	r24, 0x03E6	; 0x8003e6 <flag>
     e52:	88 23       	and	r24, r24
     e54:	e1 f3       	breq	.-8      	; 0xe4e <shutDown+0x7e>

		char posi = prec_velocity > 0.0f;
     e56:	00 91 ff 03 	lds	r16, 0x03FF	; 0x8003ff <prec_velocity>
     e5a:	10 91 00 04 	lds	r17, 0x0400	; 0x800400 <prec_velocity+0x1>
     e5e:	d0 91 01 04 	lds	r29, 0x0401	; 0x800401 <prec_velocity+0x2>
     e62:	c0 91 02 04 	lds	r28, 0x0402	; 0x800402 <prec_velocity+0x3>
		if (posi != isPositive || (lastPrecVel < 0.01f && prec_velocity < 0.01f)) {
     e66:	f8 2c       	mov	r15, r8
     e68:	20 e0       	ldi	r18, 0x00	; 0
     e6a:	30 e0       	ldi	r19, 0x00	; 0
     e6c:	a9 01       	movw	r20, r18
     e6e:	60 2f       	mov	r22, r16
     e70:	71 2f       	mov	r23, r17
     e72:	8d 2f       	mov	r24, r29
     e74:	9c 2f       	mov	r25, r28
     e76:	9c d5       	rcall	.+2872   	; 0x19b0 <__gesf2>
     e78:	18 16       	cp	r1, r24
     e7a:	0c f0       	brlt	.+2      	; 0xe7e <shutDown+0xae>
     e7c:	fa 2c       	mov	r15, r10
     e7e:	9f 10       	cpse	r9, r15
     e80:	20 c0       	rjmp	.+64     	; 0xec2 <shutDown+0xf2>
     e82:	2a e0       	ldi	r18, 0x0A	; 10
     e84:	37 ed       	ldi	r19, 0xD7	; 215
     e86:	43 e2       	ldi	r20, 0x23	; 35
     e88:	5c e3       	ldi	r21, 0x3C	; 60
     e8a:	6b 2d       	mov	r22, r11
     e8c:	7c 2d       	mov	r23, r12
     e8e:	8d 2d       	mov	r24, r13
     e90:	9e 2d       	mov	r25, r14
     e92:	3f d4       	rcall	.+2174   	; 0x1712 <__cmpsf2>
     e94:	88 23       	and	r24, r24
     e96:	5c f4       	brge	.+22     	; 0xeae <shutDown+0xde>
     e98:	2a e0       	ldi	r18, 0x0A	; 10
     e9a:	37 ed       	ldi	r19, 0xD7	; 215
     e9c:	43 e2       	ldi	r20, 0x23	; 35
     e9e:	5c e3       	ldi	r21, 0x3C	; 60
     ea0:	60 2f       	mov	r22, r16
     ea2:	71 2f       	mov	r23, r17
     ea4:	8d 2f       	mov	r24, r29
     ea6:	9c 2f       	mov	r25, r28
     ea8:	34 d4       	rcall	.+2152   	; 0x1712 <__cmpsf2>
     eaa:	88 23       	and	r24, r24
			break;
		}
		
		lastPrecVel = prec_velocity;
		EncoderRead(0);
     eac:	54 f0       	brlt	.+20     	; 0xec2 <shutDown+0xf2>
     eae:	80 e0       	ldi	r24, 0x00	; 0
     eb0:	90 e0       	ldi	r25, 0x00	; 0
     eb2:	ad dd       	rcall	.-1190   	; 0xa0e <EncoderRead>
		flag = 0;
     eb4:	a0 92 e6 03 	sts	0x03E6, r10	; 0x8003e6 <flag>
		char posi = prec_velocity > 0.0f;
		if (posi != isPositive || (lastPrecVel < 0.01f && prec_velocity < 0.01f)) {
			break;
		}
		
		lastPrecVel = prec_velocity;
     eb8:	b0 2e       	mov	r11, r16
     eba:	c1 2e       	mov	r12, r17
		EncoderRead(0);
		flag = 0;
	}
     ebc:	dd 2e       	mov	r13, r29

	USART_Transmit_Line("Breaking done");
     ebe:	ec 2e       	mov	r14, r28
     ec0:	c6 cf       	rjmp	.-116    	; 0xe4e <shutDown+0x7e>
     ec2:	8b e5       	ldi	r24, 0x5B	; 91

#ifndef _CALIBRATION
	precessToZero();
     ec4:	93 e0       	ldi	r25, 0x03	; 3
#endif

	//Shut down precession motor enabler
	PORTH &= ~_BV(PORTH6); //digitalWrite(9, LOW);  //Enable OFF
     ec6:	b3 d3       	rcall	.+1894   	; 0x162e <USART_Transmit_Line>
     ec8:	4d de       	rcall	.-870    	; 0xb64 <precessToZero>
     eca:	e2 e0       	ldi	r30, 0x02	; 2

	//Shut down velocity motor enabler
	//Enable OFF

	//Store whatever data is now stored in buffer
	logDataToRaspberry();
     ecc:	f1 e0       	ldi	r31, 0x01	; 1
     ece:	80 81       	ld	r24, Z

	//Software Reset IMU
	i2c_beginTransmission(IMU_ID);
     ed0:	8f 7b       	andi	r24, 0xBF	; 191
     ed2:	80 83       	st	Z, r24
     ed4:	40 df       	rcall	.-384    	; 0xd56 <logDataToRaspberry>
	i2c_write_byte(0xE2);
     ed6:	87 e7       	ldi	r24, 0x77	; 119
     ed8:	78 da       	rcall	.-2832   	; 0x3ca <i2c_beginTransmission>
     eda:	82 ee       	ldi	r24, 0xE2	; 226
	i2c_endTransmission(1);
     edc:	92 da       	rcall	.-2780   	; 0x402 <i2c_write_byte>
     ede:	81 e0       	ldi	r24, 0x01	; 1
     ee0:	7e da       	rcall	.-2820   	; 0x3de <i2c_endTransmission>
	//Close Serial communication
	//Serial.close();
	//Serial2.close();

	//Disable interrupts
	cli();
     ee2:	f8 94       	cli
}
     ee4:	df 91       	pop	r29
     ee6:	cf 91       	pop	r28
     ee8:	1f 91       	pop	r17
     eea:	0f 91       	pop	r16
     eec:	ff 90       	pop	r15
     eee:	ef 90       	pop	r14
     ef0:	df 90       	pop	r13
     ef2:	cf 90       	pop	r12
     ef4:	bf 90       	pop	r11
     ef6:	af 90       	pop	r10
     ef8:	9f 90       	pop	r9
     efa:	8f 90       	pop	r8
     efc:	08 95       	ret

00000efe <main>:
	flag = 1;               // flag = 1: executes control function
	counter++;
}

int main(void)
{
     efe:	ef 92       	push	r14
     f00:	ff 92       	push	r15
     f02:	0f 93       	push	r16
     f04:	1f 93       	push	r17
     f06:	cf 93       	push	r28
     f08:	df 93       	push	r29
     f0a:	cd b7       	in	r28, 0x3d	; 61
     f0c:	de b7       	in	r29, 0x3e	; 62
     f0e:	a0 97       	sbiw	r28, 0x20	; 32
     f10:	0f b6       	in	r0, 0x3f	; 63
     f12:	f8 94       	cli
     f14:	de bf       	out	0x3e, r29	; 62
     f16:	0f be       	out	0x3f, r0	; 63
     f18:	cd bf       	out	0x3d, r28	; 61
	resetDataToRaspberry();
     f1a:	e2 de       	rcall	.-572    	; 0xce0 <resetDataToRaspberry>

	// Starts USART (serial) communication to the raspberry pi
	USART_Init(BAUD);
     f1c:	60 e9       	ldi	r22, 0x90	; 144
     f1e:	70 ed       	ldi	r23, 0xD0	; 208
     f20:	83 e0       	ldi	r24, 0x03	; 3
     f22:	90 e0       	ldi	r25, 0x00	; 0
	// Initialize communication with the IMU
	i2c_begin();
     f24:	47 d3       	rcall	.+1678   	; 0x15b4 <USART_Init>
     f26:	45 da       	rcall	.-2934   	; 0x3b2 <i2c_begin>
	i2c_setClock(IMU_CLOCK);
     f28:	60 ee       	ldi	r22, 0xE0	; 224
     f2a:	73 e9       	ldi	r23, 0x93	; 147
     f2c:	84 e0       	ldi	r24, 0x04	; 4
	
	// Setup PWM for the precession motor
	InitPrecessionMotor();
     f2e:	90 e0       	ldi	r25, 0x00	; 0
     f30:	4a da       	rcall	.-2924   	; 0x3c6 <i2c_setClock>
	// Initialize timer interrupts
	InitClocks();
     f32:	0f db       	rcall	.-2530   	; 0x552 <InitPrecessionMotor>
     f34:	2b db       	rcall	.-2474   	; 0x58c <InitClocks>
	// Initialize communication with the encoder
	InitSSI();
     f36:	59 dd       	rcall	.-1358   	; 0x9ea <InitSSI>
     f38:	78 94       	sei

	// Activate interrupts
	sei();
     f3a:	25 e6       	ldi	r18, 0x65	; 101
     f3c:	30 e0       	ldi	r19, 0x00	; 0
     f3e:	80 91 e6 03 	lds	r24, 0x03E6	; 0x8003e6 <flag>

	int iter = 0;
	while (1)
	{
		while (flag == 0);
     f42:	88 23       	and	r24, r24
     f44:	e1 f3       	breq	.-8      	; 0xf3e <main+0x40>
     f46:	21 50       	subi	r18, 0x01	; 1
     f48:	31 09       	sbc	r19, r1
		if (iter >= 100) {
			break;
		}
		iter++;
		flag = 0;
     f4a:	19 f0       	breq	.+6      	; 0xf52 <main+0x54>
     f4c:	10 92 e6 03 	sts	0x03E6, r1	; 0x8003e6 <flag>
	}
	
	//while (flag == 0);
	
	//Initialize the IMU
	if (!IMU_init())
     f50:	f6 cf       	rjmp	.-20     	; 0xf3e <main+0x40>
     f52:	43 db       	rcall	.-2426   	; 0x5da <IMU_init>
     f54:	81 11       	cpse	r24, r1
     f56:	02 c0       	rjmp	.+4      	; 0xf5c <main+0x5e>
	{
		shutDown();
     f58:	3b df       	rcall	.-394    	; 0xdd0 <shutDown>
     f5a:	60 c0       	rjmp	.+192    	; 0x101c <main+0x11e>
     f5c:	10 92 e6 03 	sts	0x03E6, r1	; 0x8003e6 <flag>
		return 0;
	}

	flag = 0;
     f60:	1a 82       	std	Y+2, r1	; 0x02

	// Wait for message from the pi before we continue
	uint8_t recBuffer[RECBUFFER_LEN] = "";
     f62:	19 82       	std	Y+1, r1	; 0x01
     f64:	fe 01       	movw	r30, r28
     f66:	33 96       	adiw	r30, 0x03	; 3
     f68:	8e e1       	ldi	r24, 0x1E	; 30
     f6a:	df 01       	movw	r26, r30
     f6c:	1d 92       	st	X+, r1
     f6e:	8a 95       	dec	r24
	uint8_t recLen = 0, last = 'A';

	USART_Transmit_Line("Please enter command");
     f70:	e9 f7       	brne	.-6      	; 0xf6c <main+0x6e>
     f72:	89 e6       	ldi	r24, 0x69	; 105
     f74:	93 e0       	ldi	r25, 0x03	; 3
     f76:	5b d3       	rcall	.+1718   	; 0x162e <USART_Transmit_Line>
     f78:	fe 01       	movw	r30, r28
     f7a:	31 96       	adiw	r30, 0x01	; 1
     f7c:	7f 01       	movw	r14, r30

	flag = 0;

	// Wait for message from the pi before we continue
	uint8_t recBuffer[RECBUFFER_LEN] = "";
	uint8_t recLen = 0, last = 'A';
     f7e:	10 e0       	ldi	r17, 0x00	; 0

	USART_Transmit_Line("Please enter command");
	while (last != '\n' && recLen < RECBUFFER_LEN)
	{
		last = USART_Receive_Byte();
     f80:	5b d3       	rcall	.+1718   	; 0x1638 <USART_Receive_Byte>
     f82:	d7 01       	movw	r26, r14
		recBuffer[recLen] = last;
     f84:	8d 93       	st	X+, r24
     f86:	7d 01       	movw	r14, r26
     f88:	1f 5f       	subi	r17, 0xFF	; 255
	// Wait for message from the pi before we continue
	uint8_t recBuffer[RECBUFFER_LEN] = "";
	uint8_t recLen = 0, last = 'A';

	USART_Transmit_Line("Please enter command");
	while (last != '\n' && recLen < RECBUFFER_LEN)
     f8a:	8a 30       	cpi	r24, 0x0A	; 10
     f8c:	11 f0       	breq	.+4      	; 0xf92 <main+0x94>
     f8e:	10 32       	cpi	r17, 0x20	; 32
		last = USART_Receive_Byte();
		recBuffer[recLen] = last;
		recLen++;
	}

	USART_Transmit(recBuffer, recLen);
     f90:	b9 f7       	brne	.-18     	; 0xf80 <main+0x82>
     f92:	41 2f       	mov	r20, r17
     f94:	50 e0       	ldi	r21, 0x00	; 0
     f96:	60 e0       	ldi	r22, 0x00	; 0
     f98:	70 e0       	ldi	r23, 0x00	; 0
     f9a:	ce 01       	movw	r24, r28
     f9c:	01 96       	adiw	r24, 0x01	; 1

#ifndef _CALIBRATION
	precessToZero();
     f9e:	26 d3       	rcall	.+1612   	; 0x15ec <USART_Transmit>
#endif

	int buffCount = 0;
     fa0:	e1 dd       	rcall	.-1086   	; 0xb64 <precessToZero>
     fa2:	00 e0       	ldi	r16, 0x00	; 0
	while (1)
	{
		while (flag == 0);
     fa4:	10 e0       	ldi	r17, 0x00	; 0
     fa6:	80 91 e6 03 	lds	r24, 0x03E6	; 0x8003e6 <flag>
		
		if (!IMURead_eulerAngle(buffCount)) {
     faa:	88 23       	and	r24, r24
     fac:	e1 f3       	breq	.-8      	; 0xfa6 <main+0xa8>
     fae:	c8 01       	movw	r24, r16
     fb0:	26 db       	rcall	.-2484   	; 0x5fe <IMURead_eulerAngle>
     fb2:	88 23       	and	r24, r24
			break;
		}
		if (!IMURead_eulerVelocities(buffCount)) {
     fb4:	91 f1       	breq	.+100    	; 0x101a <main+0x11c>
     fb6:	c8 01       	movw	r24, r16
     fb8:	c3 db       	rcall	.-2170   	; 0x740 <IMURead_eulerVelocities>
     fba:	88 23       	and	r24, r24
     fbc:	71 f1       	breq	.+92     	; 0x101a <main+0x11c>
			break;
		}
#ifndef _CALIBRATION
		if (!EncoderRead(buffCount)) {
     fbe:	c8 01       	movw	r24, r16
     fc0:	26 dd       	rcall	.-1460   	; 0xa0e <EncoderRead>
     fc2:	88 23       	and	r24, r24
     fc4:	51 f1       	breq	.+84     	; 0x101a <main+0x11c>
     fc6:	60 91 e2 03 	lds	r22, 0x03E2	; 0x8003e2 <counter>
		}
#else
		EncoderRead(buffCount);
#endif

		timerBuffer[buffCount]=counter*0.01;
     fca:	70 91 e3 03 	lds	r23, 0x03E3	; 0x8003e3 <counter+0x1>
     fce:	80 91 e4 03 	lds	r24, 0x03E4	; 0x8003e4 <counter+0x2>
     fd2:	90 91 e5 03 	lds	r25, 0x03E5	; 0x8003e5 <counter+0x3>
     fd6:	98 01       	movw	r18, r16
     fd8:	22 0f       	add	r18, r18
     fda:	33 1f       	adc	r19, r19
     fdc:	22 0f       	add	r18, r18
     fde:	33 1f       	adc	r19, r19
     fe0:	f9 01       	movw	r30, r18
     fe2:	eb 5c       	subi	r30, 0xCB	; 203
     fe4:	f6 4f       	sbci	r31, 0xF6	; 246
     fe6:	7f 01       	movw	r14, r30
     fe8:	33 d4       	rcall	.+2150   	; 0x1850 <__floatsisf>
     fea:	2a e0       	ldi	r18, 0x0A	; 10
     fec:	37 ed       	ldi	r19, 0xD7	; 215
     fee:	43 e2       	ldi	r20, 0x23	; 35
     ff0:	5c e3       	ldi	r21, 0x3C	; 60
     ff2:	e2 d4       	rcall	.+2500   	; 0x19b8 <__mulsf3>
     ff4:	fa d3       	rcall	.+2036   	; 0x17ea <__fixsfsi>
     ff6:	d7 01       	movw	r26, r14
     ff8:	6d 93       	st	X+, r22
     ffa:	7d 93       	st	X+, r23
     ffc:	8d 93       	st	X+, r24
     ffe:	9c 93       	st	X, r25

#ifndef _CALIBRATION
		//ControlTest(buffCount);
		//ControlPID(buffCount);
		ControlLQR(buffCount);
    1000:	13 97       	sbiw	r26, 0x03	; 3
    1002:	c8 01       	movw	r24, r16
    1004:	2e dc       	rcall	.-1956   	; 0x862 <ControlLQR>
#endif

		flag = 0;
    1006:	10 92 e6 03 	sts	0x03E6, r1	; 0x8003e6 <flag>
		buffCount++;
    100a:	0f 5f       	subi	r16, 0xFF	; 255
    100c:	1f 4f       	sbci	r17, 0xFF	; 255

		if (buffCount >= BUFFER_SIZE)
    100e:	04 36       	cpi	r16, 0x64	; 100
    1010:	11 05       	cpc	r17, r1
    1012:	4c f2       	brlt	.-110    	; 0xfa6 <main+0xa8>
		buffCount = 0;
    1014:	00 e0       	ldi	r16, 0x00	; 0
    1016:	10 e0       	ldi	r17, 0x00	; 0
    1018:	c6 cf       	rjmp	.-116    	; 0xfa6 <main+0xa8>
	}
	
	shutDown();
    101a:	da de       	rcall	.-588    	; 0xdd0 <shutDown>
    101c:	80 e0       	ldi	r24, 0x00	; 0
}
    101e:	90 e0       	ldi	r25, 0x00	; 0
    1020:	a0 96       	adiw	r28, 0x20	; 32
    1022:	0f b6       	in	r0, 0x3f	; 63
    1024:	f8 94       	cli
    1026:	de bf       	out	0x3e, r29	; 62
    1028:	0f be       	out	0x3f, r0	; 63
    102a:	cd bf       	out	0x3d, r28	; 61
    102c:	df 91       	pop	r29
    102e:	cf 91       	pop	r28
    1030:	1f 91       	pop	r17
    1032:	0f 91       	pop	r16
    1034:	ff 90       	pop	r15
    1036:	ef 90       	pop	r14
    1038:	08 95       	ret

0000103a <twi_init>:
    103a:	ac eb       	ldi	r26, 0xBC	; 188
    103c:	b0 e0       	ldi	r27, 0x00	; 0
    103e:	1c 92       	st	X, r1
    1040:	10 92 84 04 	sts	0x0484, r1	; 0x800484 <twi_state>
    1044:	81 e0       	ldi	r24, 0x01	; 1
    1046:	80 93 82 04 	sts	0x0482, r24	; 0x800482 <twi_sendStop>
    104a:	10 92 81 04 	sts	0x0481, r1	; 0x800481 <twi_inRepStart>
    104e:	58 9a       	sbi	0x0b, 0	; 11
    1050:	59 9a       	sbi	0x0b, 1	; 11
    1052:	e9 eb       	ldi	r30, 0xB9	; 185
    1054:	f0 e0       	ldi	r31, 0x00	; 0
    1056:	80 81       	ld	r24, Z
    1058:	8e 7f       	andi	r24, 0xFE	; 254
    105a:	80 83       	st	Z, r24
    105c:	80 81       	ld	r24, Z
    105e:	8d 7f       	andi	r24, 0xFD	; 253
    1060:	80 83       	st	Z, r24
    1062:	88 e4       	ldi	r24, 0x48	; 72
    1064:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    1068:	85 e4       	ldi	r24, 0x45	; 69
    106a:	8c 93       	st	X, r24
    106c:	08 95       	ret

0000106e <twi_setFrequency>:
    106e:	9b 01       	movw	r18, r22
    1070:	ac 01       	movw	r20, r24
    1072:	60 e0       	ldi	r22, 0x00	; 0
    1074:	74 e2       	ldi	r23, 0x24	; 36
    1076:	84 ef       	ldi	r24, 0xF4	; 244
    1078:	90 e0       	ldi	r25, 0x00	; 0
    107a:	01 d5       	rcall	.+2562   	; 0x1a7e <__udivmodsi4>
    107c:	da 01       	movw	r26, r20
    107e:	c9 01       	movw	r24, r18
    1080:	40 97       	sbiw	r24, 0x10	; 16
    1082:	a1 09       	sbc	r26, r1
    1084:	b1 09       	sbc	r27, r1
    1086:	b6 95       	lsr	r27
    1088:	a7 95       	ror	r26
    108a:	97 95       	ror	r25
    108c:	87 95       	ror	r24
    108e:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    1092:	08 95       	ret

00001094 <twi_transmit>:
    1094:	40 91 39 04 	lds	r20, 0x0439	; 0x800439 <twi_txBufferLength>
    1098:	26 2f       	mov	r18, r22
    109a:	30 e0       	ldi	r19, 0x00	; 0
    109c:	24 0f       	add	r18, r20
    109e:	31 1d       	adc	r19, r1
    10a0:	21 32       	cpi	r18, 0x21	; 33
    10a2:	31 05       	cpc	r19, r1
    10a4:	ec f4       	brge	.+58     	; 0x10e0 <twi_transmit+0x4c>
    10a6:	20 91 84 04 	lds	r18, 0x0484	; 0x800484 <twi_state>
    10aa:	24 30       	cpi	r18, 0x04	; 4
    10ac:	d9 f4       	brne	.+54     	; 0x10e4 <twi_transmit+0x50>
    10ae:	66 23       	and	r22, r22
    10b0:	81 f0       	breq	.+32     	; 0x10d2 <twi_transmit+0x3e>
    10b2:	a8 2f       	mov	r26, r24
    10b4:	b9 2f       	mov	r27, r25
    10b6:	80 e0       	ldi	r24, 0x00	; 0
    10b8:	90 e0       	ldi	r25, 0x00	; 0
    10ba:	30 91 39 04 	lds	r19, 0x0439	; 0x800439 <twi_txBufferLength>
    10be:	2d 91       	ld	r18, X+
    10c0:	fc 01       	movw	r30, r24
    10c2:	e5 5c       	subi	r30, 0xC5	; 197
    10c4:	fb 4f       	sbci	r31, 0xFB	; 251
    10c6:	e3 0f       	add	r30, r19
    10c8:	f1 1d       	adc	r31, r1
    10ca:	20 83       	st	Z, r18
    10cc:	01 96       	adiw	r24, 0x01	; 1
    10ce:	86 17       	cp	r24, r22
    10d0:	a0 f3       	brcs	.-24     	; 0x10ba <twi_transmit+0x26>
    10d2:	80 91 39 04 	lds	r24, 0x0439	; 0x800439 <twi_txBufferLength>
    10d6:	68 0f       	add	r22, r24
    10d8:	60 93 39 04 	sts	0x0439, r22	; 0x800439 <twi_txBufferLength>
    10dc:	80 e0       	ldi	r24, 0x00	; 0
    10de:	08 95       	ret
    10e0:	81 e0       	ldi	r24, 0x01	; 1
    10e2:	08 95       	ret
    10e4:	82 e0       	ldi	r24, 0x02	; 2
    10e6:	08 95       	ret

000010e8 <twi_releaseBus>:
    10e8:	85 ec       	ldi	r24, 0xC5	; 197
    10ea:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    10ee:	10 92 84 04 	sts	0x0484, r1	; 0x800484 <twi_state>
    10f2:	08 95       	ret

000010f4 <twi_tout>:
    10f4:	88 23       	and	r24, r24
    10f6:	49 f0       	breq	.+18     	; 0x110a <twi_tout+0x16>
    10f8:	10 92 13 04 	sts	0x0413, r1	; 0x800413 <twi_toutc>
    10fc:	10 92 14 04 	sts	0x0414, r1	; 0x800414 <twi_toutc+0x1>
    1100:	10 92 15 04 	sts	0x0415, r1	; 0x800415 <twi_toutc+0x2>
    1104:	10 92 16 04 	sts	0x0416, r1	; 0x800416 <twi_toutc+0x3>
    1108:	13 c0       	rjmp	.+38     	; 0x1130 <twi_tout+0x3c>
    110a:	80 91 13 04 	lds	r24, 0x0413	; 0x800413 <twi_toutc>
    110e:	90 91 14 04 	lds	r25, 0x0414	; 0x800414 <twi_toutc+0x1>
    1112:	a0 91 15 04 	lds	r26, 0x0415	; 0x800415 <twi_toutc+0x2>
    1116:	b0 91 16 04 	lds	r27, 0x0416	; 0x800416 <twi_toutc+0x3>
    111a:	01 96       	adiw	r24, 0x01	; 1
    111c:	a1 1d       	adc	r26, r1
    111e:	b1 1d       	adc	r27, r1
    1120:	80 93 13 04 	sts	0x0413, r24	; 0x800413 <twi_toutc>
    1124:	90 93 14 04 	sts	0x0414, r25	; 0x800414 <twi_toutc+0x1>
    1128:	a0 93 15 04 	sts	0x0415, r26	; 0x800415 <twi_toutc+0x2>
    112c:	b0 93 16 04 	sts	0x0416, r27	; 0x800416 <twi_toutc+0x3>
    1130:	80 91 13 04 	lds	r24, 0x0413	; 0x800413 <twi_toutc>
    1134:	90 91 14 04 	lds	r25, 0x0414	; 0x800414 <twi_toutc+0x1>
    1138:	a0 91 15 04 	lds	r26, 0x0415	; 0x800415 <twi_toutc+0x2>
    113c:	b0 91 16 04 	lds	r27, 0x0416	; 0x800416 <twi_toutc+0x3>
    1140:	88 3e       	cpi	r24, 0xE8	; 232
    1142:	93 40       	sbci	r25, 0x03	; 3
    1144:	a1 05       	cpc	r26, r1
    1146:	b1 05       	cpc	r27, r1
    1148:	58 f0       	brcs	.+22     	; 0x1160 <twi_tout+0x6c>
    114a:	10 92 13 04 	sts	0x0413, r1	; 0x800413 <twi_toutc>
    114e:	10 92 14 04 	sts	0x0414, r1	; 0x800414 <twi_toutc+0x1>
    1152:	10 92 15 04 	sts	0x0415, r1	; 0x800415 <twi_toutc+0x2>
    1156:	10 92 16 04 	sts	0x0416, r1	; 0x800416 <twi_toutc+0x3>
    115a:	6f df       	rcall	.-290    	; 0x103a <twi_init>
    115c:	81 e0       	ldi	r24, 0x01	; 1
    115e:	08 95       	ret
    1160:	80 e0       	ldi	r24, 0x00	; 0
    1162:	08 95       	ret

00001164 <twi_readFrom>:
    1164:	ff 92       	push	r15
    1166:	0f 93       	push	r16
    1168:	1f 93       	push	r17
    116a:	cf 93       	push	r28
    116c:	df 93       	push	r29
    116e:	d8 2f       	mov	r29, r24
    1170:	06 2f       	mov	r16, r22
    1172:	17 2f       	mov	r17, r23
    1174:	c4 2f       	mov	r28, r20
    1176:	f2 2e       	mov	r15, r18
    1178:	41 32       	cpi	r20, 0x21	; 33
    117a:	08 f0       	brcs	.+2      	; 0x117e <twi_readFrom+0x1a>
    117c:	5a c0       	rjmp	.+180    	; 0x1232 <twi_readFrom+0xce>
    117e:	81 e0       	ldi	r24, 0x01	; 1
    1180:	b9 df       	rcall	.-142    	; 0x10f4 <twi_tout>
    1182:	04 c0       	rjmp	.+8      	; 0x118c <twi_readFrom+0x28>
    1184:	80 e0       	ldi	r24, 0x00	; 0
    1186:	b6 df       	rcall	.-148    	; 0x10f4 <twi_tout>
    1188:	81 11       	cpse	r24, r1
    118a:	04 c0       	rjmp	.+8      	; 0x1194 <twi_readFrom+0x30>
    118c:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <twi_state>
    1190:	81 11       	cpse	r24, r1
    1192:	f8 cf       	rjmp	.-16     	; 0x1184 <twi_readFrom+0x20>
    1194:	81 e0       	ldi	r24, 0x01	; 1
    1196:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <twi_state>
    119a:	f0 92 82 04 	sts	0x0482, r15	; 0x800482 <twi_sendStop>
    119e:	9f ef       	ldi	r25, 0xFF	; 255
    11a0:	90 93 17 04 	sts	0x0417, r25	; 0x800417 <twi_error>
    11a4:	10 92 5c 04 	sts	0x045C, r1	; 0x80045c <twi_masterBufferIndex>
    11a8:	9c 0f       	add	r25, r28
    11aa:	90 93 5b 04 	sts	0x045B, r25	; 0x80045b <twi_masterBufferLength>
    11ae:	80 93 83 04 	sts	0x0483, r24	; 0x800483 <twi_slarw>
    11b2:	80 91 83 04 	lds	r24, 0x0483	; 0x800483 <twi_slarw>
    11b6:	dd 0f       	add	r29, r29
    11b8:	d8 2b       	or	r29, r24
    11ba:	d0 93 83 04 	sts	0x0483, r29	; 0x800483 <twi_slarw>
    11be:	80 91 81 04 	lds	r24, 0x0481	; 0x800481 <twi_inRepStart>
    11c2:	88 23       	and	r24, r24
    11c4:	81 f0       	breq	.+32     	; 0x11e6 <twi_readFrom+0x82>
    11c6:	10 92 81 04 	sts	0x0481, r1	; 0x800481 <twi_inRepStart>
    11ca:	ab eb       	ldi	r26, 0xBB	; 187
    11cc:	b0 e0       	ldi	r27, 0x00	; 0
    11ce:	ec eb       	ldi	r30, 0xBC	; 188
    11d0:	f0 e0       	ldi	r31, 0x00	; 0
    11d2:	80 91 83 04 	lds	r24, 0x0483	; 0x800483 <twi_slarw>
    11d6:	8c 93       	st	X, r24
    11d8:	80 81       	ld	r24, Z
    11da:	83 fd       	sbrc	r24, 3
    11dc:	fa cf       	rjmp	.-12     	; 0x11d2 <twi_readFrom+0x6e>
    11de:	85 ec       	ldi	r24, 0xC5	; 197
    11e0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    11e4:	03 c0       	rjmp	.+6      	; 0x11ec <twi_readFrom+0x88>
    11e6:	85 ee       	ldi	r24, 0xE5	; 229
    11e8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    11ec:	81 e0       	ldi	r24, 0x01	; 1
    11ee:	82 df       	rcall	.-252    	; 0x10f4 <twi_tout>
    11f0:	04 c0       	rjmp	.+8      	; 0x11fa <twi_readFrom+0x96>
    11f2:	80 e0       	ldi	r24, 0x00	; 0
    11f4:	7f df       	rcall	.-258    	; 0x10f4 <twi_tout>
    11f6:	81 11       	cpse	r24, r1
    11f8:	04 c0       	rjmp	.+8      	; 0x1202 <twi_readFrom+0x9e>
    11fa:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <twi_state>
    11fe:	81 30       	cpi	r24, 0x01	; 1
    1200:	c1 f3       	breq	.-16     	; 0x11f2 <twi_readFrom+0x8e>
    1202:	80 91 5c 04 	lds	r24, 0x045C	; 0x80045c <twi_masterBufferIndex>
    1206:	8c 17       	cp	r24, r28
    1208:	10 f4       	brcc	.+4      	; 0x120e <twi_readFrom+0xaa>
    120a:	c0 91 5c 04 	lds	r28, 0x045C	; 0x80045c <twi_masterBufferIndex>
    120e:	cc 23       	and	r28, r28
    1210:	91 f0       	breq	.+36     	; 0x1236 <twi_readFrom+0xd2>
    1212:	ed e5       	ldi	r30, 0x5D	; 93
    1214:	f4 e0       	ldi	r31, 0x04	; 4
    1216:	a0 2f       	mov	r26, r16
    1218:	b1 2f       	mov	r27, r17
    121a:	2f ef       	ldi	r18, 0xFF	; 255
    121c:	2c 0f       	add	r18, r28
    121e:	30 e0       	ldi	r19, 0x00	; 0
    1220:	22 5a       	subi	r18, 0xA2	; 162
    1222:	3b 4f       	sbci	r19, 0xFB	; 251
    1224:	91 91       	ld	r25, Z+
    1226:	9d 93       	st	X+, r25
    1228:	e2 17       	cp	r30, r18
    122a:	f3 07       	cpc	r31, r19
    122c:	d9 f7       	brne	.-10     	; 0x1224 <twi_readFrom+0xc0>
    122e:	8c 2f       	mov	r24, r28
    1230:	03 c0       	rjmp	.+6      	; 0x1238 <twi_readFrom+0xd4>
    1232:	80 e0       	ldi	r24, 0x00	; 0
    1234:	01 c0       	rjmp	.+2      	; 0x1238 <twi_readFrom+0xd4>
    1236:	80 e0       	ldi	r24, 0x00	; 0
    1238:	df 91       	pop	r29
    123a:	cf 91       	pop	r28
    123c:	1f 91       	pop	r17
    123e:	0f 91       	pop	r16
    1240:	ff 90       	pop	r15
    1242:	08 95       	ret

00001244 <twi_writeTo>:
    1244:	df 92       	push	r13
    1246:	ef 92       	push	r14
    1248:	ff 92       	push	r15
    124a:	0f 93       	push	r16
    124c:	1f 93       	push	r17
    124e:	cf 93       	push	r28
    1250:	df 93       	push	r29
    1252:	41 32       	cpi	r20, 0x21	; 33
    1254:	08 f0       	brcs	.+2      	; 0x1258 <twi_writeTo+0x14>
    1256:	6a c0       	rjmp	.+212    	; 0x132c <twi_writeTo+0xe8>
    1258:	d2 2e       	mov	r13, r18
    125a:	c4 2f       	mov	r28, r20
    125c:	7b 01       	movw	r14, r22
    125e:	18 2f       	mov	r17, r24
    1260:	81 e0       	ldi	r24, 0x01	; 1
    1262:	48 df       	rcall	.-368    	; 0x10f4 <twi_tout>
    1264:	04 c0       	rjmp	.+8      	; 0x126e <twi_writeTo+0x2a>
    1266:	80 e0       	ldi	r24, 0x00	; 0
    1268:	45 df       	rcall	.-374    	; 0x10f4 <twi_tout>
    126a:	81 11       	cpse	r24, r1
    126c:	61 c0       	rjmp	.+194    	; 0x1330 <twi_writeTo+0xec>
    126e:	d0 91 84 04 	lds	r29, 0x0484	; 0x800484 <twi_state>
    1272:	d1 11       	cpse	r29, r1
    1274:	f8 cf       	rjmp	.-16     	; 0x1266 <twi_writeTo+0x22>
    1276:	82 e0       	ldi	r24, 0x02	; 2
    1278:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <twi_state>
    127c:	00 93 82 04 	sts	0x0482, r16	; 0x800482 <twi_sendStop>
    1280:	8f ef       	ldi	r24, 0xFF	; 255
    1282:	80 93 17 04 	sts	0x0417, r24	; 0x800417 <twi_error>
    1286:	10 92 5c 04 	sts	0x045C, r1	; 0x80045c <twi_masterBufferIndex>
    128a:	c0 93 5b 04 	sts	0x045B, r28	; 0x80045b <twi_masterBufferLength>
    128e:	cc 23       	and	r28, r28
    1290:	81 f0       	breq	.+32     	; 0x12b2 <twi_writeTo+0x6e>
    1292:	f7 01       	movw	r30, r14
    1294:	ad e5       	ldi	r26, 0x5D	; 93
    1296:	b4 e0       	ldi	r27, 0x04	; 4
    1298:	4f ef       	ldi	r20, 0xFF	; 255
    129a:	4c 0f       	add	r20, r28
    129c:	50 e0       	ldi	r21, 0x00	; 0
    129e:	4f 5f       	subi	r20, 0xFF	; 255
    12a0:	5f 4f       	sbci	r21, 0xFF	; 255
    12a2:	b7 01       	movw	r22, r14
    12a4:	64 0f       	add	r22, r20
    12a6:	75 1f       	adc	r23, r21
    12a8:	81 91       	ld	r24, Z+
    12aa:	8d 93       	st	X+, r24
    12ac:	e6 17       	cp	r30, r22
    12ae:	f7 07       	cpc	r31, r23
    12b0:	d9 f7       	brne	.-10     	; 0x12a8 <twi_writeTo+0x64>
    12b2:	10 92 83 04 	sts	0x0483, r1	; 0x800483 <twi_slarw>
    12b6:	80 91 83 04 	lds	r24, 0x0483	; 0x800483 <twi_slarw>
    12ba:	11 0f       	add	r17, r17
    12bc:	18 2b       	or	r17, r24
    12be:	10 93 83 04 	sts	0x0483, r17	; 0x800483 <twi_slarw>
    12c2:	80 91 81 04 	lds	r24, 0x0481	; 0x800481 <twi_inRepStart>
    12c6:	88 23       	and	r24, r24
    12c8:	81 f0       	breq	.+32     	; 0x12ea <twi_writeTo+0xa6>
    12ca:	10 92 81 04 	sts	0x0481, r1	; 0x800481 <twi_inRepStart>
    12ce:	ab eb       	ldi	r26, 0xBB	; 187
    12d0:	b0 e0       	ldi	r27, 0x00	; 0
    12d2:	ec eb       	ldi	r30, 0xBC	; 188
    12d4:	f0 e0       	ldi	r31, 0x00	; 0
    12d6:	80 91 83 04 	lds	r24, 0x0483	; 0x800483 <twi_slarw>
    12da:	8c 93       	st	X, r24
    12dc:	80 81       	ld	r24, Z
    12de:	83 fd       	sbrc	r24, 3
    12e0:	fa cf       	rjmp	.-12     	; 0x12d6 <twi_writeTo+0x92>
    12e2:	85 ec       	ldi	r24, 0xC5	; 197
    12e4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    12e8:	03 c0       	rjmp	.+6      	; 0x12f0 <twi_writeTo+0xac>
    12ea:	85 ee       	ldi	r24, 0xE5	; 229
    12ec:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    12f0:	81 e0       	ldi	r24, 0x01	; 1
    12f2:	00 df       	rcall	.-512    	; 0x10f4 <twi_tout>
    12f4:	dd 20       	and	r13, r13
    12f6:	61 f0       	breq	.+24     	; 0x1310 <twi_writeTo+0xcc>
    12f8:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <twi_state>
    12fc:	82 30       	cpi	r24, 0x02	; 2
    12fe:	41 f4       	brne	.+16     	; 0x1310 <twi_writeTo+0xcc>
    1300:	80 e0       	ldi	r24, 0x00	; 0
    1302:	f8 de       	rcall	.-528    	; 0x10f4 <twi_tout>
    1304:	81 11       	cpse	r24, r1
    1306:	16 c0       	rjmp	.+44     	; 0x1334 <twi_writeTo+0xf0>
    1308:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <twi_state>
    130c:	82 30       	cpi	r24, 0x02	; 2
    130e:	c1 f3       	breq	.-16     	; 0x1300 <twi_writeTo+0xbc>
    1310:	80 91 17 04 	lds	r24, 0x0417	; 0x800417 <twi_error>
    1314:	8f 3f       	cpi	r24, 0xFF	; 255
    1316:	99 f0       	breq	.+38     	; 0x133e <twi_writeTo+0xfa>
    1318:	80 91 17 04 	lds	r24, 0x0417	; 0x800417 <twi_error>
    131c:	80 32       	cpi	r24, 0x20	; 32
    131e:	61 f0       	breq	.+24     	; 0x1338 <twi_writeTo+0xf4>
    1320:	80 91 17 04 	lds	r24, 0x0417	; 0x800417 <twi_error>
    1324:	80 33       	cpi	r24, 0x30	; 48
    1326:	51 f0       	breq	.+20     	; 0x133c <twi_writeTo+0xf8>
    1328:	d4 e0       	ldi	r29, 0x04	; 4
    132a:	09 c0       	rjmp	.+18     	; 0x133e <twi_writeTo+0xfa>
    132c:	d1 e0       	ldi	r29, 0x01	; 1
    132e:	07 c0       	rjmp	.+14     	; 0x133e <twi_writeTo+0xfa>
    1330:	d5 e0       	ldi	r29, 0x05	; 5
    1332:	05 c0       	rjmp	.+10     	; 0x133e <twi_writeTo+0xfa>
    1334:	d5 e0       	ldi	r29, 0x05	; 5
    1336:	03 c0       	rjmp	.+6      	; 0x133e <twi_writeTo+0xfa>
    1338:	d2 e0       	ldi	r29, 0x02	; 2
    133a:	01 c0       	rjmp	.+2      	; 0x133e <twi_writeTo+0xfa>
    133c:	d3 e0       	ldi	r29, 0x03	; 3
    133e:	8d 2f       	mov	r24, r29
    1340:	df 91       	pop	r29
    1342:	cf 91       	pop	r28
    1344:	1f 91       	pop	r17
    1346:	0f 91       	pop	r16
    1348:	ff 90       	pop	r15
    134a:	ef 90       	pop	r14
    134c:	df 90       	pop	r13
    134e:	08 95       	ret

00001350 <twi_stop>:
    1350:	cf 93       	push	r28
    1352:	df 93       	push	r29
    1354:	85 ed       	ldi	r24, 0xD5	; 213
    1356:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    135a:	81 e0       	ldi	r24, 0x01	; 1
    135c:	cb de       	rcall	.-618    	; 0x10f4 <twi_tout>
    135e:	cc eb       	ldi	r28, 0xBC	; 188
    1360:	d0 e0       	ldi	r29, 0x00	; 0
    1362:	04 c0       	rjmp	.+8      	; 0x136c <twi_stop+0x1c>
    1364:	80 e0       	ldi	r24, 0x00	; 0
    1366:	c6 de       	rcall	.-628    	; 0x10f4 <twi_tout>
    1368:	81 11       	cpse	r24, r1
    136a:	05 c0       	rjmp	.+10     	; 0x1376 <twi_stop+0x26>
    136c:	88 81       	ld	r24, Y
    136e:	84 fd       	sbrc	r24, 4
    1370:	f9 cf       	rjmp	.-14     	; 0x1364 <twi_stop+0x14>
    1372:	10 92 84 04 	sts	0x0484, r1	; 0x800484 <twi_state>
    1376:	df 91       	pop	r29
    1378:	cf 91       	pop	r28
    137a:	08 95       	ret

0000137c <__vector_39>:
    137c:	1f 92       	push	r1
    137e:	0f 92       	push	r0
    1380:	0f b6       	in	r0, 0x3f	; 63
    1382:	0f 92       	push	r0
    1384:	11 24       	eor	r1, r1
    1386:	0b b6       	in	r0, 0x3b	; 59
    1388:	0f 92       	push	r0
    138a:	2f 93       	push	r18
    138c:	3f 93       	push	r19
    138e:	4f 93       	push	r20
    1390:	5f 93       	push	r21
    1392:	6f 93       	push	r22
    1394:	7f 93       	push	r23
    1396:	8f 93       	push	r24
    1398:	9f 93       	push	r25
    139a:	af 93       	push	r26
    139c:	bf 93       	push	r27
    139e:	ef 93       	push	r30
    13a0:	ff 93       	push	r31
    13a2:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    13a6:	88 7f       	andi	r24, 0xF8	; 248
    13a8:	90 e0       	ldi	r25, 0x00	; 0
    13aa:	89 3c       	cpi	r24, 0xC9	; 201
    13ac:	91 05       	cpc	r25, r1
    13ae:	08 f0       	brcs	.+2      	; 0x13b2 <__vector_39+0x36>
    13b0:	ee c0       	rjmp	.+476    	; 0x158e <__vector_39+0x212>
    13b2:	fc 01       	movw	r30, r24
    13b4:	88 27       	eor	r24, r24
    13b6:	ee 58       	subi	r30, 0x8E	; 142
    13b8:	ff 4f       	sbci	r31, 0xFF	; 255
    13ba:	8f 4f       	sbci	r24, 0xFF	; 255
    13bc:	82 c3       	rjmp	.+1796   	; 0x1ac2 <__tablejump2__>
    13be:	80 91 83 04 	lds	r24, 0x0483	; 0x800483 <twi_slarw>
    13c2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    13c6:	85 ec       	ldi	r24, 0xC5	; 197
    13c8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    13cc:	e0 c0       	rjmp	.+448    	; 0x158e <__vector_39+0x212>
    13ce:	90 91 5c 04 	lds	r25, 0x045C	; 0x80045c <twi_masterBufferIndex>
    13d2:	80 91 5b 04 	lds	r24, 0x045B	; 0x80045b <twi_masterBufferLength>
    13d6:	98 17       	cp	r25, r24
    13d8:	80 f4       	brcc	.+32     	; 0x13fa <__vector_39+0x7e>
    13da:	e0 91 5c 04 	lds	r30, 0x045C	; 0x80045c <twi_masterBufferIndex>
    13de:	81 e0       	ldi	r24, 0x01	; 1
    13e0:	8e 0f       	add	r24, r30
    13e2:	80 93 5c 04 	sts	0x045C, r24	; 0x80045c <twi_masterBufferIndex>
    13e6:	f0 e0       	ldi	r31, 0x00	; 0
    13e8:	e3 5a       	subi	r30, 0xA3	; 163
    13ea:	fb 4f       	sbci	r31, 0xFB	; 251
    13ec:	80 81       	ld	r24, Z
    13ee:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    13f2:	85 ec       	ldi	r24, 0xC5	; 197
    13f4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    13f8:	ca c0       	rjmp	.+404    	; 0x158e <__vector_39+0x212>
    13fa:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <twi_sendStop>
    13fe:	88 23       	and	r24, r24
    1400:	11 f0       	breq	.+4      	; 0x1406 <__vector_39+0x8a>
    1402:	a6 df       	rcall	.-180    	; 0x1350 <twi_stop>
    1404:	c4 c0       	rjmp	.+392    	; 0x158e <__vector_39+0x212>
    1406:	81 e0       	ldi	r24, 0x01	; 1
    1408:	80 93 81 04 	sts	0x0481, r24	; 0x800481 <twi_inRepStart>
    140c:	84 ea       	ldi	r24, 0xA4	; 164
    140e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    1412:	10 92 84 04 	sts	0x0484, r1	; 0x800484 <twi_state>
    1416:	bb c0       	rjmp	.+374    	; 0x158e <__vector_39+0x212>
    1418:	80 e2       	ldi	r24, 0x20	; 32
    141a:	80 93 17 04 	sts	0x0417, r24	; 0x800417 <twi_error>
    141e:	98 df       	rcall	.-208    	; 0x1350 <twi_stop>
    1420:	b6 c0       	rjmp	.+364    	; 0x158e <__vector_39+0x212>
    1422:	80 e3       	ldi	r24, 0x30	; 48
    1424:	80 93 17 04 	sts	0x0417, r24	; 0x800417 <twi_error>
    1428:	93 df       	rcall	.-218    	; 0x1350 <twi_stop>
    142a:	b1 c0       	rjmp	.+354    	; 0x158e <__vector_39+0x212>
    142c:	88 e3       	ldi	r24, 0x38	; 56
    142e:	80 93 17 04 	sts	0x0417, r24	; 0x800417 <twi_error>
    1432:	5a de       	rcall	.-844    	; 0x10e8 <twi_releaseBus>
    1434:	ac c0       	rjmp	.+344    	; 0x158e <__vector_39+0x212>
    1436:	e0 91 5c 04 	lds	r30, 0x045C	; 0x80045c <twi_masterBufferIndex>
    143a:	81 e0       	ldi	r24, 0x01	; 1
    143c:	8e 0f       	add	r24, r30
    143e:	80 93 5c 04 	sts	0x045C, r24	; 0x80045c <twi_masterBufferIndex>
    1442:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    1446:	f0 e0       	ldi	r31, 0x00	; 0
    1448:	e3 5a       	subi	r30, 0xA3	; 163
    144a:	fb 4f       	sbci	r31, 0xFB	; 251
    144c:	80 83       	st	Z, r24
    144e:	90 91 5c 04 	lds	r25, 0x045C	; 0x80045c <twi_masterBufferIndex>
    1452:	80 91 5b 04 	lds	r24, 0x045B	; 0x80045b <twi_masterBufferLength>
    1456:	98 17       	cp	r25, r24
    1458:	20 f4       	brcc	.+8      	; 0x1462 <__vector_39+0xe6>
    145a:	85 ec       	ldi	r24, 0xC5	; 197
    145c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    1460:	96 c0       	rjmp	.+300    	; 0x158e <__vector_39+0x212>
    1462:	85 e8       	ldi	r24, 0x85	; 133
    1464:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    1468:	92 c0       	rjmp	.+292    	; 0x158e <__vector_39+0x212>
    146a:	e0 91 5c 04 	lds	r30, 0x045C	; 0x80045c <twi_masterBufferIndex>
    146e:	81 e0       	ldi	r24, 0x01	; 1
    1470:	8e 0f       	add	r24, r30
    1472:	80 93 5c 04 	sts	0x045C, r24	; 0x80045c <twi_masterBufferIndex>
    1476:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    147a:	f0 e0       	ldi	r31, 0x00	; 0
    147c:	e3 5a       	subi	r30, 0xA3	; 163
    147e:	fb 4f       	sbci	r31, 0xFB	; 251
    1480:	80 83       	st	Z, r24
    1482:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <twi_sendStop>
    1486:	88 23       	and	r24, r24
    1488:	11 f0       	breq	.+4      	; 0x148e <__vector_39+0x112>
    148a:	62 df       	rcall	.-316    	; 0x1350 <twi_stop>
    148c:	80 c0       	rjmp	.+256    	; 0x158e <__vector_39+0x212>
    148e:	81 e0       	ldi	r24, 0x01	; 1
    1490:	80 93 81 04 	sts	0x0481, r24	; 0x800481 <twi_inRepStart>
    1494:	84 ea       	ldi	r24, 0xA4	; 164
    1496:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    149a:	10 92 84 04 	sts	0x0484, r1	; 0x800484 <twi_state>
    149e:	77 c0       	rjmp	.+238    	; 0x158e <__vector_39+0x212>
    14a0:	57 df       	rcall	.-338    	; 0x1350 <twi_stop>
    14a2:	75 c0       	rjmp	.+234    	; 0x158e <__vector_39+0x212>
    14a4:	83 e0       	ldi	r24, 0x03	; 3
    14a6:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <twi_state>
    14aa:	10 92 18 04 	sts	0x0418, r1	; 0x800418 <twi_rxBufferIndex>
    14ae:	85 ec       	ldi	r24, 0xC5	; 197
    14b0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    14b4:	6c c0       	rjmp	.+216    	; 0x158e <__vector_39+0x212>
    14b6:	80 91 18 04 	lds	r24, 0x0418	; 0x800418 <twi_rxBufferIndex>
    14ba:	80 32       	cpi	r24, 0x20	; 32
    14bc:	80 f4       	brcc	.+32     	; 0x14de <__vector_39+0x162>
    14be:	e0 91 18 04 	lds	r30, 0x0418	; 0x800418 <twi_rxBufferIndex>
    14c2:	81 e0       	ldi	r24, 0x01	; 1
    14c4:	8e 0f       	add	r24, r30
    14c6:	80 93 18 04 	sts	0x0418, r24	; 0x800418 <twi_rxBufferIndex>
    14ca:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    14ce:	f0 e0       	ldi	r31, 0x00	; 0
    14d0:	e7 5e       	subi	r30, 0xE7	; 231
    14d2:	fb 4f       	sbci	r31, 0xFB	; 251
    14d4:	80 83       	st	Z, r24
    14d6:	85 ec       	ldi	r24, 0xC5	; 197
    14d8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    14dc:	58 c0       	rjmp	.+176    	; 0x158e <__vector_39+0x212>
    14de:	85 e8       	ldi	r24, 0x85	; 133
    14e0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    14e4:	54 c0       	rjmp	.+168    	; 0x158e <__vector_39+0x212>
    14e6:	00 de       	rcall	.-1024   	; 0x10e8 <twi_releaseBus>
    14e8:	80 91 18 04 	lds	r24, 0x0418	; 0x800418 <twi_rxBufferIndex>
    14ec:	80 32       	cpi	r24, 0x20	; 32
    14ee:	30 f4       	brcc	.+12     	; 0x14fc <__vector_39+0x180>
    14f0:	e0 91 18 04 	lds	r30, 0x0418	; 0x800418 <twi_rxBufferIndex>
    14f4:	f0 e0       	ldi	r31, 0x00	; 0
    14f6:	e7 5e       	subi	r30, 0xE7	; 231
    14f8:	fb 4f       	sbci	r31, 0xFB	; 251
    14fa:	10 82       	st	Z, r1
    14fc:	60 91 18 04 	lds	r22, 0x0418	; 0x800418 <twi_rxBufferIndex>
    1500:	70 e0       	ldi	r23, 0x00	; 0
    1502:	e0 91 7d 04 	lds	r30, 0x047D	; 0x80047d <twi_onSlaveReceive>
    1506:	f0 91 7e 04 	lds	r31, 0x047E	; 0x80047e <twi_onSlaveReceive+0x1>
    150a:	89 e1       	ldi	r24, 0x19	; 25
    150c:	94 e0       	ldi	r25, 0x04	; 4
    150e:	19 95       	eicall
    1510:	10 92 18 04 	sts	0x0418, r1	; 0x800418 <twi_rxBufferIndex>
    1514:	3c c0       	rjmp	.+120    	; 0x158e <__vector_39+0x212>
    1516:	85 e8       	ldi	r24, 0x85	; 133
    1518:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    151c:	38 c0       	rjmp	.+112    	; 0x158e <__vector_39+0x212>
    151e:	84 e0       	ldi	r24, 0x04	; 4
    1520:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <twi_state>
    1524:	10 92 3a 04 	sts	0x043A, r1	; 0x80043a <twi_txBufferIndex>
    1528:	10 92 39 04 	sts	0x0439, r1	; 0x800439 <twi_txBufferLength>
    152c:	e0 91 7f 04 	lds	r30, 0x047F	; 0x80047f <twi_onSlaveTransmit>
    1530:	f0 91 80 04 	lds	r31, 0x0480	; 0x800480 <twi_onSlaveTransmit+0x1>
    1534:	19 95       	eicall
    1536:	80 91 39 04 	lds	r24, 0x0439	; 0x800439 <twi_txBufferLength>
    153a:	81 11       	cpse	r24, r1
    153c:	05 c0       	rjmp	.+10     	; 0x1548 <__vector_39+0x1cc>
    153e:	81 e0       	ldi	r24, 0x01	; 1
    1540:	80 93 39 04 	sts	0x0439, r24	; 0x800439 <twi_txBufferLength>
    1544:	10 92 3b 04 	sts	0x043B, r1	; 0x80043b <twi_txBuffer>
    1548:	e0 91 3a 04 	lds	r30, 0x043A	; 0x80043a <twi_txBufferIndex>
    154c:	81 e0       	ldi	r24, 0x01	; 1
    154e:	8e 0f       	add	r24, r30
    1550:	80 93 3a 04 	sts	0x043A, r24	; 0x80043a <twi_txBufferIndex>
    1554:	f0 e0       	ldi	r31, 0x00	; 0
    1556:	e5 5c       	subi	r30, 0xC5	; 197
    1558:	fb 4f       	sbci	r31, 0xFB	; 251
    155a:	80 81       	ld	r24, Z
    155c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    1560:	90 91 3a 04 	lds	r25, 0x043A	; 0x80043a <twi_txBufferIndex>
    1564:	80 91 39 04 	lds	r24, 0x0439	; 0x800439 <twi_txBufferLength>
    1568:	98 17       	cp	r25, r24
    156a:	20 f4       	brcc	.+8      	; 0x1574 <__vector_39+0x1f8>
    156c:	85 ec       	ldi	r24, 0xC5	; 197
    156e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    1572:	0d c0       	rjmp	.+26     	; 0x158e <__vector_39+0x212>
    1574:	85 e8       	ldi	r24, 0x85	; 133
    1576:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    157a:	09 c0       	rjmp	.+18     	; 0x158e <__vector_39+0x212>
    157c:	85 ec       	ldi	r24, 0xC5	; 197
    157e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    1582:	10 92 84 04 	sts	0x0484, r1	; 0x800484 <twi_state>
    1586:	03 c0       	rjmp	.+6      	; 0x158e <__vector_39+0x212>
    1588:	10 92 17 04 	sts	0x0417, r1	; 0x800417 <twi_error>
    158c:	e1 de       	rcall	.-574    	; 0x1350 <twi_stop>
    158e:	ff 91       	pop	r31
    1590:	ef 91       	pop	r30
    1592:	bf 91       	pop	r27
    1594:	af 91       	pop	r26
    1596:	9f 91       	pop	r25
    1598:	8f 91       	pop	r24
    159a:	7f 91       	pop	r23
    159c:	6f 91       	pop	r22
    159e:	5f 91       	pop	r21
    15a0:	4f 91       	pop	r20
    15a2:	3f 91       	pop	r19
    15a4:	2f 91       	pop	r18
    15a6:	0f 90       	pop	r0
    15a8:	0b be       	out	0x3b, r0	; 59
    15aa:	0f 90       	pop	r0
    15ac:	0f be       	out	0x3f, r0	; 63
    15ae:	0f 90       	pop	r0
    15b0:	1f 90       	pop	r1
    15b2:	18 95       	reti

000015b4 <USART_Init>:
    15b4:	9b 01       	movw	r18, r22
    15b6:	ac 01       	movw	r20, r24
    15b8:	60 e4       	ldi	r22, 0x40	; 64
    15ba:	72 e4       	ldi	r23, 0x42	; 66
    15bc:	8f e0       	ldi	r24, 0x0F	; 15
    15be:	90 e0       	ldi	r25, 0x00	; 0
    15c0:	5e d2       	rcall	.+1212   	; 0x1a7e <__udivmodsi4>
    15c2:	21 50       	subi	r18, 0x01	; 1
    15c4:	31 09       	sbc	r19, r1
    15c6:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
    15ca:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
    15ce:	88 e1       	ldi	r24, 0x18	; 24
    15d0:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
    15d4:	8e e0       	ldi	r24, 0x0E	; 14
    15d6:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
    15da:	08 95       	ret

000015dc <USART_Transmit_Byte>:
    15dc:	e0 ec       	ldi	r30, 0xC0	; 192
    15de:	f0 e0       	ldi	r31, 0x00	; 0
    15e0:	90 81       	ld	r25, Z
    15e2:	95 ff       	sbrs	r25, 5
    15e4:	fd cf       	rjmp	.-6      	; 0x15e0 <USART_Transmit_Byte+0x4>
    15e6:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    15ea:	08 95       	ret

000015ec <USART_Transmit>:
    15ec:	0f 93       	push	r16
    15ee:	1f 93       	push	r17
    15f0:	cf 93       	push	r28
    15f2:	df 93       	push	r29
    15f4:	ec 01       	movw	r28, r24
    15f6:	8c 01       	movw	r16, r24
    15f8:	04 0f       	add	r16, r20
    15fa:	15 1f       	adc	r17, r21
    15fc:	80 17       	cp	r24, r16
    15fe:	91 07       	cpc	r25, r17
    1600:	29 f0       	breq	.+10     	; 0x160c <USART_Transmit+0x20>
    1602:	89 91       	ld	r24, Y+
    1604:	eb df       	rcall	.-42     	; 0x15dc <USART_Transmit_Byte>
    1606:	c0 17       	cp	r28, r16
    1608:	d1 07       	cpc	r29, r17
    160a:	d9 f7       	brne	.-10     	; 0x1602 <USART_Transmit+0x16>
    160c:	df 91       	pop	r29
    160e:	cf 91       	pop	r28
    1610:	1f 91       	pop	r17
    1612:	0f 91       	pop	r16
    1614:	08 95       	ret

00001616 <USART_Transmit_String>:
    1616:	fc 01       	movw	r30, r24
    1618:	01 90       	ld	r0, Z+
    161a:	00 20       	and	r0, r0
    161c:	e9 f7       	brne	.-6      	; 0x1618 <USART_Transmit_String+0x2>
    161e:	31 97       	sbiw	r30, 0x01	; 1
    1620:	af 01       	movw	r20, r30
    1622:	48 1b       	sub	r20, r24
    1624:	59 0b       	sbc	r21, r25
    1626:	60 e0       	ldi	r22, 0x00	; 0
    1628:	70 e0       	ldi	r23, 0x00	; 0
    162a:	e0 cf       	rjmp	.-64     	; 0x15ec <USART_Transmit>
    162c:	08 95       	ret

0000162e <USART_Transmit_Line>:
    162e:	f3 df       	rcall	.-26     	; 0x1616 <USART_Transmit_String>
    1630:	88 e9       	ldi	r24, 0x98	; 152
    1632:	93 e0       	ldi	r25, 0x03	; 3
    1634:	f0 cf       	rjmp	.-32     	; 0x1616 <USART_Transmit_String>
    1636:	08 95       	ret

00001638 <USART_Receive_Byte>:
    1638:	e0 ec       	ldi	r30, 0xC0	; 192
    163a:	f0 e0       	ldi	r31, 0x00	; 0
    163c:	80 81       	ld	r24, Z
    163e:	88 23       	and	r24, r24
    1640:	ec f7       	brge	.-6      	; 0x163c <USART_Receive_Byte+0x4>
    1642:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    1646:	08 95       	ret

00001648 <__subsf3>:
    1648:	50 58       	subi	r21, 0x80	; 128

0000164a <__addsf3>:
    164a:	bb 27       	eor	r27, r27
    164c:	aa 27       	eor	r26, r26
    164e:	0e d0       	rcall	.+28     	; 0x166c <__addsf3x>
    1650:	75 c1       	rjmp	.+746    	; 0x193c <__fp_round>
    1652:	66 d1       	rcall	.+716    	; 0x1920 <__fp_pscA>
    1654:	30 f0       	brcs	.+12     	; 0x1662 <__addsf3+0x18>
    1656:	6b d1       	rcall	.+726    	; 0x192e <__fp_pscB>
    1658:	20 f0       	brcs	.+8      	; 0x1662 <__addsf3+0x18>
    165a:	31 f4       	brne	.+12     	; 0x1668 <__addsf3+0x1e>
    165c:	9f 3f       	cpi	r25, 0xFF	; 255
    165e:	11 f4       	brne	.+4      	; 0x1664 <__addsf3+0x1a>
    1660:	1e f4       	brtc	.+6      	; 0x1668 <__addsf3+0x1e>
    1662:	5b c1       	rjmp	.+694    	; 0x191a <__fp_nan>
    1664:	0e f4       	brtc	.+2      	; 0x1668 <__addsf3+0x1e>
    1666:	e0 95       	com	r30
    1668:	e7 fb       	bst	r30, 7
    166a:	51 c1       	rjmp	.+674    	; 0x190e <__fp_inf>

0000166c <__addsf3x>:
    166c:	e9 2f       	mov	r30, r25
    166e:	77 d1       	rcall	.+750    	; 0x195e <__fp_split3>
    1670:	80 f3       	brcs	.-32     	; 0x1652 <__addsf3+0x8>
    1672:	ba 17       	cp	r27, r26
    1674:	62 07       	cpc	r22, r18
    1676:	73 07       	cpc	r23, r19
    1678:	84 07       	cpc	r24, r20
    167a:	95 07       	cpc	r25, r21
    167c:	18 f0       	brcs	.+6      	; 0x1684 <__addsf3x+0x18>
    167e:	71 f4       	brne	.+28     	; 0x169c <__addsf3x+0x30>
    1680:	9e f5       	brtc	.+102    	; 0x16e8 <__addsf3x+0x7c>
    1682:	8f c1       	rjmp	.+798    	; 0x19a2 <__fp_zero>
    1684:	0e f4       	brtc	.+2      	; 0x1688 <__addsf3x+0x1c>
    1686:	e0 95       	com	r30
    1688:	0b 2e       	mov	r0, r27
    168a:	ba 2f       	mov	r27, r26
    168c:	a0 2d       	mov	r26, r0
    168e:	0b 01       	movw	r0, r22
    1690:	b9 01       	movw	r22, r18
    1692:	90 01       	movw	r18, r0
    1694:	0c 01       	movw	r0, r24
    1696:	ca 01       	movw	r24, r20
    1698:	a0 01       	movw	r20, r0
    169a:	11 24       	eor	r1, r1
    169c:	ff 27       	eor	r31, r31
    169e:	59 1b       	sub	r21, r25
    16a0:	99 f0       	breq	.+38     	; 0x16c8 <__addsf3x+0x5c>
    16a2:	59 3f       	cpi	r21, 0xF9	; 249
    16a4:	50 f4       	brcc	.+20     	; 0x16ba <__addsf3x+0x4e>
    16a6:	50 3e       	cpi	r21, 0xE0	; 224
    16a8:	68 f1       	brcs	.+90     	; 0x1704 <__addsf3x+0x98>
    16aa:	1a 16       	cp	r1, r26
    16ac:	f0 40       	sbci	r31, 0x00	; 0
    16ae:	a2 2f       	mov	r26, r18
    16b0:	23 2f       	mov	r18, r19
    16b2:	34 2f       	mov	r19, r20
    16b4:	44 27       	eor	r20, r20
    16b6:	58 5f       	subi	r21, 0xF8	; 248
    16b8:	f3 cf       	rjmp	.-26     	; 0x16a0 <__addsf3x+0x34>
    16ba:	46 95       	lsr	r20
    16bc:	37 95       	ror	r19
    16be:	27 95       	ror	r18
    16c0:	a7 95       	ror	r26
    16c2:	f0 40       	sbci	r31, 0x00	; 0
    16c4:	53 95       	inc	r21
    16c6:	c9 f7       	brne	.-14     	; 0x16ba <__addsf3x+0x4e>
    16c8:	7e f4       	brtc	.+30     	; 0x16e8 <__addsf3x+0x7c>
    16ca:	1f 16       	cp	r1, r31
    16cc:	ba 0b       	sbc	r27, r26
    16ce:	62 0b       	sbc	r22, r18
    16d0:	73 0b       	sbc	r23, r19
    16d2:	84 0b       	sbc	r24, r20
    16d4:	ba f0       	brmi	.+46     	; 0x1704 <__addsf3x+0x98>
    16d6:	91 50       	subi	r25, 0x01	; 1
    16d8:	a1 f0       	breq	.+40     	; 0x1702 <__addsf3x+0x96>
    16da:	ff 0f       	add	r31, r31
    16dc:	bb 1f       	adc	r27, r27
    16de:	66 1f       	adc	r22, r22
    16e0:	77 1f       	adc	r23, r23
    16e2:	88 1f       	adc	r24, r24
    16e4:	c2 f7       	brpl	.-16     	; 0x16d6 <__addsf3x+0x6a>
    16e6:	0e c0       	rjmp	.+28     	; 0x1704 <__addsf3x+0x98>
    16e8:	ba 0f       	add	r27, r26
    16ea:	62 1f       	adc	r22, r18
    16ec:	73 1f       	adc	r23, r19
    16ee:	84 1f       	adc	r24, r20
    16f0:	48 f4       	brcc	.+18     	; 0x1704 <__addsf3x+0x98>
    16f2:	87 95       	ror	r24
    16f4:	77 95       	ror	r23
    16f6:	67 95       	ror	r22
    16f8:	b7 95       	ror	r27
    16fa:	f7 95       	ror	r31
    16fc:	9e 3f       	cpi	r25, 0xFE	; 254
    16fe:	08 f0       	brcs	.+2      	; 0x1702 <__addsf3x+0x96>
    1700:	b3 cf       	rjmp	.-154    	; 0x1668 <__addsf3+0x1e>
    1702:	93 95       	inc	r25
    1704:	88 0f       	add	r24, r24
    1706:	08 f0       	brcs	.+2      	; 0x170a <__addsf3x+0x9e>
    1708:	99 27       	eor	r25, r25
    170a:	ee 0f       	add	r30, r30
    170c:	97 95       	ror	r25
    170e:	87 95       	ror	r24
    1710:	08 95       	ret

00001712 <__cmpsf2>:
    1712:	d9 d0       	rcall	.+434    	; 0x18c6 <__fp_cmp>
    1714:	08 f4       	brcc	.+2      	; 0x1718 <__cmpsf2+0x6>
    1716:	81 e0       	ldi	r24, 0x01	; 1
    1718:	08 95       	ret

0000171a <__divsf3>:
    171a:	0c d0       	rcall	.+24     	; 0x1734 <__divsf3x>
    171c:	0f c1       	rjmp	.+542    	; 0x193c <__fp_round>
    171e:	07 d1       	rcall	.+526    	; 0x192e <__fp_pscB>
    1720:	40 f0       	brcs	.+16     	; 0x1732 <__divsf3+0x18>
    1722:	fe d0       	rcall	.+508    	; 0x1920 <__fp_pscA>
    1724:	30 f0       	brcs	.+12     	; 0x1732 <__divsf3+0x18>
    1726:	21 f4       	brne	.+8      	; 0x1730 <__divsf3+0x16>
    1728:	5f 3f       	cpi	r21, 0xFF	; 255
    172a:	19 f0       	breq	.+6      	; 0x1732 <__divsf3+0x18>
    172c:	f0 c0       	rjmp	.+480    	; 0x190e <__fp_inf>
    172e:	51 11       	cpse	r21, r1
    1730:	39 c1       	rjmp	.+626    	; 0x19a4 <__fp_szero>
    1732:	f3 c0       	rjmp	.+486    	; 0x191a <__fp_nan>

00001734 <__divsf3x>:
    1734:	14 d1       	rcall	.+552    	; 0x195e <__fp_split3>
    1736:	98 f3       	brcs	.-26     	; 0x171e <__divsf3+0x4>

00001738 <__divsf3_pse>:
    1738:	99 23       	and	r25, r25
    173a:	c9 f3       	breq	.-14     	; 0x172e <__divsf3+0x14>
    173c:	55 23       	and	r21, r21
    173e:	b1 f3       	breq	.-20     	; 0x172c <__divsf3+0x12>
    1740:	95 1b       	sub	r25, r21
    1742:	55 0b       	sbc	r21, r21
    1744:	bb 27       	eor	r27, r27
    1746:	aa 27       	eor	r26, r26
    1748:	62 17       	cp	r22, r18
    174a:	73 07       	cpc	r23, r19
    174c:	84 07       	cpc	r24, r20
    174e:	38 f0       	brcs	.+14     	; 0x175e <__divsf3_pse+0x26>
    1750:	9f 5f       	subi	r25, 0xFF	; 255
    1752:	5f 4f       	sbci	r21, 0xFF	; 255
    1754:	22 0f       	add	r18, r18
    1756:	33 1f       	adc	r19, r19
    1758:	44 1f       	adc	r20, r20
    175a:	aa 1f       	adc	r26, r26
    175c:	a9 f3       	breq	.-22     	; 0x1748 <__divsf3_pse+0x10>
    175e:	33 d0       	rcall	.+102    	; 0x17c6 <__divsf3_pse+0x8e>
    1760:	0e 2e       	mov	r0, r30
    1762:	3a f0       	brmi	.+14     	; 0x1772 <__divsf3_pse+0x3a>
    1764:	e0 e8       	ldi	r30, 0x80	; 128
    1766:	30 d0       	rcall	.+96     	; 0x17c8 <__divsf3_pse+0x90>
    1768:	91 50       	subi	r25, 0x01	; 1
    176a:	50 40       	sbci	r21, 0x00	; 0
    176c:	e6 95       	lsr	r30
    176e:	00 1c       	adc	r0, r0
    1770:	ca f7       	brpl	.-14     	; 0x1764 <__divsf3_pse+0x2c>
    1772:	29 d0       	rcall	.+82     	; 0x17c6 <__divsf3_pse+0x8e>
    1774:	fe 2f       	mov	r31, r30
    1776:	27 d0       	rcall	.+78     	; 0x17c6 <__divsf3_pse+0x8e>
    1778:	66 0f       	add	r22, r22
    177a:	77 1f       	adc	r23, r23
    177c:	88 1f       	adc	r24, r24
    177e:	bb 1f       	adc	r27, r27
    1780:	26 17       	cp	r18, r22
    1782:	37 07       	cpc	r19, r23
    1784:	48 07       	cpc	r20, r24
    1786:	ab 07       	cpc	r26, r27
    1788:	b0 e8       	ldi	r27, 0x80	; 128
    178a:	09 f0       	breq	.+2      	; 0x178e <__divsf3_pse+0x56>
    178c:	bb 0b       	sbc	r27, r27
    178e:	80 2d       	mov	r24, r0
    1790:	bf 01       	movw	r22, r30
    1792:	ff 27       	eor	r31, r31
    1794:	93 58       	subi	r25, 0x83	; 131
    1796:	5f 4f       	sbci	r21, 0xFF	; 255
    1798:	2a f0       	brmi	.+10     	; 0x17a4 <__divsf3_pse+0x6c>
    179a:	9e 3f       	cpi	r25, 0xFE	; 254
    179c:	51 05       	cpc	r21, r1
    179e:	68 f0       	brcs	.+26     	; 0x17ba <__divsf3_pse+0x82>
    17a0:	b6 c0       	rjmp	.+364    	; 0x190e <__fp_inf>
    17a2:	00 c1       	rjmp	.+512    	; 0x19a4 <__fp_szero>
    17a4:	5f 3f       	cpi	r21, 0xFF	; 255
    17a6:	ec f3       	brlt	.-6      	; 0x17a2 <__divsf3_pse+0x6a>
    17a8:	98 3e       	cpi	r25, 0xE8	; 232
    17aa:	dc f3       	brlt	.-10     	; 0x17a2 <__divsf3_pse+0x6a>
    17ac:	86 95       	lsr	r24
    17ae:	77 95       	ror	r23
    17b0:	67 95       	ror	r22
    17b2:	b7 95       	ror	r27
    17b4:	f7 95       	ror	r31
    17b6:	9f 5f       	subi	r25, 0xFF	; 255
    17b8:	c9 f7       	brne	.-14     	; 0x17ac <__divsf3_pse+0x74>
    17ba:	88 0f       	add	r24, r24
    17bc:	91 1d       	adc	r25, r1
    17be:	96 95       	lsr	r25
    17c0:	87 95       	ror	r24
    17c2:	97 f9       	bld	r25, 7
    17c4:	08 95       	ret
    17c6:	e1 e0       	ldi	r30, 0x01	; 1
    17c8:	66 0f       	add	r22, r22
    17ca:	77 1f       	adc	r23, r23
    17cc:	88 1f       	adc	r24, r24
    17ce:	bb 1f       	adc	r27, r27
    17d0:	62 17       	cp	r22, r18
    17d2:	73 07       	cpc	r23, r19
    17d4:	84 07       	cpc	r24, r20
    17d6:	ba 07       	cpc	r27, r26
    17d8:	20 f0       	brcs	.+8      	; 0x17e2 <__divsf3_pse+0xaa>
    17da:	62 1b       	sub	r22, r18
    17dc:	73 0b       	sbc	r23, r19
    17de:	84 0b       	sbc	r24, r20
    17e0:	ba 0b       	sbc	r27, r26
    17e2:	ee 1f       	adc	r30, r30
    17e4:	88 f7       	brcc	.-30     	; 0x17c8 <__divsf3_pse+0x90>
    17e6:	e0 95       	com	r30
    17e8:	08 95       	ret

000017ea <__fixsfsi>:
    17ea:	04 d0       	rcall	.+8      	; 0x17f4 <__fixunssfsi>
    17ec:	68 94       	set
    17ee:	b1 11       	cpse	r27, r1
    17f0:	d9 c0       	rjmp	.+434    	; 0x19a4 <__fp_szero>
    17f2:	08 95       	ret

000017f4 <__fixunssfsi>:
    17f4:	bc d0       	rcall	.+376    	; 0x196e <__fp_splitA>
    17f6:	88 f0       	brcs	.+34     	; 0x181a <__fixunssfsi+0x26>
    17f8:	9f 57       	subi	r25, 0x7F	; 127
    17fa:	90 f0       	brcs	.+36     	; 0x1820 <__fixunssfsi+0x2c>
    17fc:	b9 2f       	mov	r27, r25
    17fe:	99 27       	eor	r25, r25
    1800:	b7 51       	subi	r27, 0x17	; 23
    1802:	a0 f0       	brcs	.+40     	; 0x182c <__fixunssfsi+0x38>
    1804:	d1 f0       	breq	.+52     	; 0x183a <__fixunssfsi+0x46>
    1806:	66 0f       	add	r22, r22
    1808:	77 1f       	adc	r23, r23
    180a:	88 1f       	adc	r24, r24
    180c:	99 1f       	adc	r25, r25
    180e:	1a f0       	brmi	.+6      	; 0x1816 <__fixunssfsi+0x22>
    1810:	ba 95       	dec	r27
    1812:	c9 f7       	brne	.-14     	; 0x1806 <__fixunssfsi+0x12>
    1814:	12 c0       	rjmp	.+36     	; 0x183a <__fixunssfsi+0x46>
    1816:	b1 30       	cpi	r27, 0x01	; 1
    1818:	81 f0       	breq	.+32     	; 0x183a <__fixunssfsi+0x46>
    181a:	c3 d0       	rcall	.+390    	; 0x19a2 <__fp_zero>
    181c:	b1 e0       	ldi	r27, 0x01	; 1
    181e:	08 95       	ret
    1820:	c0 c0       	rjmp	.+384    	; 0x19a2 <__fp_zero>
    1822:	67 2f       	mov	r22, r23
    1824:	78 2f       	mov	r23, r24
    1826:	88 27       	eor	r24, r24
    1828:	b8 5f       	subi	r27, 0xF8	; 248
    182a:	39 f0       	breq	.+14     	; 0x183a <__fixunssfsi+0x46>
    182c:	b9 3f       	cpi	r27, 0xF9	; 249
    182e:	cc f3       	brlt	.-14     	; 0x1822 <__fixunssfsi+0x2e>
    1830:	86 95       	lsr	r24
    1832:	77 95       	ror	r23
    1834:	67 95       	ror	r22
    1836:	b3 95       	inc	r27
    1838:	d9 f7       	brne	.-10     	; 0x1830 <__fixunssfsi+0x3c>
    183a:	3e f4       	brtc	.+14     	; 0x184a <__fixunssfsi+0x56>
    183c:	90 95       	com	r25
    183e:	80 95       	com	r24
    1840:	70 95       	com	r23
    1842:	61 95       	neg	r22
    1844:	7f 4f       	sbci	r23, 0xFF	; 255
    1846:	8f 4f       	sbci	r24, 0xFF	; 255
    1848:	9f 4f       	sbci	r25, 0xFF	; 255
    184a:	08 95       	ret

0000184c <__floatunsisf>:
    184c:	e8 94       	clt
    184e:	09 c0       	rjmp	.+18     	; 0x1862 <__floatsisf+0x12>

00001850 <__floatsisf>:
    1850:	97 fb       	bst	r25, 7
    1852:	3e f4       	brtc	.+14     	; 0x1862 <__floatsisf+0x12>
    1854:	90 95       	com	r25
    1856:	80 95       	com	r24
    1858:	70 95       	com	r23
    185a:	61 95       	neg	r22
    185c:	7f 4f       	sbci	r23, 0xFF	; 255
    185e:	8f 4f       	sbci	r24, 0xFF	; 255
    1860:	9f 4f       	sbci	r25, 0xFF	; 255
    1862:	99 23       	and	r25, r25
    1864:	a9 f0       	breq	.+42     	; 0x1890 <__floatsisf+0x40>
    1866:	f9 2f       	mov	r31, r25
    1868:	96 e9       	ldi	r25, 0x96	; 150
    186a:	bb 27       	eor	r27, r27
    186c:	93 95       	inc	r25
    186e:	f6 95       	lsr	r31
    1870:	87 95       	ror	r24
    1872:	77 95       	ror	r23
    1874:	67 95       	ror	r22
    1876:	b7 95       	ror	r27
    1878:	f1 11       	cpse	r31, r1
    187a:	f8 cf       	rjmp	.-16     	; 0x186c <__floatsisf+0x1c>
    187c:	fa f4       	brpl	.+62     	; 0x18bc <__floatsisf+0x6c>
    187e:	bb 0f       	add	r27, r27
    1880:	11 f4       	brne	.+4      	; 0x1886 <__floatsisf+0x36>
    1882:	60 ff       	sbrs	r22, 0
    1884:	1b c0       	rjmp	.+54     	; 0x18bc <__floatsisf+0x6c>
    1886:	6f 5f       	subi	r22, 0xFF	; 255
    1888:	7f 4f       	sbci	r23, 0xFF	; 255
    188a:	8f 4f       	sbci	r24, 0xFF	; 255
    188c:	9f 4f       	sbci	r25, 0xFF	; 255
    188e:	16 c0       	rjmp	.+44     	; 0x18bc <__floatsisf+0x6c>
    1890:	88 23       	and	r24, r24
    1892:	11 f0       	breq	.+4      	; 0x1898 <__floatsisf+0x48>
    1894:	96 e9       	ldi	r25, 0x96	; 150
    1896:	11 c0       	rjmp	.+34     	; 0x18ba <__floatsisf+0x6a>
    1898:	77 23       	and	r23, r23
    189a:	21 f0       	breq	.+8      	; 0x18a4 <__floatsisf+0x54>
    189c:	9e e8       	ldi	r25, 0x8E	; 142
    189e:	87 2f       	mov	r24, r23
    18a0:	76 2f       	mov	r23, r22
    18a2:	05 c0       	rjmp	.+10     	; 0x18ae <__floatsisf+0x5e>
    18a4:	66 23       	and	r22, r22
    18a6:	71 f0       	breq	.+28     	; 0x18c4 <__floatsisf+0x74>
    18a8:	96 e8       	ldi	r25, 0x86	; 134
    18aa:	86 2f       	mov	r24, r22
    18ac:	70 e0       	ldi	r23, 0x00	; 0
    18ae:	60 e0       	ldi	r22, 0x00	; 0
    18b0:	2a f0       	brmi	.+10     	; 0x18bc <__floatsisf+0x6c>
    18b2:	9a 95       	dec	r25
    18b4:	66 0f       	add	r22, r22
    18b6:	77 1f       	adc	r23, r23
    18b8:	88 1f       	adc	r24, r24
    18ba:	da f7       	brpl	.-10     	; 0x18b2 <__floatsisf+0x62>
    18bc:	88 0f       	add	r24, r24
    18be:	96 95       	lsr	r25
    18c0:	87 95       	ror	r24
    18c2:	97 f9       	bld	r25, 7
    18c4:	08 95       	ret

000018c6 <__fp_cmp>:
    18c6:	99 0f       	add	r25, r25
    18c8:	00 08       	sbc	r0, r0
    18ca:	55 0f       	add	r21, r21
    18cc:	aa 0b       	sbc	r26, r26
    18ce:	e0 e8       	ldi	r30, 0x80	; 128
    18d0:	fe ef       	ldi	r31, 0xFE	; 254
    18d2:	16 16       	cp	r1, r22
    18d4:	17 06       	cpc	r1, r23
    18d6:	e8 07       	cpc	r30, r24
    18d8:	f9 07       	cpc	r31, r25
    18da:	c0 f0       	brcs	.+48     	; 0x190c <__fp_cmp+0x46>
    18dc:	12 16       	cp	r1, r18
    18de:	13 06       	cpc	r1, r19
    18e0:	e4 07       	cpc	r30, r20
    18e2:	f5 07       	cpc	r31, r21
    18e4:	98 f0       	brcs	.+38     	; 0x190c <__fp_cmp+0x46>
    18e6:	62 1b       	sub	r22, r18
    18e8:	73 0b       	sbc	r23, r19
    18ea:	84 0b       	sbc	r24, r20
    18ec:	95 0b       	sbc	r25, r21
    18ee:	39 f4       	brne	.+14     	; 0x18fe <__fp_cmp+0x38>
    18f0:	0a 26       	eor	r0, r26
    18f2:	61 f0       	breq	.+24     	; 0x190c <__fp_cmp+0x46>
    18f4:	23 2b       	or	r18, r19
    18f6:	24 2b       	or	r18, r20
    18f8:	25 2b       	or	r18, r21
    18fa:	21 f4       	brne	.+8      	; 0x1904 <__fp_cmp+0x3e>
    18fc:	08 95       	ret
    18fe:	0a 26       	eor	r0, r26
    1900:	09 f4       	brne	.+2      	; 0x1904 <__fp_cmp+0x3e>
    1902:	a1 40       	sbci	r26, 0x01	; 1
    1904:	a6 95       	lsr	r26
    1906:	8f ef       	ldi	r24, 0xFF	; 255
    1908:	81 1d       	adc	r24, r1
    190a:	81 1d       	adc	r24, r1
    190c:	08 95       	ret

0000190e <__fp_inf>:
    190e:	97 f9       	bld	r25, 7
    1910:	9f 67       	ori	r25, 0x7F	; 127
    1912:	80 e8       	ldi	r24, 0x80	; 128
    1914:	70 e0       	ldi	r23, 0x00	; 0
    1916:	60 e0       	ldi	r22, 0x00	; 0
    1918:	08 95       	ret

0000191a <__fp_nan>:
    191a:	9f ef       	ldi	r25, 0xFF	; 255
    191c:	80 ec       	ldi	r24, 0xC0	; 192
    191e:	08 95       	ret

00001920 <__fp_pscA>:
    1920:	00 24       	eor	r0, r0
    1922:	0a 94       	dec	r0
    1924:	16 16       	cp	r1, r22
    1926:	17 06       	cpc	r1, r23
    1928:	18 06       	cpc	r1, r24
    192a:	09 06       	cpc	r0, r25
    192c:	08 95       	ret

0000192e <__fp_pscB>:
    192e:	00 24       	eor	r0, r0
    1930:	0a 94       	dec	r0
    1932:	12 16       	cp	r1, r18
    1934:	13 06       	cpc	r1, r19
    1936:	14 06       	cpc	r1, r20
    1938:	05 06       	cpc	r0, r21
    193a:	08 95       	ret

0000193c <__fp_round>:
    193c:	09 2e       	mov	r0, r25
    193e:	03 94       	inc	r0
    1940:	00 0c       	add	r0, r0
    1942:	11 f4       	brne	.+4      	; 0x1948 <__fp_round+0xc>
    1944:	88 23       	and	r24, r24
    1946:	52 f0       	brmi	.+20     	; 0x195c <__fp_round+0x20>
    1948:	bb 0f       	add	r27, r27
    194a:	40 f4       	brcc	.+16     	; 0x195c <__fp_round+0x20>
    194c:	bf 2b       	or	r27, r31
    194e:	11 f4       	brne	.+4      	; 0x1954 <__fp_round+0x18>
    1950:	60 ff       	sbrs	r22, 0
    1952:	04 c0       	rjmp	.+8      	; 0x195c <__fp_round+0x20>
    1954:	6f 5f       	subi	r22, 0xFF	; 255
    1956:	7f 4f       	sbci	r23, 0xFF	; 255
    1958:	8f 4f       	sbci	r24, 0xFF	; 255
    195a:	9f 4f       	sbci	r25, 0xFF	; 255
    195c:	08 95       	ret

0000195e <__fp_split3>:
    195e:	57 fd       	sbrc	r21, 7
    1960:	90 58       	subi	r25, 0x80	; 128
    1962:	44 0f       	add	r20, r20
    1964:	55 1f       	adc	r21, r21
    1966:	59 f0       	breq	.+22     	; 0x197e <__fp_splitA+0x10>
    1968:	5f 3f       	cpi	r21, 0xFF	; 255
    196a:	71 f0       	breq	.+28     	; 0x1988 <__fp_splitA+0x1a>
    196c:	47 95       	ror	r20

0000196e <__fp_splitA>:
    196e:	88 0f       	add	r24, r24
    1970:	97 fb       	bst	r25, 7
    1972:	99 1f       	adc	r25, r25
    1974:	61 f0       	breq	.+24     	; 0x198e <__fp_splitA+0x20>
    1976:	9f 3f       	cpi	r25, 0xFF	; 255
    1978:	79 f0       	breq	.+30     	; 0x1998 <__fp_splitA+0x2a>
    197a:	87 95       	ror	r24
    197c:	08 95       	ret
    197e:	12 16       	cp	r1, r18
    1980:	13 06       	cpc	r1, r19
    1982:	14 06       	cpc	r1, r20
    1984:	55 1f       	adc	r21, r21
    1986:	f2 cf       	rjmp	.-28     	; 0x196c <__fp_split3+0xe>
    1988:	46 95       	lsr	r20
    198a:	f1 df       	rcall	.-30     	; 0x196e <__fp_splitA>
    198c:	08 c0       	rjmp	.+16     	; 0x199e <__fp_splitA+0x30>
    198e:	16 16       	cp	r1, r22
    1990:	17 06       	cpc	r1, r23
    1992:	18 06       	cpc	r1, r24
    1994:	99 1f       	adc	r25, r25
    1996:	f1 cf       	rjmp	.-30     	; 0x197a <__fp_splitA+0xc>
    1998:	86 95       	lsr	r24
    199a:	71 05       	cpc	r23, r1
    199c:	61 05       	cpc	r22, r1
    199e:	08 94       	sec
    19a0:	08 95       	ret

000019a2 <__fp_zero>:
    19a2:	e8 94       	clt

000019a4 <__fp_szero>:
    19a4:	bb 27       	eor	r27, r27
    19a6:	66 27       	eor	r22, r22
    19a8:	77 27       	eor	r23, r23
    19aa:	cb 01       	movw	r24, r22
    19ac:	97 f9       	bld	r25, 7
    19ae:	08 95       	ret

000019b0 <__gesf2>:
    19b0:	8a df       	rcall	.-236    	; 0x18c6 <__fp_cmp>
    19b2:	08 f4       	brcc	.+2      	; 0x19b6 <__gesf2+0x6>
    19b4:	8f ef       	ldi	r24, 0xFF	; 255
    19b6:	08 95       	ret

000019b8 <__mulsf3>:
    19b8:	0b d0       	rcall	.+22     	; 0x19d0 <__mulsf3x>
    19ba:	c0 cf       	rjmp	.-128    	; 0x193c <__fp_round>
    19bc:	b1 df       	rcall	.-158    	; 0x1920 <__fp_pscA>
    19be:	28 f0       	brcs	.+10     	; 0x19ca <__mulsf3+0x12>
    19c0:	b6 df       	rcall	.-148    	; 0x192e <__fp_pscB>
    19c2:	18 f0       	brcs	.+6      	; 0x19ca <__mulsf3+0x12>
    19c4:	95 23       	and	r25, r21
    19c6:	09 f0       	breq	.+2      	; 0x19ca <__mulsf3+0x12>
    19c8:	a2 cf       	rjmp	.-188    	; 0x190e <__fp_inf>
    19ca:	a7 cf       	rjmp	.-178    	; 0x191a <__fp_nan>
    19cc:	11 24       	eor	r1, r1
    19ce:	ea cf       	rjmp	.-44     	; 0x19a4 <__fp_szero>

000019d0 <__mulsf3x>:
    19d0:	c6 df       	rcall	.-116    	; 0x195e <__fp_split3>
    19d2:	a0 f3       	brcs	.-24     	; 0x19bc <__mulsf3+0x4>

000019d4 <__mulsf3_pse>:
    19d4:	95 9f       	mul	r25, r21
    19d6:	d1 f3       	breq	.-12     	; 0x19cc <__mulsf3+0x14>
    19d8:	95 0f       	add	r25, r21
    19da:	50 e0       	ldi	r21, 0x00	; 0
    19dc:	55 1f       	adc	r21, r21
    19de:	62 9f       	mul	r22, r18
    19e0:	f0 01       	movw	r30, r0
    19e2:	72 9f       	mul	r23, r18
    19e4:	bb 27       	eor	r27, r27
    19e6:	f0 0d       	add	r31, r0
    19e8:	b1 1d       	adc	r27, r1
    19ea:	63 9f       	mul	r22, r19
    19ec:	aa 27       	eor	r26, r26
    19ee:	f0 0d       	add	r31, r0
    19f0:	b1 1d       	adc	r27, r1
    19f2:	aa 1f       	adc	r26, r26
    19f4:	64 9f       	mul	r22, r20
    19f6:	66 27       	eor	r22, r22
    19f8:	b0 0d       	add	r27, r0
    19fa:	a1 1d       	adc	r26, r1
    19fc:	66 1f       	adc	r22, r22
    19fe:	82 9f       	mul	r24, r18
    1a00:	22 27       	eor	r18, r18
    1a02:	b0 0d       	add	r27, r0
    1a04:	a1 1d       	adc	r26, r1
    1a06:	62 1f       	adc	r22, r18
    1a08:	73 9f       	mul	r23, r19
    1a0a:	b0 0d       	add	r27, r0
    1a0c:	a1 1d       	adc	r26, r1
    1a0e:	62 1f       	adc	r22, r18
    1a10:	83 9f       	mul	r24, r19
    1a12:	a0 0d       	add	r26, r0
    1a14:	61 1d       	adc	r22, r1
    1a16:	22 1f       	adc	r18, r18
    1a18:	74 9f       	mul	r23, r20
    1a1a:	33 27       	eor	r19, r19
    1a1c:	a0 0d       	add	r26, r0
    1a1e:	61 1d       	adc	r22, r1
    1a20:	23 1f       	adc	r18, r19
    1a22:	84 9f       	mul	r24, r20
    1a24:	60 0d       	add	r22, r0
    1a26:	21 1d       	adc	r18, r1
    1a28:	82 2f       	mov	r24, r18
    1a2a:	76 2f       	mov	r23, r22
    1a2c:	6a 2f       	mov	r22, r26
    1a2e:	11 24       	eor	r1, r1
    1a30:	9f 57       	subi	r25, 0x7F	; 127
    1a32:	50 40       	sbci	r21, 0x00	; 0
    1a34:	8a f0       	brmi	.+34     	; 0x1a58 <__mulsf3_pse+0x84>
    1a36:	e1 f0       	breq	.+56     	; 0x1a70 <__mulsf3_pse+0x9c>
    1a38:	88 23       	and	r24, r24
    1a3a:	4a f0       	brmi	.+18     	; 0x1a4e <__mulsf3_pse+0x7a>
    1a3c:	ee 0f       	add	r30, r30
    1a3e:	ff 1f       	adc	r31, r31
    1a40:	bb 1f       	adc	r27, r27
    1a42:	66 1f       	adc	r22, r22
    1a44:	77 1f       	adc	r23, r23
    1a46:	88 1f       	adc	r24, r24
    1a48:	91 50       	subi	r25, 0x01	; 1
    1a4a:	50 40       	sbci	r21, 0x00	; 0
    1a4c:	a9 f7       	brne	.-22     	; 0x1a38 <__mulsf3_pse+0x64>
    1a4e:	9e 3f       	cpi	r25, 0xFE	; 254
    1a50:	51 05       	cpc	r21, r1
    1a52:	70 f0       	brcs	.+28     	; 0x1a70 <__mulsf3_pse+0x9c>
    1a54:	5c cf       	rjmp	.-328    	; 0x190e <__fp_inf>
    1a56:	a6 cf       	rjmp	.-180    	; 0x19a4 <__fp_szero>
    1a58:	5f 3f       	cpi	r21, 0xFF	; 255
    1a5a:	ec f3       	brlt	.-6      	; 0x1a56 <__mulsf3_pse+0x82>
    1a5c:	98 3e       	cpi	r25, 0xE8	; 232
    1a5e:	dc f3       	brlt	.-10     	; 0x1a56 <__mulsf3_pse+0x82>
    1a60:	86 95       	lsr	r24
    1a62:	77 95       	ror	r23
    1a64:	67 95       	ror	r22
    1a66:	b7 95       	ror	r27
    1a68:	f7 95       	ror	r31
    1a6a:	e7 95       	ror	r30
    1a6c:	9f 5f       	subi	r25, 0xFF	; 255
    1a6e:	c1 f7       	brne	.-16     	; 0x1a60 <__mulsf3_pse+0x8c>
    1a70:	fe 2b       	or	r31, r30
    1a72:	88 0f       	add	r24, r24
    1a74:	91 1d       	adc	r25, r1
    1a76:	96 95       	lsr	r25
    1a78:	87 95       	ror	r24
    1a7a:	97 f9       	bld	r25, 7
    1a7c:	08 95       	ret

00001a7e <__udivmodsi4>:
    1a7e:	a1 e2       	ldi	r26, 0x21	; 33
    1a80:	1a 2e       	mov	r1, r26
    1a82:	aa 1b       	sub	r26, r26
    1a84:	bb 1b       	sub	r27, r27
    1a86:	fd 01       	movw	r30, r26
    1a88:	0d c0       	rjmp	.+26     	; 0x1aa4 <__udivmodsi4_ep>

00001a8a <__udivmodsi4_loop>:
    1a8a:	aa 1f       	adc	r26, r26
    1a8c:	bb 1f       	adc	r27, r27
    1a8e:	ee 1f       	adc	r30, r30
    1a90:	ff 1f       	adc	r31, r31
    1a92:	a2 17       	cp	r26, r18
    1a94:	b3 07       	cpc	r27, r19
    1a96:	e4 07       	cpc	r30, r20
    1a98:	f5 07       	cpc	r31, r21
    1a9a:	20 f0       	brcs	.+8      	; 0x1aa4 <__udivmodsi4_ep>
    1a9c:	a2 1b       	sub	r26, r18
    1a9e:	b3 0b       	sbc	r27, r19
    1aa0:	e4 0b       	sbc	r30, r20
    1aa2:	f5 0b       	sbc	r31, r21

00001aa4 <__udivmodsi4_ep>:
    1aa4:	66 1f       	adc	r22, r22
    1aa6:	77 1f       	adc	r23, r23
    1aa8:	88 1f       	adc	r24, r24
    1aaa:	99 1f       	adc	r25, r25
    1aac:	1a 94       	dec	r1
    1aae:	69 f7       	brne	.-38     	; 0x1a8a <__udivmodsi4_loop>
    1ab0:	60 95       	com	r22
    1ab2:	70 95       	com	r23
    1ab4:	80 95       	com	r24
    1ab6:	90 95       	com	r25
    1ab8:	9b 01       	movw	r18, r22
    1aba:	ac 01       	movw	r20, r24
    1abc:	bd 01       	movw	r22, r26
    1abe:	cf 01       	movw	r24, r30
    1ac0:	08 95       	ret

00001ac2 <__tablejump2__>:
    1ac2:	ee 0f       	add	r30, r30
    1ac4:	ff 1f       	adc	r31, r31
    1ac6:	88 1f       	adc	r24, r24
    1ac8:	8b bf       	out	0x3b, r24	; 59
    1aca:	07 90       	elpm	r0, Z+
    1acc:	f6 91       	elpm	r31, Z
    1ace:	e0 2d       	mov	r30, r0
    1ad0:	19 94       	eijmp

00001ad2 <dtostrf>:
    1ad2:	ef 92       	push	r14
    1ad4:	0f 93       	push	r16
    1ad6:	1f 93       	push	r17
    1ad8:	cf 93       	push	r28
    1ada:	df 93       	push	r29
    1adc:	e8 01       	movw	r28, r16
    1ade:	47 fd       	sbrc	r20, 7
    1ae0:	02 c0       	rjmp	.+4      	; 0x1ae6 <dtostrf+0x14>
    1ae2:	34 e0       	ldi	r19, 0x04	; 4
    1ae4:	01 c0       	rjmp	.+2      	; 0x1ae8 <dtostrf+0x16>
    1ae6:	34 e1       	ldi	r19, 0x14	; 20
    1ae8:	04 2e       	mov	r0, r20
    1aea:	00 0c       	add	r0, r0
    1aec:	55 0b       	sbc	r21, r21
    1aee:	57 ff       	sbrs	r21, 7
    1af0:	03 c0       	rjmp	.+6      	; 0x1af8 <dtostrf+0x26>
    1af2:	51 95       	neg	r21
    1af4:	41 95       	neg	r20
    1af6:	51 09       	sbc	r21, r1
    1af8:	e3 2e       	mov	r14, r19
    1afa:	02 2f       	mov	r16, r18
    1afc:	24 2f       	mov	r18, r20
    1afe:	ae 01       	movw	r20, r28
    1b00:	32 d2       	rcall	.+1124   	; 0x1f66 <dtoa_prf>
    1b02:	ce 01       	movw	r24, r28
    1b04:	df 91       	pop	r29
    1b06:	cf 91       	pop	r28
    1b08:	1f 91       	pop	r17
    1b0a:	0f 91       	pop	r16
    1b0c:	ef 90       	pop	r14
    1b0e:	08 95       	ret

00001b10 <sprintf>:
    1b10:	0f 93       	push	r16
    1b12:	1f 93       	push	r17
    1b14:	cf 93       	push	r28
    1b16:	df 93       	push	r29
    1b18:	cd b7       	in	r28, 0x3d	; 61
    1b1a:	de b7       	in	r29, 0x3e	; 62
    1b1c:	2e 97       	sbiw	r28, 0x0e	; 14
    1b1e:	0f b6       	in	r0, 0x3f	; 63
    1b20:	f8 94       	cli
    1b22:	de bf       	out	0x3e, r29	; 62
    1b24:	0f be       	out	0x3f, r0	; 63
    1b26:	cd bf       	out	0x3d, r28	; 61
    1b28:	0e 89       	ldd	r16, Y+22	; 0x16
    1b2a:	1f 89       	ldd	r17, Y+23	; 0x17
    1b2c:	86 e0       	ldi	r24, 0x06	; 6
    1b2e:	8c 83       	std	Y+4, r24	; 0x04
    1b30:	1a 83       	std	Y+2, r17	; 0x02
    1b32:	09 83       	std	Y+1, r16	; 0x01
    1b34:	8f ef       	ldi	r24, 0xFF	; 255
    1b36:	9f e7       	ldi	r25, 0x7F	; 127
    1b38:	9e 83       	std	Y+6, r25	; 0x06
    1b3a:	8d 83       	std	Y+5, r24	; 0x05
    1b3c:	ae 01       	movw	r20, r28
    1b3e:	46 5e       	subi	r20, 0xE6	; 230
    1b40:	5f 4f       	sbci	r21, 0xFF	; 255
    1b42:	68 8d       	ldd	r22, Y+24	; 0x18
    1b44:	79 8d       	ldd	r23, Y+25	; 0x19
    1b46:	ce 01       	movw	r24, r28
    1b48:	01 96       	adiw	r24, 0x01	; 1
    1b4a:	10 d0       	rcall	.+32     	; 0x1b6c <vfprintf>
    1b4c:	ef 81       	ldd	r30, Y+7	; 0x07
    1b4e:	f8 85       	ldd	r31, Y+8	; 0x08
    1b50:	e0 0f       	add	r30, r16
    1b52:	f1 1f       	adc	r31, r17
    1b54:	10 82       	st	Z, r1
    1b56:	2e 96       	adiw	r28, 0x0e	; 14
    1b58:	0f b6       	in	r0, 0x3f	; 63
    1b5a:	f8 94       	cli
    1b5c:	de bf       	out	0x3e, r29	; 62
    1b5e:	0f be       	out	0x3f, r0	; 63
    1b60:	cd bf       	out	0x3d, r28	; 61
    1b62:	df 91       	pop	r29
    1b64:	cf 91       	pop	r28
    1b66:	1f 91       	pop	r17
    1b68:	0f 91       	pop	r16
    1b6a:	08 95       	ret

00001b6c <vfprintf>:
    1b6c:	2f 92       	push	r2
    1b6e:	3f 92       	push	r3
    1b70:	4f 92       	push	r4
    1b72:	5f 92       	push	r5
    1b74:	6f 92       	push	r6
    1b76:	7f 92       	push	r7
    1b78:	8f 92       	push	r8
    1b7a:	9f 92       	push	r9
    1b7c:	af 92       	push	r10
    1b7e:	bf 92       	push	r11
    1b80:	cf 92       	push	r12
    1b82:	df 92       	push	r13
    1b84:	ef 92       	push	r14
    1b86:	ff 92       	push	r15
    1b88:	0f 93       	push	r16
    1b8a:	1f 93       	push	r17
    1b8c:	cf 93       	push	r28
    1b8e:	df 93       	push	r29
    1b90:	cd b7       	in	r28, 0x3d	; 61
    1b92:	de b7       	in	r29, 0x3e	; 62
    1b94:	2b 97       	sbiw	r28, 0x0b	; 11
    1b96:	0f b6       	in	r0, 0x3f	; 63
    1b98:	f8 94       	cli
    1b9a:	de bf       	out	0x3e, r29	; 62
    1b9c:	0f be       	out	0x3f, r0	; 63
    1b9e:	cd bf       	out	0x3d, r28	; 61
    1ba0:	6c 01       	movw	r12, r24
    1ba2:	7b 01       	movw	r14, r22
    1ba4:	8a 01       	movw	r16, r20
    1ba6:	fc 01       	movw	r30, r24
    1ba8:	17 82       	std	Z+7, r1	; 0x07
    1baa:	16 82       	std	Z+6, r1	; 0x06
    1bac:	83 81       	ldd	r24, Z+3	; 0x03
    1bae:	81 ff       	sbrs	r24, 1
    1bb0:	bf c1       	rjmp	.+894    	; 0x1f30 <vfprintf+0x3c4>
    1bb2:	ce 01       	movw	r24, r28
    1bb4:	01 96       	adiw	r24, 0x01	; 1
    1bb6:	3c 01       	movw	r6, r24
    1bb8:	f6 01       	movw	r30, r12
    1bba:	93 81       	ldd	r25, Z+3	; 0x03
    1bbc:	f7 01       	movw	r30, r14
    1bbe:	93 fd       	sbrc	r25, 3
    1bc0:	85 91       	lpm	r24, Z+
    1bc2:	93 ff       	sbrs	r25, 3
    1bc4:	81 91       	ld	r24, Z+
    1bc6:	7f 01       	movw	r14, r30
    1bc8:	88 23       	and	r24, r24
    1bca:	09 f4       	brne	.+2      	; 0x1bce <vfprintf+0x62>
    1bcc:	ad c1       	rjmp	.+858    	; 0x1f28 <vfprintf+0x3bc>
    1bce:	85 32       	cpi	r24, 0x25	; 37
    1bd0:	39 f4       	brne	.+14     	; 0x1be0 <vfprintf+0x74>
    1bd2:	93 fd       	sbrc	r25, 3
    1bd4:	85 91       	lpm	r24, Z+
    1bd6:	93 ff       	sbrs	r25, 3
    1bd8:	81 91       	ld	r24, Z+
    1bda:	7f 01       	movw	r14, r30
    1bdc:	85 32       	cpi	r24, 0x25	; 37
    1bde:	21 f4       	brne	.+8      	; 0x1be8 <vfprintf+0x7c>
    1be0:	b6 01       	movw	r22, r12
    1be2:	90 e0       	ldi	r25, 0x00	; 0
    1be4:	24 d4       	rcall	.+2120   	; 0x242e <fputc>
    1be6:	e8 cf       	rjmp	.-48     	; 0x1bb8 <vfprintf+0x4c>
    1be8:	91 2c       	mov	r9, r1
    1bea:	21 2c       	mov	r2, r1
    1bec:	31 2c       	mov	r3, r1
    1bee:	ff e1       	ldi	r31, 0x1F	; 31
    1bf0:	f3 15       	cp	r31, r3
    1bf2:	d8 f0       	brcs	.+54     	; 0x1c2a <vfprintf+0xbe>
    1bf4:	8b 32       	cpi	r24, 0x2B	; 43
    1bf6:	79 f0       	breq	.+30     	; 0x1c16 <vfprintf+0xaa>
    1bf8:	38 f4       	brcc	.+14     	; 0x1c08 <vfprintf+0x9c>
    1bfa:	80 32       	cpi	r24, 0x20	; 32
    1bfc:	79 f0       	breq	.+30     	; 0x1c1c <vfprintf+0xb0>
    1bfe:	83 32       	cpi	r24, 0x23	; 35
    1c00:	a1 f4       	brne	.+40     	; 0x1c2a <vfprintf+0xbe>
    1c02:	23 2d       	mov	r18, r3
    1c04:	20 61       	ori	r18, 0x10	; 16
    1c06:	1d c0       	rjmp	.+58     	; 0x1c42 <vfprintf+0xd6>
    1c08:	8d 32       	cpi	r24, 0x2D	; 45
    1c0a:	61 f0       	breq	.+24     	; 0x1c24 <vfprintf+0xb8>
    1c0c:	80 33       	cpi	r24, 0x30	; 48
    1c0e:	69 f4       	brne	.+26     	; 0x1c2a <vfprintf+0xbe>
    1c10:	23 2d       	mov	r18, r3
    1c12:	21 60       	ori	r18, 0x01	; 1
    1c14:	16 c0       	rjmp	.+44     	; 0x1c42 <vfprintf+0xd6>
    1c16:	83 2d       	mov	r24, r3
    1c18:	82 60       	ori	r24, 0x02	; 2
    1c1a:	38 2e       	mov	r3, r24
    1c1c:	e3 2d       	mov	r30, r3
    1c1e:	e4 60       	ori	r30, 0x04	; 4
    1c20:	3e 2e       	mov	r3, r30
    1c22:	2a c0       	rjmp	.+84     	; 0x1c78 <vfprintf+0x10c>
    1c24:	f3 2d       	mov	r31, r3
    1c26:	f8 60       	ori	r31, 0x08	; 8
    1c28:	1d c0       	rjmp	.+58     	; 0x1c64 <vfprintf+0xf8>
    1c2a:	37 fc       	sbrc	r3, 7
    1c2c:	2d c0       	rjmp	.+90     	; 0x1c88 <vfprintf+0x11c>
    1c2e:	20 ed       	ldi	r18, 0xD0	; 208
    1c30:	28 0f       	add	r18, r24
    1c32:	2a 30       	cpi	r18, 0x0A	; 10
    1c34:	40 f0       	brcs	.+16     	; 0x1c46 <vfprintf+0xda>
    1c36:	8e 32       	cpi	r24, 0x2E	; 46
    1c38:	b9 f4       	brne	.+46     	; 0x1c68 <vfprintf+0xfc>
    1c3a:	36 fc       	sbrc	r3, 6
    1c3c:	75 c1       	rjmp	.+746    	; 0x1f28 <vfprintf+0x3bc>
    1c3e:	23 2d       	mov	r18, r3
    1c40:	20 64       	ori	r18, 0x40	; 64
    1c42:	32 2e       	mov	r3, r18
    1c44:	19 c0       	rjmp	.+50     	; 0x1c78 <vfprintf+0x10c>
    1c46:	36 fe       	sbrs	r3, 6
    1c48:	06 c0       	rjmp	.+12     	; 0x1c56 <vfprintf+0xea>
    1c4a:	8a e0       	ldi	r24, 0x0A	; 10
    1c4c:	98 9e       	mul	r9, r24
    1c4e:	20 0d       	add	r18, r0
    1c50:	11 24       	eor	r1, r1
    1c52:	92 2e       	mov	r9, r18
    1c54:	11 c0       	rjmp	.+34     	; 0x1c78 <vfprintf+0x10c>
    1c56:	ea e0       	ldi	r30, 0x0A	; 10
    1c58:	2e 9e       	mul	r2, r30
    1c5a:	20 0d       	add	r18, r0
    1c5c:	11 24       	eor	r1, r1
    1c5e:	22 2e       	mov	r2, r18
    1c60:	f3 2d       	mov	r31, r3
    1c62:	f0 62       	ori	r31, 0x20	; 32
    1c64:	3f 2e       	mov	r3, r31
    1c66:	08 c0       	rjmp	.+16     	; 0x1c78 <vfprintf+0x10c>
    1c68:	8c 36       	cpi	r24, 0x6C	; 108
    1c6a:	21 f4       	brne	.+8      	; 0x1c74 <vfprintf+0x108>
    1c6c:	83 2d       	mov	r24, r3
    1c6e:	80 68       	ori	r24, 0x80	; 128
    1c70:	38 2e       	mov	r3, r24
    1c72:	02 c0       	rjmp	.+4      	; 0x1c78 <vfprintf+0x10c>
    1c74:	88 36       	cpi	r24, 0x68	; 104
    1c76:	41 f4       	brne	.+16     	; 0x1c88 <vfprintf+0x11c>
    1c78:	f7 01       	movw	r30, r14
    1c7a:	93 fd       	sbrc	r25, 3
    1c7c:	85 91       	lpm	r24, Z+
    1c7e:	93 ff       	sbrs	r25, 3
    1c80:	81 91       	ld	r24, Z+
    1c82:	7f 01       	movw	r14, r30
    1c84:	81 11       	cpse	r24, r1
    1c86:	b3 cf       	rjmp	.-154    	; 0x1bee <vfprintf+0x82>
    1c88:	98 2f       	mov	r25, r24
    1c8a:	9f 7d       	andi	r25, 0xDF	; 223
    1c8c:	95 54       	subi	r25, 0x45	; 69
    1c8e:	93 30       	cpi	r25, 0x03	; 3
    1c90:	28 f4       	brcc	.+10     	; 0x1c9c <vfprintf+0x130>
    1c92:	0c 5f       	subi	r16, 0xFC	; 252
    1c94:	1f 4f       	sbci	r17, 0xFF	; 255
    1c96:	9f e3       	ldi	r25, 0x3F	; 63
    1c98:	99 83       	std	Y+1, r25	; 0x01
    1c9a:	0d c0       	rjmp	.+26     	; 0x1cb6 <vfprintf+0x14a>
    1c9c:	83 36       	cpi	r24, 0x63	; 99
    1c9e:	31 f0       	breq	.+12     	; 0x1cac <vfprintf+0x140>
    1ca0:	83 37       	cpi	r24, 0x73	; 115
    1ca2:	71 f0       	breq	.+28     	; 0x1cc0 <vfprintf+0x154>
    1ca4:	83 35       	cpi	r24, 0x53	; 83
    1ca6:	09 f0       	breq	.+2      	; 0x1caa <vfprintf+0x13e>
    1ca8:	55 c0       	rjmp	.+170    	; 0x1d54 <vfprintf+0x1e8>
    1caa:	20 c0       	rjmp	.+64     	; 0x1cec <vfprintf+0x180>
    1cac:	f8 01       	movw	r30, r16
    1cae:	80 81       	ld	r24, Z
    1cb0:	89 83       	std	Y+1, r24	; 0x01
    1cb2:	0e 5f       	subi	r16, 0xFE	; 254
    1cb4:	1f 4f       	sbci	r17, 0xFF	; 255
    1cb6:	88 24       	eor	r8, r8
    1cb8:	83 94       	inc	r8
    1cba:	91 2c       	mov	r9, r1
    1cbc:	53 01       	movw	r10, r6
    1cbe:	12 c0       	rjmp	.+36     	; 0x1ce4 <vfprintf+0x178>
    1cc0:	28 01       	movw	r4, r16
    1cc2:	f2 e0       	ldi	r31, 0x02	; 2
    1cc4:	4f 0e       	add	r4, r31
    1cc6:	51 1c       	adc	r5, r1
    1cc8:	f8 01       	movw	r30, r16
    1cca:	a0 80       	ld	r10, Z
    1ccc:	b1 80       	ldd	r11, Z+1	; 0x01
    1cce:	36 fe       	sbrs	r3, 6
    1cd0:	03 c0       	rjmp	.+6      	; 0x1cd8 <vfprintf+0x16c>
    1cd2:	69 2d       	mov	r22, r9
    1cd4:	70 e0       	ldi	r23, 0x00	; 0
    1cd6:	02 c0       	rjmp	.+4      	; 0x1cdc <vfprintf+0x170>
    1cd8:	6f ef       	ldi	r22, 0xFF	; 255
    1cda:	7f ef       	ldi	r23, 0xFF	; 255
    1cdc:	c5 01       	movw	r24, r10
    1cde:	9c d3       	rcall	.+1848   	; 0x2418 <strnlen>
    1ce0:	4c 01       	movw	r8, r24
    1ce2:	82 01       	movw	r16, r4
    1ce4:	f3 2d       	mov	r31, r3
    1ce6:	ff 77       	andi	r31, 0x7F	; 127
    1ce8:	3f 2e       	mov	r3, r31
    1cea:	15 c0       	rjmp	.+42     	; 0x1d16 <vfprintf+0x1aa>
    1cec:	28 01       	movw	r4, r16
    1cee:	22 e0       	ldi	r18, 0x02	; 2
    1cf0:	42 0e       	add	r4, r18
    1cf2:	51 1c       	adc	r5, r1
    1cf4:	f8 01       	movw	r30, r16
    1cf6:	a0 80       	ld	r10, Z
    1cf8:	b1 80       	ldd	r11, Z+1	; 0x01
    1cfa:	36 fe       	sbrs	r3, 6
    1cfc:	03 c0       	rjmp	.+6      	; 0x1d04 <vfprintf+0x198>
    1cfe:	69 2d       	mov	r22, r9
    1d00:	70 e0       	ldi	r23, 0x00	; 0
    1d02:	02 c0       	rjmp	.+4      	; 0x1d08 <vfprintf+0x19c>
    1d04:	6f ef       	ldi	r22, 0xFF	; 255
    1d06:	7f ef       	ldi	r23, 0xFF	; 255
    1d08:	c5 01       	movw	r24, r10
    1d0a:	7b d3       	rcall	.+1782   	; 0x2402 <strnlen_P>
    1d0c:	4c 01       	movw	r8, r24
    1d0e:	f3 2d       	mov	r31, r3
    1d10:	f0 68       	ori	r31, 0x80	; 128
    1d12:	3f 2e       	mov	r3, r31
    1d14:	82 01       	movw	r16, r4
    1d16:	33 fc       	sbrc	r3, 3
    1d18:	19 c0       	rjmp	.+50     	; 0x1d4c <vfprintf+0x1e0>
    1d1a:	82 2d       	mov	r24, r2
    1d1c:	90 e0       	ldi	r25, 0x00	; 0
    1d1e:	88 16       	cp	r8, r24
    1d20:	99 06       	cpc	r9, r25
    1d22:	a0 f4       	brcc	.+40     	; 0x1d4c <vfprintf+0x1e0>
    1d24:	b6 01       	movw	r22, r12
    1d26:	80 e2       	ldi	r24, 0x20	; 32
    1d28:	90 e0       	ldi	r25, 0x00	; 0
    1d2a:	81 d3       	rcall	.+1794   	; 0x242e <fputc>
    1d2c:	2a 94       	dec	r2
    1d2e:	f5 cf       	rjmp	.-22     	; 0x1d1a <vfprintf+0x1ae>
    1d30:	f5 01       	movw	r30, r10
    1d32:	37 fc       	sbrc	r3, 7
    1d34:	85 91       	lpm	r24, Z+
    1d36:	37 fe       	sbrs	r3, 7
    1d38:	81 91       	ld	r24, Z+
    1d3a:	5f 01       	movw	r10, r30
    1d3c:	b6 01       	movw	r22, r12
    1d3e:	90 e0       	ldi	r25, 0x00	; 0
    1d40:	76 d3       	rcall	.+1772   	; 0x242e <fputc>
    1d42:	21 10       	cpse	r2, r1
    1d44:	2a 94       	dec	r2
    1d46:	21 e0       	ldi	r18, 0x01	; 1
    1d48:	82 1a       	sub	r8, r18
    1d4a:	91 08       	sbc	r9, r1
    1d4c:	81 14       	cp	r8, r1
    1d4e:	91 04       	cpc	r9, r1
    1d50:	79 f7       	brne	.-34     	; 0x1d30 <vfprintf+0x1c4>
    1d52:	e1 c0       	rjmp	.+450    	; 0x1f16 <vfprintf+0x3aa>
    1d54:	84 36       	cpi	r24, 0x64	; 100
    1d56:	11 f0       	breq	.+4      	; 0x1d5c <vfprintf+0x1f0>
    1d58:	89 36       	cpi	r24, 0x69	; 105
    1d5a:	39 f5       	brne	.+78     	; 0x1daa <vfprintf+0x23e>
    1d5c:	f8 01       	movw	r30, r16
    1d5e:	37 fe       	sbrs	r3, 7
    1d60:	07 c0       	rjmp	.+14     	; 0x1d70 <vfprintf+0x204>
    1d62:	60 81       	ld	r22, Z
    1d64:	71 81       	ldd	r23, Z+1	; 0x01
    1d66:	82 81       	ldd	r24, Z+2	; 0x02
    1d68:	93 81       	ldd	r25, Z+3	; 0x03
    1d6a:	0c 5f       	subi	r16, 0xFC	; 252
    1d6c:	1f 4f       	sbci	r17, 0xFF	; 255
    1d6e:	08 c0       	rjmp	.+16     	; 0x1d80 <vfprintf+0x214>
    1d70:	60 81       	ld	r22, Z
    1d72:	71 81       	ldd	r23, Z+1	; 0x01
    1d74:	07 2e       	mov	r0, r23
    1d76:	00 0c       	add	r0, r0
    1d78:	88 0b       	sbc	r24, r24
    1d7a:	99 0b       	sbc	r25, r25
    1d7c:	0e 5f       	subi	r16, 0xFE	; 254
    1d7e:	1f 4f       	sbci	r17, 0xFF	; 255
    1d80:	f3 2d       	mov	r31, r3
    1d82:	ff 76       	andi	r31, 0x6F	; 111
    1d84:	3f 2e       	mov	r3, r31
    1d86:	97 ff       	sbrs	r25, 7
    1d88:	09 c0       	rjmp	.+18     	; 0x1d9c <vfprintf+0x230>
    1d8a:	90 95       	com	r25
    1d8c:	80 95       	com	r24
    1d8e:	70 95       	com	r23
    1d90:	61 95       	neg	r22
    1d92:	7f 4f       	sbci	r23, 0xFF	; 255
    1d94:	8f 4f       	sbci	r24, 0xFF	; 255
    1d96:	9f 4f       	sbci	r25, 0xFF	; 255
    1d98:	f0 68       	ori	r31, 0x80	; 128
    1d9a:	3f 2e       	mov	r3, r31
    1d9c:	2a e0       	ldi	r18, 0x0A	; 10
    1d9e:	30 e0       	ldi	r19, 0x00	; 0
    1da0:	a3 01       	movw	r20, r6
    1da2:	81 d3       	rcall	.+1794   	; 0x24a6 <__ultoa_invert>
    1da4:	88 2e       	mov	r8, r24
    1da6:	86 18       	sub	r8, r6
    1da8:	44 c0       	rjmp	.+136    	; 0x1e32 <vfprintf+0x2c6>
    1daa:	85 37       	cpi	r24, 0x75	; 117
    1dac:	31 f4       	brne	.+12     	; 0x1dba <vfprintf+0x24e>
    1dae:	23 2d       	mov	r18, r3
    1db0:	2f 7e       	andi	r18, 0xEF	; 239
    1db2:	b2 2e       	mov	r11, r18
    1db4:	2a e0       	ldi	r18, 0x0A	; 10
    1db6:	30 e0       	ldi	r19, 0x00	; 0
    1db8:	25 c0       	rjmp	.+74     	; 0x1e04 <vfprintf+0x298>
    1dba:	93 2d       	mov	r25, r3
    1dbc:	99 7f       	andi	r25, 0xF9	; 249
    1dbe:	b9 2e       	mov	r11, r25
    1dc0:	8f 36       	cpi	r24, 0x6F	; 111
    1dc2:	c1 f0       	breq	.+48     	; 0x1df4 <vfprintf+0x288>
    1dc4:	18 f4       	brcc	.+6      	; 0x1dcc <vfprintf+0x260>
    1dc6:	88 35       	cpi	r24, 0x58	; 88
    1dc8:	79 f0       	breq	.+30     	; 0x1de8 <vfprintf+0x27c>
    1dca:	ae c0       	rjmp	.+348    	; 0x1f28 <vfprintf+0x3bc>
    1dcc:	80 37       	cpi	r24, 0x70	; 112
    1dce:	19 f0       	breq	.+6      	; 0x1dd6 <vfprintf+0x26a>
    1dd0:	88 37       	cpi	r24, 0x78	; 120
    1dd2:	21 f0       	breq	.+8      	; 0x1ddc <vfprintf+0x270>
    1dd4:	a9 c0       	rjmp	.+338    	; 0x1f28 <vfprintf+0x3bc>
    1dd6:	e9 2f       	mov	r30, r25
    1dd8:	e0 61       	ori	r30, 0x10	; 16
    1dda:	be 2e       	mov	r11, r30
    1ddc:	b4 fe       	sbrs	r11, 4
    1dde:	0d c0       	rjmp	.+26     	; 0x1dfa <vfprintf+0x28e>
    1de0:	fb 2d       	mov	r31, r11
    1de2:	f4 60       	ori	r31, 0x04	; 4
    1de4:	bf 2e       	mov	r11, r31
    1de6:	09 c0       	rjmp	.+18     	; 0x1dfa <vfprintf+0x28e>
    1de8:	34 fe       	sbrs	r3, 4
    1dea:	0a c0       	rjmp	.+20     	; 0x1e00 <vfprintf+0x294>
    1dec:	29 2f       	mov	r18, r25
    1dee:	26 60       	ori	r18, 0x06	; 6
    1df0:	b2 2e       	mov	r11, r18
    1df2:	06 c0       	rjmp	.+12     	; 0x1e00 <vfprintf+0x294>
    1df4:	28 e0       	ldi	r18, 0x08	; 8
    1df6:	30 e0       	ldi	r19, 0x00	; 0
    1df8:	05 c0       	rjmp	.+10     	; 0x1e04 <vfprintf+0x298>
    1dfa:	20 e1       	ldi	r18, 0x10	; 16
    1dfc:	30 e0       	ldi	r19, 0x00	; 0
    1dfe:	02 c0       	rjmp	.+4      	; 0x1e04 <vfprintf+0x298>
    1e00:	20 e1       	ldi	r18, 0x10	; 16
    1e02:	32 e0       	ldi	r19, 0x02	; 2
    1e04:	f8 01       	movw	r30, r16
    1e06:	b7 fe       	sbrs	r11, 7
    1e08:	07 c0       	rjmp	.+14     	; 0x1e18 <vfprintf+0x2ac>
    1e0a:	60 81       	ld	r22, Z
    1e0c:	71 81       	ldd	r23, Z+1	; 0x01
    1e0e:	82 81       	ldd	r24, Z+2	; 0x02
    1e10:	93 81       	ldd	r25, Z+3	; 0x03
    1e12:	0c 5f       	subi	r16, 0xFC	; 252
    1e14:	1f 4f       	sbci	r17, 0xFF	; 255
    1e16:	06 c0       	rjmp	.+12     	; 0x1e24 <vfprintf+0x2b8>
    1e18:	60 81       	ld	r22, Z
    1e1a:	71 81       	ldd	r23, Z+1	; 0x01
    1e1c:	80 e0       	ldi	r24, 0x00	; 0
    1e1e:	90 e0       	ldi	r25, 0x00	; 0
    1e20:	0e 5f       	subi	r16, 0xFE	; 254
    1e22:	1f 4f       	sbci	r17, 0xFF	; 255
    1e24:	a3 01       	movw	r20, r6
    1e26:	3f d3       	rcall	.+1662   	; 0x24a6 <__ultoa_invert>
    1e28:	88 2e       	mov	r8, r24
    1e2a:	86 18       	sub	r8, r6
    1e2c:	fb 2d       	mov	r31, r11
    1e2e:	ff 77       	andi	r31, 0x7F	; 127
    1e30:	3f 2e       	mov	r3, r31
    1e32:	36 fe       	sbrs	r3, 6
    1e34:	0d c0       	rjmp	.+26     	; 0x1e50 <vfprintf+0x2e4>
    1e36:	23 2d       	mov	r18, r3
    1e38:	2e 7f       	andi	r18, 0xFE	; 254
    1e3a:	a2 2e       	mov	r10, r18
    1e3c:	89 14       	cp	r8, r9
    1e3e:	58 f4       	brcc	.+22     	; 0x1e56 <vfprintf+0x2ea>
    1e40:	34 fe       	sbrs	r3, 4
    1e42:	0b c0       	rjmp	.+22     	; 0x1e5a <vfprintf+0x2ee>
    1e44:	32 fc       	sbrc	r3, 2
    1e46:	09 c0       	rjmp	.+18     	; 0x1e5a <vfprintf+0x2ee>
    1e48:	83 2d       	mov	r24, r3
    1e4a:	8e 7e       	andi	r24, 0xEE	; 238
    1e4c:	a8 2e       	mov	r10, r24
    1e4e:	05 c0       	rjmp	.+10     	; 0x1e5a <vfprintf+0x2ee>
    1e50:	b8 2c       	mov	r11, r8
    1e52:	a3 2c       	mov	r10, r3
    1e54:	03 c0       	rjmp	.+6      	; 0x1e5c <vfprintf+0x2f0>
    1e56:	b8 2c       	mov	r11, r8
    1e58:	01 c0       	rjmp	.+2      	; 0x1e5c <vfprintf+0x2f0>
    1e5a:	b9 2c       	mov	r11, r9
    1e5c:	a4 fe       	sbrs	r10, 4
    1e5e:	0f c0       	rjmp	.+30     	; 0x1e7e <vfprintf+0x312>
    1e60:	fe 01       	movw	r30, r28
    1e62:	e8 0d       	add	r30, r8
    1e64:	f1 1d       	adc	r31, r1
    1e66:	80 81       	ld	r24, Z
    1e68:	80 33       	cpi	r24, 0x30	; 48
    1e6a:	21 f4       	brne	.+8      	; 0x1e74 <vfprintf+0x308>
    1e6c:	9a 2d       	mov	r25, r10
    1e6e:	99 7e       	andi	r25, 0xE9	; 233
    1e70:	a9 2e       	mov	r10, r25
    1e72:	09 c0       	rjmp	.+18     	; 0x1e86 <vfprintf+0x31a>
    1e74:	a2 fe       	sbrs	r10, 2
    1e76:	06 c0       	rjmp	.+12     	; 0x1e84 <vfprintf+0x318>
    1e78:	b3 94       	inc	r11
    1e7a:	b3 94       	inc	r11
    1e7c:	04 c0       	rjmp	.+8      	; 0x1e86 <vfprintf+0x31a>
    1e7e:	8a 2d       	mov	r24, r10
    1e80:	86 78       	andi	r24, 0x86	; 134
    1e82:	09 f0       	breq	.+2      	; 0x1e86 <vfprintf+0x31a>
    1e84:	b3 94       	inc	r11
    1e86:	a3 fc       	sbrc	r10, 3
    1e88:	10 c0       	rjmp	.+32     	; 0x1eaa <vfprintf+0x33e>
    1e8a:	a0 fe       	sbrs	r10, 0
    1e8c:	06 c0       	rjmp	.+12     	; 0x1e9a <vfprintf+0x32e>
    1e8e:	b2 14       	cp	r11, r2
    1e90:	80 f4       	brcc	.+32     	; 0x1eb2 <vfprintf+0x346>
    1e92:	28 0c       	add	r2, r8
    1e94:	92 2c       	mov	r9, r2
    1e96:	9b 18       	sub	r9, r11
    1e98:	0d c0       	rjmp	.+26     	; 0x1eb4 <vfprintf+0x348>
    1e9a:	b2 14       	cp	r11, r2
    1e9c:	58 f4       	brcc	.+22     	; 0x1eb4 <vfprintf+0x348>
    1e9e:	b6 01       	movw	r22, r12
    1ea0:	80 e2       	ldi	r24, 0x20	; 32
    1ea2:	90 e0       	ldi	r25, 0x00	; 0
    1ea4:	c4 d2       	rcall	.+1416   	; 0x242e <fputc>
    1ea6:	b3 94       	inc	r11
    1ea8:	f8 cf       	rjmp	.-16     	; 0x1e9a <vfprintf+0x32e>
    1eaa:	b2 14       	cp	r11, r2
    1eac:	18 f4       	brcc	.+6      	; 0x1eb4 <vfprintf+0x348>
    1eae:	2b 18       	sub	r2, r11
    1eb0:	02 c0       	rjmp	.+4      	; 0x1eb6 <vfprintf+0x34a>
    1eb2:	98 2c       	mov	r9, r8
    1eb4:	21 2c       	mov	r2, r1
    1eb6:	a4 fe       	sbrs	r10, 4
    1eb8:	0f c0       	rjmp	.+30     	; 0x1ed8 <vfprintf+0x36c>
    1eba:	b6 01       	movw	r22, r12
    1ebc:	80 e3       	ldi	r24, 0x30	; 48
    1ebe:	90 e0       	ldi	r25, 0x00	; 0
    1ec0:	b6 d2       	rcall	.+1388   	; 0x242e <fputc>
    1ec2:	a2 fe       	sbrs	r10, 2
    1ec4:	16 c0       	rjmp	.+44     	; 0x1ef2 <vfprintf+0x386>
    1ec6:	a1 fc       	sbrc	r10, 1
    1ec8:	03 c0       	rjmp	.+6      	; 0x1ed0 <vfprintf+0x364>
    1eca:	88 e7       	ldi	r24, 0x78	; 120
    1ecc:	90 e0       	ldi	r25, 0x00	; 0
    1ece:	02 c0       	rjmp	.+4      	; 0x1ed4 <vfprintf+0x368>
    1ed0:	88 e5       	ldi	r24, 0x58	; 88
    1ed2:	90 e0       	ldi	r25, 0x00	; 0
    1ed4:	b6 01       	movw	r22, r12
    1ed6:	0c c0       	rjmp	.+24     	; 0x1ef0 <vfprintf+0x384>
    1ed8:	8a 2d       	mov	r24, r10
    1eda:	86 78       	andi	r24, 0x86	; 134
    1edc:	51 f0       	breq	.+20     	; 0x1ef2 <vfprintf+0x386>
    1ede:	a1 fe       	sbrs	r10, 1
    1ee0:	02 c0       	rjmp	.+4      	; 0x1ee6 <vfprintf+0x37a>
    1ee2:	8b e2       	ldi	r24, 0x2B	; 43
    1ee4:	01 c0       	rjmp	.+2      	; 0x1ee8 <vfprintf+0x37c>
    1ee6:	80 e2       	ldi	r24, 0x20	; 32
    1ee8:	a7 fc       	sbrc	r10, 7
    1eea:	8d e2       	ldi	r24, 0x2D	; 45
    1eec:	b6 01       	movw	r22, r12
    1eee:	90 e0       	ldi	r25, 0x00	; 0
    1ef0:	9e d2       	rcall	.+1340   	; 0x242e <fputc>
    1ef2:	89 14       	cp	r8, r9
    1ef4:	30 f4       	brcc	.+12     	; 0x1f02 <vfprintf+0x396>
    1ef6:	b6 01       	movw	r22, r12
    1ef8:	80 e3       	ldi	r24, 0x30	; 48
    1efa:	90 e0       	ldi	r25, 0x00	; 0
    1efc:	98 d2       	rcall	.+1328   	; 0x242e <fputc>
    1efe:	9a 94       	dec	r9
    1f00:	f8 cf       	rjmp	.-16     	; 0x1ef2 <vfprintf+0x386>
    1f02:	8a 94       	dec	r8
    1f04:	f3 01       	movw	r30, r6
    1f06:	e8 0d       	add	r30, r8
    1f08:	f1 1d       	adc	r31, r1
    1f0a:	80 81       	ld	r24, Z
    1f0c:	b6 01       	movw	r22, r12
    1f0e:	90 e0       	ldi	r25, 0x00	; 0
    1f10:	8e d2       	rcall	.+1308   	; 0x242e <fputc>
    1f12:	81 10       	cpse	r8, r1
    1f14:	f6 cf       	rjmp	.-20     	; 0x1f02 <vfprintf+0x396>
    1f16:	22 20       	and	r2, r2
    1f18:	09 f4       	brne	.+2      	; 0x1f1c <vfprintf+0x3b0>
    1f1a:	4e ce       	rjmp	.-868    	; 0x1bb8 <vfprintf+0x4c>
    1f1c:	b6 01       	movw	r22, r12
    1f1e:	80 e2       	ldi	r24, 0x20	; 32
    1f20:	90 e0       	ldi	r25, 0x00	; 0
    1f22:	85 d2       	rcall	.+1290   	; 0x242e <fputc>
    1f24:	2a 94       	dec	r2
    1f26:	f7 cf       	rjmp	.-18     	; 0x1f16 <vfprintf+0x3aa>
    1f28:	f6 01       	movw	r30, r12
    1f2a:	86 81       	ldd	r24, Z+6	; 0x06
    1f2c:	97 81       	ldd	r25, Z+7	; 0x07
    1f2e:	02 c0       	rjmp	.+4      	; 0x1f34 <vfprintf+0x3c8>
    1f30:	8f ef       	ldi	r24, 0xFF	; 255
    1f32:	9f ef       	ldi	r25, 0xFF	; 255
    1f34:	2b 96       	adiw	r28, 0x0b	; 11
    1f36:	0f b6       	in	r0, 0x3f	; 63
    1f38:	f8 94       	cli
    1f3a:	de bf       	out	0x3e, r29	; 62
    1f3c:	0f be       	out	0x3f, r0	; 63
    1f3e:	cd bf       	out	0x3d, r28	; 61
    1f40:	df 91       	pop	r29
    1f42:	cf 91       	pop	r28
    1f44:	1f 91       	pop	r17
    1f46:	0f 91       	pop	r16
    1f48:	ff 90       	pop	r15
    1f4a:	ef 90       	pop	r14
    1f4c:	df 90       	pop	r13
    1f4e:	cf 90       	pop	r12
    1f50:	bf 90       	pop	r11
    1f52:	af 90       	pop	r10
    1f54:	9f 90       	pop	r9
    1f56:	8f 90       	pop	r8
    1f58:	7f 90       	pop	r7
    1f5a:	6f 90       	pop	r6
    1f5c:	5f 90       	pop	r5
    1f5e:	4f 90       	pop	r4
    1f60:	3f 90       	pop	r3
    1f62:	2f 90       	pop	r2
    1f64:	08 95       	ret

00001f66 <dtoa_prf>:
    1f66:	8f 92       	push	r8
    1f68:	9f 92       	push	r9
    1f6a:	af 92       	push	r10
    1f6c:	bf 92       	push	r11
    1f6e:	cf 92       	push	r12
    1f70:	df 92       	push	r13
    1f72:	ef 92       	push	r14
    1f74:	ff 92       	push	r15
    1f76:	0f 93       	push	r16
    1f78:	1f 93       	push	r17
    1f7a:	cf 93       	push	r28
    1f7c:	df 93       	push	r29
    1f7e:	cd b7       	in	r28, 0x3d	; 61
    1f80:	de b7       	in	r29, 0x3e	; 62
    1f82:	29 97       	sbiw	r28, 0x09	; 9
    1f84:	0f b6       	in	r0, 0x3f	; 63
    1f86:	f8 94       	cli
    1f88:	de bf       	out	0x3e, r29	; 62
    1f8a:	0f be       	out	0x3f, r0	; 63
    1f8c:	cd bf       	out	0x3d, r28	; 61
    1f8e:	6a 01       	movw	r12, r20
    1f90:	12 2f       	mov	r17, r18
    1f92:	b0 2e       	mov	r11, r16
    1f94:	2b e3       	ldi	r18, 0x3B	; 59
    1f96:	20 17       	cp	r18, r16
    1f98:	20 f0       	brcs	.+8      	; 0x1fa2 <dtoa_prf+0x3c>
    1f9a:	ff 24       	eor	r15, r15
    1f9c:	f3 94       	inc	r15
    1f9e:	f0 0e       	add	r15, r16
    1fa0:	02 c0       	rjmp	.+4      	; 0x1fa6 <dtoa_prf+0x40>
    1fa2:	2c e3       	ldi	r18, 0x3C	; 60
    1fa4:	f2 2e       	mov	r15, r18
    1fa6:	0f 2d       	mov	r16, r15
    1fa8:	27 e0       	ldi	r18, 0x07	; 7
    1faa:	ae 01       	movw	r20, r28
    1fac:	4f 5f       	subi	r20, 0xFF	; 255
    1fae:	5f 4f       	sbci	r21, 0xFF	; 255
    1fb0:	50 d1       	rcall	.+672    	; 0x2252 <__ftoa_engine>
    1fb2:	bc 01       	movw	r22, r24
    1fb4:	49 81       	ldd	r20, Y+1	; 0x01
    1fb6:	84 2f       	mov	r24, r20
    1fb8:	89 70       	andi	r24, 0x09	; 9
    1fba:	81 30       	cpi	r24, 0x01	; 1
    1fbc:	31 f0       	breq	.+12     	; 0x1fca <dtoa_prf+0x64>
    1fbe:	e1 fc       	sbrc	r14, 1
    1fc0:	06 c0       	rjmp	.+12     	; 0x1fce <dtoa_prf+0x68>
    1fc2:	e0 fe       	sbrs	r14, 0
    1fc4:	06 c0       	rjmp	.+12     	; 0x1fd2 <dtoa_prf+0x6c>
    1fc6:	90 e2       	ldi	r25, 0x20	; 32
    1fc8:	05 c0       	rjmp	.+10     	; 0x1fd4 <dtoa_prf+0x6e>
    1fca:	9d e2       	ldi	r25, 0x2D	; 45
    1fcc:	03 c0       	rjmp	.+6      	; 0x1fd4 <dtoa_prf+0x6e>
    1fce:	9b e2       	ldi	r25, 0x2B	; 43
    1fd0:	01 c0       	rjmp	.+2      	; 0x1fd4 <dtoa_prf+0x6e>
    1fd2:	90 e0       	ldi	r25, 0x00	; 0
    1fd4:	5e 2d       	mov	r21, r14
    1fd6:	50 71       	andi	r21, 0x10	; 16
    1fd8:	43 ff       	sbrs	r20, 3
    1fda:	3c c0       	rjmp	.+120    	; 0x2054 <dtoa_prf+0xee>
    1fdc:	91 11       	cpse	r25, r1
    1fde:	02 c0       	rjmp	.+4      	; 0x1fe4 <dtoa_prf+0x7e>
    1fe0:	83 e0       	ldi	r24, 0x03	; 3
    1fe2:	01 c0       	rjmp	.+2      	; 0x1fe6 <dtoa_prf+0x80>
    1fe4:	84 e0       	ldi	r24, 0x04	; 4
    1fe6:	81 17       	cp	r24, r17
    1fe8:	18 f4       	brcc	.+6      	; 0x1ff0 <dtoa_prf+0x8a>
    1fea:	21 2f       	mov	r18, r17
    1fec:	28 1b       	sub	r18, r24
    1fee:	01 c0       	rjmp	.+2      	; 0x1ff2 <dtoa_prf+0x8c>
    1ff0:	20 e0       	ldi	r18, 0x00	; 0
    1ff2:	51 11       	cpse	r21, r1
    1ff4:	0b c0       	rjmp	.+22     	; 0x200c <dtoa_prf+0xa6>
    1ff6:	f6 01       	movw	r30, r12
    1ff8:	82 2f       	mov	r24, r18
    1ffa:	30 e2       	ldi	r19, 0x20	; 32
    1ffc:	88 23       	and	r24, r24
    1ffe:	19 f0       	breq	.+6      	; 0x2006 <dtoa_prf+0xa0>
    2000:	31 93       	st	Z+, r19
    2002:	81 50       	subi	r24, 0x01	; 1
    2004:	fb cf       	rjmp	.-10     	; 0x1ffc <dtoa_prf+0x96>
    2006:	c2 0e       	add	r12, r18
    2008:	d1 1c       	adc	r13, r1
    200a:	20 e0       	ldi	r18, 0x00	; 0
    200c:	99 23       	and	r25, r25
    200e:	29 f0       	breq	.+10     	; 0x201a <dtoa_prf+0xb4>
    2010:	d6 01       	movw	r26, r12
    2012:	9c 93       	st	X, r25
    2014:	f6 01       	movw	r30, r12
    2016:	31 96       	adiw	r30, 0x01	; 1
    2018:	6f 01       	movw	r12, r30
    201a:	c6 01       	movw	r24, r12
    201c:	03 96       	adiw	r24, 0x03	; 3
    201e:	e2 fe       	sbrs	r14, 2
    2020:	0a c0       	rjmp	.+20     	; 0x2036 <dtoa_prf+0xd0>
    2022:	3e e4       	ldi	r19, 0x4E	; 78
    2024:	d6 01       	movw	r26, r12
    2026:	3c 93       	st	X, r19
    2028:	41 e4       	ldi	r20, 0x41	; 65
    202a:	11 96       	adiw	r26, 0x01	; 1
    202c:	4c 93       	st	X, r20
    202e:	11 97       	sbiw	r26, 0x01	; 1
    2030:	12 96       	adiw	r26, 0x02	; 2
    2032:	3c 93       	st	X, r19
    2034:	06 c0       	rjmp	.+12     	; 0x2042 <dtoa_prf+0xdc>
    2036:	3e e6       	ldi	r19, 0x6E	; 110
    2038:	f6 01       	movw	r30, r12
    203a:	30 83       	st	Z, r19
    203c:	41 e6       	ldi	r20, 0x61	; 97
    203e:	41 83       	std	Z+1, r20	; 0x01
    2040:	32 83       	std	Z+2, r19	; 0x02
    2042:	fc 01       	movw	r30, r24
    2044:	32 2f       	mov	r19, r18
    2046:	40 e2       	ldi	r20, 0x20	; 32
    2048:	33 23       	and	r19, r19
    204a:	09 f4       	brne	.+2      	; 0x204e <dtoa_prf+0xe8>
    204c:	42 c0       	rjmp	.+132    	; 0x20d2 <dtoa_prf+0x16c>
    204e:	41 93       	st	Z+, r20
    2050:	31 50       	subi	r19, 0x01	; 1
    2052:	fa cf       	rjmp	.-12     	; 0x2048 <dtoa_prf+0xe2>
    2054:	42 ff       	sbrs	r20, 2
    2056:	44 c0       	rjmp	.+136    	; 0x20e0 <dtoa_prf+0x17a>
    2058:	91 11       	cpse	r25, r1
    205a:	02 c0       	rjmp	.+4      	; 0x2060 <dtoa_prf+0xfa>
    205c:	83 e0       	ldi	r24, 0x03	; 3
    205e:	01 c0       	rjmp	.+2      	; 0x2062 <dtoa_prf+0xfc>
    2060:	84 e0       	ldi	r24, 0x04	; 4
    2062:	81 17       	cp	r24, r17
    2064:	18 f4       	brcc	.+6      	; 0x206c <dtoa_prf+0x106>
    2066:	21 2f       	mov	r18, r17
    2068:	28 1b       	sub	r18, r24
    206a:	01 c0       	rjmp	.+2      	; 0x206e <dtoa_prf+0x108>
    206c:	20 e0       	ldi	r18, 0x00	; 0
    206e:	51 11       	cpse	r21, r1
    2070:	0b c0       	rjmp	.+22     	; 0x2088 <dtoa_prf+0x122>
    2072:	f6 01       	movw	r30, r12
    2074:	82 2f       	mov	r24, r18
    2076:	30 e2       	ldi	r19, 0x20	; 32
    2078:	88 23       	and	r24, r24
    207a:	19 f0       	breq	.+6      	; 0x2082 <dtoa_prf+0x11c>
    207c:	31 93       	st	Z+, r19
    207e:	81 50       	subi	r24, 0x01	; 1
    2080:	fb cf       	rjmp	.-10     	; 0x2078 <dtoa_prf+0x112>
    2082:	c2 0e       	add	r12, r18
    2084:	d1 1c       	adc	r13, r1
    2086:	20 e0       	ldi	r18, 0x00	; 0
    2088:	99 23       	and	r25, r25
    208a:	29 f0       	breq	.+10     	; 0x2096 <dtoa_prf+0x130>
    208c:	d6 01       	movw	r26, r12
    208e:	9c 93       	st	X, r25
    2090:	f6 01       	movw	r30, r12
    2092:	31 96       	adiw	r30, 0x01	; 1
    2094:	6f 01       	movw	r12, r30
    2096:	c6 01       	movw	r24, r12
    2098:	03 96       	adiw	r24, 0x03	; 3
    209a:	e2 fe       	sbrs	r14, 2
    209c:	0b c0       	rjmp	.+22     	; 0x20b4 <dtoa_prf+0x14e>
    209e:	39 e4       	ldi	r19, 0x49	; 73
    20a0:	d6 01       	movw	r26, r12
    20a2:	3c 93       	st	X, r19
    20a4:	3e e4       	ldi	r19, 0x4E	; 78
    20a6:	11 96       	adiw	r26, 0x01	; 1
    20a8:	3c 93       	st	X, r19
    20aa:	11 97       	sbiw	r26, 0x01	; 1
    20ac:	36 e4       	ldi	r19, 0x46	; 70
    20ae:	12 96       	adiw	r26, 0x02	; 2
    20b0:	3c 93       	st	X, r19
    20b2:	07 c0       	rjmp	.+14     	; 0x20c2 <dtoa_prf+0x15c>
    20b4:	39 e6       	ldi	r19, 0x69	; 105
    20b6:	f6 01       	movw	r30, r12
    20b8:	30 83       	st	Z, r19
    20ba:	3e e6       	ldi	r19, 0x6E	; 110
    20bc:	31 83       	std	Z+1, r19	; 0x01
    20be:	36 e6       	ldi	r19, 0x66	; 102
    20c0:	32 83       	std	Z+2, r19	; 0x02
    20c2:	fc 01       	movw	r30, r24
    20c4:	32 2f       	mov	r19, r18
    20c6:	40 e2       	ldi	r20, 0x20	; 32
    20c8:	33 23       	and	r19, r19
    20ca:	19 f0       	breq	.+6      	; 0x20d2 <dtoa_prf+0x16c>
    20cc:	41 93       	st	Z+, r20
    20ce:	31 50       	subi	r19, 0x01	; 1
    20d0:	fb cf       	rjmp	.-10     	; 0x20c8 <dtoa_prf+0x162>
    20d2:	fc 01       	movw	r30, r24
    20d4:	e2 0f       	add	r30, r18
    20d6:	f1 1d       	adc	r31, r1
    20d8:	10 82       	st	Z, r1
    20da:	8e ef       	ldi	r24, 0xFE	; 254
    20dc:	9f ef       	ldi	r25, 0xFF	; 255
    20de:	a6 c0       	rjmp	.+332    	; 0x222c <__stack+0x2d>
    20e0:	21 e0       	ldi	r18, 0x01	; 1
    20e2:	30 e0       	ldi	r19, 0x00	; 0
    20e4:	91 11       	cpse	r25, r1
    20e6:	02 c0       	rjmp	.+4      	; 0x20ec <dtoa_prf+0x186>
    20e8:	20 e0       	ldi	r18, 0x00	; 0
    20ea:	30 e0       	ldi	r19, 0x00	; 0
    20ec:	16 16       	cp	r1, r22
    20ee:	17 06       	cpc	r1, r23
    20f0:	1c f4       	brge	.+6      	; 0x20f8 <dtoa_prf+0x192>
    20f2:	fb 01       	movw	r30, r22
    20f4:	31 96       	adiw	r30, 0x01	; 1
    20f6:	02 c0       	rjmp	.+4      	; 0x20fc <dtoa_prf+0x196>
    20f8:	e1 e0       	ldi	r30, 0x01	; 1
    20fa:	f0 e0       	ldi	r31, 0x00	; 0
    20fc:	2e 0f       	add	r18, r30
    20fe:	3f 1f       	adc	r19, r31
    2100:	bb 20       	and	r11, r11
    2102:	21 f0       	breq	.+8      	; 0x210c <dtoa_prf+0x1a6>
    2104:	eb 2d       	mov	r30, r11
    2106:	f0 e0       	ldi	r31, 0x00	; 0
    2108:	31 96       	adiw	r30, 0x01	; 1
    210a:	02 c0       	rjmp	.+4      	; 0x2110 <dtoa_prf+0x1aa>
    210c:	e0 e0       	ldi	r30, 0x00	; 0
    210e:	f0 e0       	ldi	r31, 0x00	; 0
    2110:	2e 0f       	add	r18, r30
    2112:	3f 1f       	adc	r19, r31
    2114:	e1 2f       	mov	r30, r17
    2116:	f0 e0       	ldi	r31, 0x00	; 0
    2118:	2e 17       	cp	r18, r30
    211a:	3f 07       	cpc	r19, r31
    211c:	1c f4       	brge	.+6      	; 0x2124 <dtoa_prf+0x1be>
    211e:	12 1b       	sub	r17, r18
    2120:	21 2f       	mov	r18, r17
    2122:	01 c0       	rjmp	.+2      	; 0x2126 <dtoa_prf+0x1c0>
    2124:	20 e0       	ldi	r18, 0x00	; 0
    2126:	8e 2d       	mov	r24, r14
    2128:	88 71       	andi	r24, 0x18	; 24
    212a:	59 f4       	brne	.+22     	; 0x2142 <dtoa_prf+0x1dc>
    212c:	f6 01       	movw	r30, r12
    212e:	82 2f       	mov	r24, r18
    2130:	30 e2       	ldi	r19, 0x20	; 32
    2132:	88 23       	and	r24, r24
    2134:	19 f0       	breq	.+6      	; 0x213c <dtoa_prf+0x1d6>
    2136:	31 93       	st	Z+, r19
    2138:	81 50       	subi	r24, 0x01	; 1
    213a:	fb cf       	rjmp	.-10     	; 0x2132 <dtoa_prf+0x1cc>
    213c:	c2 0e       	add	r12, r18
    213e:	d1 1c       	adc	r13, r1
    2140:	20 e0       	ldi	r18, 0x00	; 0
    2142:	99 23       	and	r25, r25
    2144:	29 f0       	breq	.+10     	; 0x2150 <dtoa_prf+0x1ea>
    2146:	d6 01       	movw	r26, r12
    2148:	9c 93       	st	X, r25
    214a:	f6 01       	movw	r30, r12
    214c:	31 96       	adiw	r30, 0x01	; 1
    214e:	6f 01       	movw	r12, r30
    2150:	51 11       	cpse	r21, r1
    2152:	0b c0       	rjmp	.+22     	; 0x216a <dtoa_prf+0x204>
    2154:	f6 01       	movw	r30, r12
    2156:	82 2f       	mov	r24, r18
    2158:	90 e3       	ldi	r25, 0x30	; 48
    215a:	88 23       	and	r24, r24
    215c:	19 f0       	breq	.+6      	; 0x2164 <dtoa_prf+0x1fe>
    215e:	91 93       	st	Z+, r25
    2160:	81 50       	subi	r24, 0x01	; 1
    2162:	fb cf       	rjmp	.-10     	; 0x215a <dtoa_prf+0x1f4>
    2164:	c2 0e       	add	r12, r18
    2166:	d1 1c       	adc	r13, r1
    2168:	20 e0       	ldi	r18, 0x00	; 0
    216a:	0f 2d       	mov	r16, r15
    216c:	06 0f       	add	r16, r22
    216e:	9a 81       	ldd	r25, Y+2	; 0x02
    2170:	34 2f       	mov	r19, r20
    2172:	30 71       	andi	r19, 0x10	; 16
    2174:	44 ff       	sbrs	r20, 4
    2176:	03 c0       	rjmp	.+6      	; 0x217e <dtoa_prf+0x218>
    2178:	91 33       	cpi	r25, 0x31	; 49
    217a:	09 f4       	brne	.+2      	; 0x217e <dtoa_prf+0x218>
    217c:	01 50       	subi	r16, 0x01	; 1
    217e:	10 16       	cp	r1, r16
    2180:	24 f4       	brge	.+8      	; 0x218a <dtoa_prf+0x224>
    2182:	09 30       	cpi	r16, 0x09	; 9
    2184:	18 f0       	brcs	.+6      	; 0x218c <dtoa_prf+0x226>
    2186:	08 e0       	ldi	r16, 0x08	; 8
    2188:	01 c0       	rjmp	.+2      	; 0x218c <dtoa_prf+0x226>
    218a:	01 e0       	ldi	r16, 0x01	; 1
    218c:	ab 01       	movw	r20, r22
    218e:	77 ff       	sbrs	r23, 7
    2190:	02 c0       	rjmp	.+4      	; 0x2196 <dtoa_prf+0x230>
    2192:	40 e0       	ldi	r20, 0x00	; 0
    2194:	50 e0       	ldi	r21, 0x00	; 0
    2196:	fb 01       	movw	r30, r22
    2198:	e4 1b       	sub	r30, r20
    219a:	f5 0b       	sbc	r31, r21
    219c:	a1 e0       	ldi	r26, 0x01	; 1
    219e:	b0 e0       	ldi	r27, 0x00	; 0
    21a0:	ac 0f       	add	r26, r28
    21a2:	bd 1f       	adc	r27, r29
    21a4:	ea 0f       	add	r30, r26
    21a6:	fb 1f       	adc	r31, r27
    21a8:	8e e2       	ldi	r24, 0x2E	; 46
    21aa:	a8 2e       	mov	r10, r24
    21ac:	4b 01       	movw	r8, r22
    21ae:	80 1a       	sub	r8, r16
    21b0:	91 08       	sbc	r9, r1
    21b2:	0b 2d       	mov	r16, r11
    21b4:	10 e0       	ldi	r17, 0x00	; 0
    21b6:	11 95       	neg	r17
    21b8:	01 95       	neg	r16
    21ba:	11 09       	sbc	r17, r1
    21bc:	4f 3f       	cpi	r20, 0xFF	; 255
    21be:	bf ef       	ldi	r27, 0xFF	; 255
    21c0:	5b 07       	cpc	r21, r27
    21c2:	21 f4       	brne	.+8      	; 0x21cc <dtoa_prf+0x266>
    21c4:	d6 01       	movw	r26, r12
    21c6:	ac 92       	st	X, r10
    21c8:	11 96       	adiw	r26, 0x01	; 1
    21ca:	6d 01       	movw	r12, r26
    21cc:	64 17       	cp	r22, r20
    21ce:	75 07       	cpc	r23, r21
    21d0:	2c f0       	brlt	.+10     	; 0x21dc <dtoa_prf+0x276>
    21d2:	84 16       	cp	r8, r20
    21d4:	95 06       	cpc	r9, r21
    21d6:	14 f4       	brge	.+4      	; 0x21dc <dtoa_prf+0x276>
    21d8:	81 81       	ldd	r24, Z+1	; 0x01
    21da:	01 c0       	rjmp	.+2      	; 0x21de <dtoa_prf+0x278>
    21dc:	80 e3       	ldi	r24, 0x30	; 48
    21de:	41 50       	subi	r20, 0x01	; 1
    21e0:	51 09       	sbc	r21, r1
    21e2:	31 96       	adiw	r30, 0x01	; 1
    21e4:	d6 01       	movw	r26, r12
    21e6:	11 96       	adiw	r26, 0x01	; 1
    21e8:	7d 01       	movw	r14, r26
    21ea:	40 17       	cp	r20, r16
    21ec:	51 07       	cpc	r21, r17
    21ee:	24 f0       	brlt	.+8      	; 0x21f8 <dtoa_prf+0x292>
    21f0:	d6 01       	movw	r26, r12
    21f2:	8c 93       	st	X, r24
    21f4:	67 01       	movw	r12, r14
    21f6:	e2 cf       	rjmp	.-60     	; 0x21bc <dtoa_prf+0x256>
    21f8:	64 17       	cp	r22, r20
    21fa:	75 07       	cpc	r23, r21
    21fc:	39 f4       	brne	.+14     	; 0x220c <__stack+0xd>
    21fe:	96 33       	cpi	r25, 0x36	; 54
    2200:	20 f4       	brcc	.+8      	; 0x220a <__stack+0xb>
    2202:	95 33       	cpi	r25, 0x35	; 53
    2204:	19 f4       	brne	.+6      	; 0x220c <__stack+0xd>
    2206:	31 11       	cpse	r19, r1
    2208:	01 c0       	rjmp	.+2      	; 0x220c <__stack+0xd>
    220a:	81 e3       	ldi	r24, 0x31	; 49
    220c:	f6 01       	movw	r30, r12
    220e:	80 83       	st	Z, r24
    2210:	f7 01       	movw	r30, r14
    2212:	82 2f       	mov	r24, r18
    2214:	90 e2       	ldi	r25, 0x20	; 32
    2216:	88 23       	and	r24, r24
    2218:	19 f0       	breq	.+6      	; 0x2220 <__stack+0x21>
    221a:	91 93       	st	Z+, r25
    221c:	81 50       	subi	r24, 0x01	; 1
    221e:	fb cf       	rjmp	.-10     	; 0x2216 <__stack+0x17>
    2220:	f7 01       	movw	r30, r14
    2222:	e2 0f       	add	r30, r18
    2224:	f1 1d       	adc	r31, r1
    2226:	10 82       	st	Z, r1
    2228:	80 e0       	ldi	r24, 0x00	; 0
    222a:	90 e0       	ldi	r25, 0x00	; 0
    222c:	29 96       	adiw	r28, 0x09	; 9
    222e:	0f b6       	in	r0, 0x3f	; 63
    2230:	f8 94       	cli
    2232:	de bf       	out	0x3e, r29	; 62
    2234:	0f be       	out	0x3f, r0	; 63
    2236:	cd bf       	out	0x3d, r28	; 61
    2238:	df 91       	pop	r29
    223a:	cf 91       	pop	r28
    223c:	1f 91       	pop	r17
    223e:	0f 91       	pop	r16
    2240:	ff 90       	pop	r15
    2242:	ef 90       	pop	r14
    2244:	df 90       	pop	r13
    2246:	cf 90       	pop	r12
    2248:	bf 90       	pop	r11
    224a:	af 90       	pop	r10
    224c:	9f 90       	pop	r9
    224e:	8f 90       	pop	r8
    2250:	08 95       	ret

00002252 <__ftoa_engine>:
    2252:	28 30       	cpi	r18, 0x08	; 8
    2254:	08 f0       	brcs	.+2      	; 0x2258 <__ftoa_engine+0x6>
    2256:	27 e0       	ldi	r18, 0x07	; 7
    2258:	33 27       	eor	r19, r19
    225a:	da 01       	movw	r26, r20
    225c:	99 0f       	add	r25, r25
    225e:	31 1d       	adc	r19, r1
    2260:	87 fd       	sbrc	r24, 7
    2262:	91 60       	ori	r25, 0x01	; 1
    2264:	00 96       	adiw	r24, 0x00	; 0
    2266:	61 05       	cpc	r22, r1
    2268:	71 05       	cpc	r23, r1
    226a:	39 f4       	brne	.+14     	; 0x227a <__ftoa_engine+0x28>
    226c:	32 60       	ori	r19, 0x02	; 2
    226e:	2e 5f       	subi	r18, 0xFE	; 254
    2270:	3d 93       	st	X+, r19
    2272:	30 e3       	ldi	r19, 0x30	; 48
    2274:	2a 95       	dec	r18
    2276:	e1 f7       	brne	.-8      	; 0x2270 <__ftoa_engine+0x1e>
    2278:	08 95       	ret
    227a:	9f 3f       	cpi	r25, 0xFF	; 255
    227c:	30 f0       	brcs	.+12     	; 0x228a <__ftoa_engine+0x38>
    227e:	80 38       	cpi	r24, 0x80	; 128
    2280:	71 05       	cpc	r23, r1
    2282:	61 05       	cpc	r22, r1
    2284:	09 f0       	breq	.+2      	; 0x2288 <__ftoa_engine+0x36>
    2286:	3c 5f       	subi	r19, 0xFC	; 252
    2288:	3c 5f       	subi	r19, 0xFC	; 252
    228a:	3d 93       	st	X+, r19
    228c:	91 30       	cpi	r25, 0x01	; 1
    228e:	08 f0       	brcs	.+2      	; 0x2292 <__ftoa_engine+0x40>
    2290:	80 68       	ori	r24, 0x80	; 128
    2292:	91 1d       	adc	r25, r1
    2294:	df 93       	push	r29
    2296:	cf 93       	push	r28
    2298:	1f 93       	push	r17
    229a:	0f 93       	push	r16
    229c:	ff 92       	push	r15
    229e:	ef 92       	push	r14
    22a0:	19 2f       	mov	r17, r25
    22a2:	98 7f       	andi	r25, 0xF8	; 248
    22a4:	96 95       	lsr	r25
    22a6:	e9 2f       	mov	r30, r25
    22a8:	96 95       	lsr	r25
    22aa:	96 95       	lsr	r25
    22ac:	e9 0f       	add	r30, r25
    22ae:	ff 27       	eor	r31, r31
    22b0:	e0 53       	subi	r30, 0x30	; 48
    22b2:	fd 4f       	sbci	r31, 0xFD	; 253
    22b4:	99 27       	eor	r25, r25
    22b6:	33 27       	eor	r19, r19
    22b8:	ee 24       	eor	r14, r14
    22ba:	ff 24       	eor	r15, r15
    22bc:	a7 01       	movw	r20, r14
    22be:	e7 01       	movw	r28, r14
    22c0:	05 90       	lpm	r0, Z+
    22c2:	08 94       	sec
    22c4:	07 94       	ror	r0
    22c6:	28 f4       	brcc	.+10     	; 0x22d2 <__ftoa_engine+0x80>
    22c8:	36 0f       	add	r19, r22
    22ca:	e7 1e       	adc	r14, r23
    22cc:	f8 1e       	adc	r15, r24
    22ce:	49 1f       	adc	r20, r25
    22d0:	51 1d       	adc	r21, r1
    22d2:	66 0f       	add	r22, r22
    22d4:	77 1f       	adc	r23, r23
    22d6:	88 1f       	adc	r24, r24
    22d8:	99 1f       	adc	r25, r25
    22da:	06 94       	lsr	r0
    22dc:	a1 f7       	brne	.-24     	; 0x22c6 <__ftoa_engine+0x74>
    22de:	05 90       	lpm	r0, Z+
    22e0:	07 94       	ror	r0
    22e2:	28 f4       	brcc	.+10     	; 0x22ee <__ftoa_engine+0x9c>
    22e4:	e7 0e       	add	r14, r23
    22e6:	f8 1e       	adc	r15, r24
    22e8:	49 1f       	adc	r20, r25
    22ea:	56 1f       	adc	r21, r22
    22ec:	c1 1d       	adc	r28, r1
    22ee:	77 0f       	add	r23, r23
    22f0:	88 1f       	adc	r24, r24
    22f2:	99 1f       	adc	r25, r25
    22f4:	66 1f       	adc	r22, r22
    22f6:	06 94       	lsr	r0
    22f8:	a1 f7       	brne	.-24     	; 0x22e2 <__ftoa_engine+0x90>
    22fa:	05 90       	lpm	r0, Z+
    22fc:	07 94       	ror	r0
    22fe:	28 f4       	brcc	.+10     	; 0x230a <__ftoa_engine+0xb8>
    2300:	f8 0e       	add	r15, r24
    2302:	49 1f       	adc	r20, r25
    2304:	56 1f       	adc	r21, r22
    2306:	c7 1f       	adc	r28, r23
    2308:	d1 1d       	adc	r29, r1
    230a:	88 0f       	add	r24, r24
    230c:	99 1f       	adc	r25, r25
    230e:	66 1f       	adc	r22, r22
    2310:	77 1f       	adc	r23, r23
    2312:	06 94       	lsr	r0
    2314:	a1 f7       	brne	.-24     	; 0x22fe <__ftoa_engine+0xac>
    2316:	05 90       	lpm	r0, Z+
    2318:	07 94       	ror	r0
    231a:	20 f4       	brcc	.+8      	; 0x2324 <__ftoa_engine+0xd2>
    231c:	49 0f       	add	r20, r25
    231e:	56 1f       	adc	r21, r22
    2320:	c7 1f       	adc	r28, r23
    2322:	d8 1f       	adc	r29, r24
    2324:	99 0f       	add	r25, r25
    2326:	66 1f       	adc	r22, r22
    2328:	77 1f       	adc	r23, r23
    232a:	88 1f       	adc	r24, r24
    232c:	06 94       	lsr	r0
    232e:	a9 f7       	brne	.-22     	; 0x231a <__ftoa_engine+0xc8>
    2330:	84 91       	lpm	r24, Z
    2332:	10 95       	com	r17
    2334:	17 70       	andi	r17, 0x07	; 7
    2336:	41 f0       	breq	.+16     	; 0x2348 <__ftoa_engine+0xf6>
    2338:	d6 95       	lsr	r29
    233a:	c7 95       	ror	r28
    233c:	57 95       	ror	r21
    233e:	47 95       	ror	r20
    2340:	f7 94       	ror	r15
    2342:	e7 94       	ror	r14
    2344:	1a 95       	dec	r17
    2346:	c1 f7       	brne	.-16     	; 0x2338 <__ftoa_engine+0xe6>
    2348:	e6 e7       	ldi	r30, 0x76	; 118
    234a:	f2 e0       	ldi	r31, 0x02	; 2
    234c:	68 94       	set
    234e:	15 90       	lpm	r1, Z+
    2350:	15 91       	lpm	r17, Z+
    2352:	35 91       	lpm	r19, Z+
    2354:	65 91       	lpm	r22, Z+
    2356:	95 91       	lpm	r25, Z+
    2358:	05 90       	lpm	r0, Z+
    235a:	7f e2       	ldi	r23, 0x2F	; 47
    235c:	73 95       	inc	r23
    235e:	e1 18       	sub	r14, r1
    2360:	f1 0a       	sbc	r15, r17
    2362:	43 0b       	sbc	r20, r19
    2364:	56 0b       	sbc	r21, r22
    2366:	c9 0b       	sbc	r28, r25
    2368:	d0 09       	sbc	r29, r0
    236a:	c0 f7       	brcc	.-16     	; 0x235c <__ftoa_engine+0x10a>
    236c:	e1 0c       	add	r14, r1
    236e:	f1 1e       	adc	r15, r17
    2370:	43 1f       	adc	r20, r19
    2372:	56 1f       	adc	r21, r22
    2374:	c9 1f       	adc	r28, r25
    2376:	d0 1d       	adc	r29, r0
    2378:	7e f4       	brtc	.+30     	; 0x2398 <__ftoa_engine+0x146>
    237a:	70 33       	cpi	r23, 0x30	; 48
    237c:	11 f4       	brne	.+4      	; 0x2382 <__ftoa_engine+0x130>
    237e:	8a 95       	dec	r24
    2380:	e6 cf       	rjmp	.-52     	; 0x234e <__ftoa_engine+0xfc>
    2382:	e8 94       	clt
    2384:	01 50       	subi	r16, 0x01	; 1
    2386:	30 f0       	brcs	.+12     	; 0x2394 <__ftoa_engine+0x142>
    2388:	08 0f       	add	r16, r24
    238a:	0a f4       	brpl	.+2      	; 0x238e <__ftoa_engine+0x13c>
    238c:	00 27       	eor	r16, r16
    238e:	02 17       	cp	r16, r18
    2390:	08 f4       	brcc	.+2      	; 0x2394 <__ftoa_engine+0x142>
    2392:	20 2f       	mov	r18, r16
    2394:	23 95       	inc	r18
    2396:	02 2f       	mov	r16, r18
    2398:	7a 33       	cpi	r23, 0x3A	; 58
    239a:	28 f0       	brcs	.+10     	; 0x23a6 <__ftoa_engine+0x154>
    239c:	79 e3       	ldi	r23, 0x39	; 57
    239e:	7d 93       	st	X+, r23
    23a0:	2a 95       	dec	r18
    23a2:	e9 f7       	brne	.-6      	; 0x239e <__ftoa_engine+0x14c>
    23a4:	10 c0       	rjmp	.+32     	; 0x23c6 <__ftoa_engine+0x174>
    23a6:	7d 93       	st	X+, r23
    23a8:	2a 95       	dec	r18
    23aa:	89 f6       	brne	.-94     	; 0x234e <__ftoa_engine+0xfc>
    23ac:	06 94       	lsr	r0
    23ae:	97 95       	ror	r25
    23b0:	67 95       	ror	r22
    23b2:	37 95       	ror	r19
    23b4:	17 95       	ror	r17
    23b6:	17 94       	ror	r1
    23b8:	e1 18       	sub	r14, r1
    23ba:	f1 0a       	sbc	r15, r17
    23bc:	43 0b       	sbc	r20, r19
    23be:	56 0b       	sbc	r21, r22
    23c0:	c9 0b       	sbc	r28, r25
    23c2:	d0 09       	sbc	r29, r0
    23c4:	98 f0       	brcs	.+38     	; 0x23ec <__ftoa_engine+0x19a>
    23c6:	23 95       	inc	r18
    23c8:	7e 91       	ld	r23, -X
    23ca:	73 95       	inc	r23
    23cc:	7a 33       	cpi	r23, 0x3A	; 58
    23ce:	08 f0       	brcs	.+2      	; 0x23d2 <__ftoa_engine+0x180>
    23d0:	70 e3       	ldi	r23, 0x30	; 48
    23d2:	7c 93       	st	X, r23
    23d4:	20 13       	cpse	r18, r16
    23d6:	b8 f7       	brcc	.-18     	; 0x23c6 <__ftoa_engine+0x174>
    23d8:	7e 91       	ld	r23, -X
    23da:	70 61       	ori	r23, 0x10	; 16
    23dc:	7d 93       	st	X+, r23
    23de:	30 f0       	brcs	.+12     	; 0x23ec <__ftoa_engine+0x19a>
    23e0:	83 95       	inc	r24
    23e2:	71 e3       	ldi	r23, 0x31	; 49
    23e4:	7d 93       	st	X+, r23
    23e6:	70 e3       	ldi	r23, 0x30	; 48
    23e8:	2a 95       	dec	r18
    23ea:	e1 f7       	brne	.-8      	; 0x23e4 <__ftoa_engine+0x192>
    23ec:	11 24       	eor	r1, r1
    23ee:	ef 90       	pop	r14
    23f0:	ff 90       	pop	r15
    23f2:	0f 91       	pop	r16
    23f4:	1f 91       	pop	r17
    23f6:	cf 91       	pop	r28
    23f8:	df 91       	pop	r29
    23fa:	99 27       	eor	r25, r25
    23fc:	87 fd       	sbrc	r24, 7
    23fe:	90 95       	com	r25
    2400:	08 95       	ret

00002402 <strnlen_P>:
    2402:	fc 01       	movw	r30, r24
    2404:	05 90       	lpm	r0, Z+
    2406:	61 50       	subi	r22, 0x01	; 1
    2408:	70 40       	sbci	r23, 0x00	; 0
    240a:	01 10       	cpse	r0, r1
    240c:	d8 f7       	brcc	.-10     	; 0x2404 <strnlen_P+0x2>
    240e:	80 95       	com	r24
    2410:	90 95       	com	r25
    2412:	8e 0f       	add	r24, r30
    2414:	9f 1f       	adc	r25, r31
    2416:	08 95       	ret

00002418 <strnlen>:
    2418:	fc 01       	movw	r30, r24
    241a:	61 50       	subi	r22, 0x01	; 1
    241c:	70 40       	sbci	r23, 0x00	; 0
    241e:	01 90       	ld	r0, Z+
    2420:	01 10       	cpse	r0, r1
    2422:	d8 f7       	brcc	.-10     	; 0x241a <strnlen+0x2>
    2424:	80 95       	com	r24
    2426:	90 95       	com	r25
    2428:	8e 0f       	add	r24, r30
    242a:	9f 1f       	adc	r25, r31
    242c:	08 95       	ret

0000242e <fputc>:
    242e:	0f 93       	push	r16
    2430:	1f 93       	push	r17
    2432:	cf 93       	push	r28
    2434:	df 93       	push	r29
    2436:	fb 01       	movw	r30, r22
    2438:	23 81       	ldd	r18, Z+3	; 0x03
    243a:	21 fd       	sbrc	r18, 1
    243c:	03 c0       	rjmp	.+6      	; 0x2444 <fputc+0x16>
    243e:	8f ef       	ldi	r24, 0xFF	; 255
    2440:	9f ef       	ldi	r25, 0xFF	; 255
    2442:	2c c0       	rjmp	.+88     	; 0x249c <fputc+0x6e>
    2444:	22 ff       	sbrs	r18, 2
    2446:	16 c0       	rjmp	.+44     	; 0x2474 <fputc+0x46>
    2448:	46 81       	ldd	r20, Z+6	; 0x06
    244a:	57 81       	ldd	r21, Z+7	; 0x07
    244c:	24 81       	ldd	r18, Z+4	; 0x04
    244e:	35 81       	ldd	r19, Z+5	; 0x05
    2450:	42 17       	cp	r20, r18
    2452:	53 07       	cpc	r21, r19
    2454:	44 f4       	brge	.+16     	; 0x2466 <fputc+0x38>
    2456:	a0 81       	ld	r26, Z
    2458:	b1 81       	ldd	r27, Z+1	; 0x01
    245a:	9d 01       	movw	r18, r26
    245c:	2f 5f       	subi	r18, 0xFF	; 255
    245e:	3f 4f       	sbci	r19, 0xFF	; 255
    2460:	31 83       	std	Z+1, r19	; 0x01
    2462:	20 83       	st	Z, r18
    2464:	8c 93       	st	X, r24
    2466:	26 81       	ldd	r18, Z+6	; 0x06
    2468:	37 81       	ldd	r19, Z+7	; 0x07
    246a:	2f 5f       	subi	r18, 0xFF	; 255
    246c:	3f 4f       	sbci	r19, 0xFF	; 255
    246e:	37 83       	std	Z+7, r19	; 0x07
    2470:	26 83       	std	Z+6, r18	; 0x06
    2472:	14 c0       	rjmp	.+40     	; 0x249c <fputc+0x6e>
    2474:	8b 01       	movw	r16, r22
    2476:	ec 01       	movw	r28, r24
    2478:	fb 01       	movw	r30, r22
    247a:	00 84       	ldd	r0, Z+8	; 0x08
    247c:	f1 85       	ldd	r31, Z+9	; 0x09
    247e:	e0 2d       	mov	r30, r0
    2480:	19 95       	eicall
    2482:	89 2b       	or	r24, r25
    2484:	e1 f6       	brne	.-72     	; 0x243e <fputc+0x10>
    2486:	d8 01       	movw	r26, r16
    2488:	16 96       	adiw	r26, 0x06	; 6
    248a:	8d 91       	ld	r24, X+
    248c:	9c 91       	ld	r25, X
    248e:	17 97       	sbiw	r26, 0x07	; 7
    2490:	01 96       	adiw	r24, 0x01	; 1
    2492:	17 96       	adiw	r26, 0x07	; 7
    2494:	9c 93       	st	X, r25
    2496:	8e 93       	st	-X, r24
    2498:	16 97       	sbiw	r26, 0x06	; 6
    249a:	ce 01       	movw	r24, r28
    249c:	df 91       	pop	r29
    249e:	cf 91       	pop	r28
    24a0:	1f 91       	pop	r17
    24a2:	0f 91       	pop	r16
    24a4:	08 95       	ret

000024a6 <__ultoa_invert>:
    24a6:	fa 01       	movw	r30, r20
    24a8:	aa 27       	eor	r26, r26
    24aa:	28 30       	cpi	r18, 0x08	; 8
    24ac:	51 f1       	breq	.+84     	; 0x2502 <__ultoa_invert+0x5c>
    24ae:	20 31       	cpi	r18, 0x10	; 16
    24b0:	81 f1       	breq	.+96     	; 0x2512 <__ultoa_invert+0x6c>
    24b2:	e8 94       	clt
    24b4:	6f 93       	push	r22
    24b6:	6e 7f       	andi	r22, 0xFE	; 254
    24b8:	6e 5f       	subi	r22, 0xFE	; 254
    24ba:	7f 4f       	sbci	r23, 0xFF	; 255
    24bc:	8f 4f       	sbci	r24, 0xFF	; 255
    24be:	9f 4f       	sbci	r25, 0xFF	; 255
    24c0:	af 4f       	sbci	r26, 0xFF	; 255
    24c2:	b1 e0       	ldi	r27, 0x01	; 1
    24c4:	3e d0       	rcall	.+124    	; 0x2542 <__ultoa_invert+0x9c>
    24c6:	b4 e0       	ldi	r27, 0x04	; 4
    24c8:	3c d0       	rcall	.+120    	; 0x2542 <__ultoa_invert+0x9c>
    24ca:	67 0f       	add	r22, r23
    24cc:	78 1f       	adc	r23, r24
    24ce:	89 1f       	adc	r24, r25
    24d0:	9a 1f       	adc	r25, r26
    24d2:	a1 1d       	adc	r26, r1
    24d4:	68 0f       	add	r22, r24
    24d6:	79 1f       	adc	r23, r25
    24d8:	8a 1f       	adc	r24, r26
    24da:	91 1d       	adc	r25, r1
    24dc:	a1 1d       	adc	r26, r1
    24de:	6a 0f       	add	r22, r26
    24e0:	71 1d       	adc	r23, r1
    24e2:	81 1d       	adc	r24, r1
    24e4:	91 1d       	adc	r25, r1
    24e6:	a1 1d       	adc	r26, r1
    24e8:	20 d0       	rcall	.+64     	; 0x252a <__ultoa_invert+0x84>
    24ea:	09 f4       	brne	.+2      	; 0x24ee <__ultoa_invert+0x48>
    24ec:	68 94       	set
    24ee:	3f 91       	pop	r19
    24f0:	2a e0       	ldi	r18, 0x0A	; 10
    24f2:	26 9f       	mul	r18, r22
    24f4:	11 24       	eor	r1, r1
    24f6:	30 19       	sub	r19, r0
    24f8:	30 5d       	subi	r19, 0xD0	; 208
    24fa:	31 93       	st	Z+, r19
    24fc:	de f6       	brtc	.-74     	; 0x24b4 <__ultoa_invert+0xe>
    24fe:	cf 01       	movw	r24, r30
    2500:	08 95       	ret
    2502:	46 2f       	mov	r20, r22
    2504:	47 70       	andi	r20, 0x07	; 7
    2506:	40 5d       	subi	r20, 0xD0	; 208
    2508:	41 93       	st	Z+, r20
    250a:	b3 e0       	ldi	r27, 0x03	; 3
    250c:	0f d0       	rcall	.+30     	; 0x252c <__ultoa_invert+0x86>
    250e:	c9 f7       	brne	.-14     	; 0x2502 <__ultoa_invert+0x5c>
    2510:	f6 cf       	rjmp	.-20     	; 0x24fe <__ultoa_invert+0x58>
    2512:	46 2f       	mov	r20, r22
    2514:	4f 70       	andi	r20, 0x0F	; 15
    2516:	40 5d       	subi	r20, 0xD0	; 208
    2518:	4a 33       	cpi	r20, 0x3A	; 58
    251a:	18 f0       	brcs	.+6      	; 0x2522 <__ultoa_invert+0x7c>
    251c:	49 5d       	subi	r20, 0xD9	; 217
    251e:	31 fd       	sbrc	r19, 1
    2520:	40 52       	subi	r20, 0x20	; 32
    2522:	41 93       	st	Z+, r20
    2524:	02 d0       	rcall	.+4      	; 0x252a <__ultoa_invert+0x84>
    2526:	a9 f7       	brne	.-22     	; 0x2512 <__ultoa_invert+0x6c>
    2528:	ea cf       	rjmp	.-44     	; 0x24fe <__ultoa_invert+0x58>
    252a:	b4 e0       	ldi	r27, 0x04	; 4
    252c:	a6 95       	lsr	r26
    252e:	97 95       	ror	r25
    2530:	87 95       	ror	r24
    2532:	77 95       	ror	r23
    2534:	67 95       	ror	r22
    2536:	ba 95       	dec	r27
    2538:	c9 f7       	brne	.-14     	; 0x252c <__ultoa_invert+0x86>
    253a:	00 97       	sbiw	r24, 0x00	; 0
    253c:	61 05       	cpc	r22, r1
    253e:	71 05       	cpc	r23, r1
    2540:	08 95       	ret
    2542:	9b 01       	movw	r18, r22
    2544:	ac 01       	movw	r20, r24
    2546:	0a 2e       	mov	r0, r26
    2548:	06 94       	lsr	r0
    254a:	57 95       	ror	r21
    254c:	47 95       	ror	r20
    254e:	37 95       	ror	r19
    2550:	27 95       	ror	r18
    2552:	ba 95       	dec	r27
    2554:	c9 f7       	brne	.-14     	; 0x2548 <__ultoa_invert+0xa2>
    2556:	62 0f       	add	r22, r18
    2558:	73 1f       	adc	r23, r19
    255a:	84 1f       	adc	r24, r20
    255c:	95 1f       	adc	r25, r21
    255e:	a0 1d       	adc	r26, r0
    2560:	08 95       	ret

00002562 <_exit>:
    2562:	f8 94       	cli

00002564 <__stop_program>:
    2564:	ff cf       	rjmp	.-2      	; 0x2564 <__stop_program>
